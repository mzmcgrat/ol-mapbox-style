{"version":3,"file":"common.js","mappings":"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","sources":["webpack://ol-mapbox-style/webpack/runtime/chunk loaded","webpack://ol-mapbox-style/./node_modules/@mapbox/unitbezier/index.js","webpack://ol-mapbox-style/./node_modules/csscolorparser/csscolorparser.js","webpack://ol-mapbox-style/./node_modules/ieee754/index.js","webpack://ol-mapbox-style/./node_modules/mapbox-to-css-font/index.js","webpack://ol-mapbox-style/./node_modules/nanoassert/index.js","webpack://ol-mapbox-style/./node_modules/pbf/index.js","webpack://ol-mapbox-style/./node_modules/rbush/rbush.min.js","webpack://ol-mapbox-style/./node_modules/ol/Collection.js","webpack://ol-mapbox-style/./node_modules/ol/CollectionEventType.js","webpack://ol-mapbox-style/./node_modules/ol/Disposable.js","webpack://ol-mapbox-style/./node_modules/ol/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/Image.js","webpack://ol-mapbox-style/./node_modules/ol/ImageState.js","webpack://ol-mapbox-style/./node_modules/ol/ImageTile.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Map.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Composite.js","webpack://ol-mapbox-style/./node_modules/ol/MapEvent.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEvent.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEventType.js","webpack://ol-mapbox-style/./node_modules/ol/pointer/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEventHandler.js","webpack://ol-mapbox-style/./node_modules/ol/MapEventType.js","webpack://ol-mapbox-style/./node_modules/ol/MapProperty.js","webpack://ol-mapbox-style/./node_modules/ol/control/Control.js","webpack://ol-mapbox-style/./node_modules/ol/control/Attribution.js","webpack://ol-mapbox-style/./node_modules/ol/control/Rotate.js","webpack://ol-mapbox-style/./node_modules/ol/control/Zoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Property.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Interaction.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Pointer.js","webpack://ol-mapbox-style/./node_modules/ol/events/condition.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragPan.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragRotate.js","webpack://ol-mapbox-style/./node_modules/ol/render/Box.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragBox.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragZoom.js","webpack://ol-mapbox-style/./node_modules/ol/events/Key.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/KeyboardPan.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/KeyboardZoom.js","webpack://ol-mapbox-style/./node_modules/ol/Kinetic.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/PinchRotate.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/PinchZoom.js","webpack://ol-mapbox-style/./node_modules/ol/Map.js","webpack://ol-mapbox-style/./node_modules/ol/control/defaults.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/defaults.js","webpack://ol-mapbox-style/./node_modules/ol/Object.js","webpack://ol-mapbox-style/./node_modules/ol/ObjectEventType.js","webpack://ol-mapbox-style/./node_modules/ol/Observable.js","webpack://ol-mapbox-style/./node_modules/ol/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/structs/PriorityQueue.js","webpack://ol-mapbox-style/./node_modules/ol/TileQueue.js","webpack://ol-mapbox-style/./node_modules/ol/TileRange.js","webpack://ol-mapbox-style/./node_modules/ol/TileState.js","webpack://ol-mapbox-style/./node_modules/ol/ViewProperty.js","webpack://ol-mapbox-style/./node_modules/ol/centerconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/resolutionconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/View.js","webpack://ol-mapbox-style/./node_modules/ol/ViewHint.js","webpack://ol-mapbox-style/./node_modules/ol/array.js","webpack://ol-mapbox-style/./node_modules/ol/asserts.js","webpack://ol-mapbox-style/./node_modules/color-space/rgb.js","webpack://ol-mapbox-style/./node_modules/color-space/xyz.js","webpack://ol-mapbox-style/./node_modules/color-space/luv.js","webpack://ol-mapbox-style/./node_modules/color-space/lchuv.js","webpack://ol-mapbox-style/./node_modules/color-parse/node_modules/color-name/index.js","webpack://ol-mapbox-style/./node_modules/color-parse/index.js","webpack://ol-mapbox-style/./node_modules/color-space/hsl.js","webpack://ol-mapbox-style/./node_modules/ol/color.js","webpack://ol-mapbox-style/./node_modules/color-rgba/index.js","webpack://ol-mapbox-style/./node_modules/ol/colorlike.js","webpack://ol-mapbox-style/./node_modules/ol/console.js","webpack://ol-mapbox-style/./node_modules/ol/coordinate.js","webpack://ol-mapbox-style/./node_modules/ol/css.js","webpack://ol-mapbox-style/./node_modules/ol/dom.js","webpack://ol-mapbox-style/./node_modules/ol/easing.js","webpack://ol-mapbox-style/./node_modules/ol/events.js","webpack://ol-mapbox-style/./node_modules/ol/events/Event.js","webpack://ol-mapbox-style/./node_modules/ol/events/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/events/Target.js","webpack://ol-mapbox-style/./node_modules/ol/extent.js","webpack://ol-mapbox-style/./node_modules/ol/extent/Relationship.js","webpack://ol-mapbox-style/./node_modules/ol/featureloader.js","webpack://ol-mapbox-style/./node_modules/ol/geom/GeometryCollection.js","webpack://ol-mapbox-style/./node_modules/ol/format/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/format/JSONFeature.js","webpack://ol-mapbox-style/./node_modules/ol/format/GeoJSON.js","webpack://ol-mapbox-style/./node_modules/ol/functions.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Geometry.js","webpack://ol-mapbox-style/./node_modules/ol/geom/LineString.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiLineString.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiPoint.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiPolygon.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Point.js","webpack://ol-mapbox-style/./node_modules/ol/geom/LinearRing.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Polygon.js","webpack://ol-mapbox-style/./node_modules/ol/geom/SimpleGeometry.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/area.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/center.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/closest.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/contains.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/deflate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/inflate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/interiorpoint.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/interpolate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/intersectsextent.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/length.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/reverse.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/orient.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/segments.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/simplify.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/transform.js","webpack://ol-mapbox-style/./node_modules/ol/has.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Base.js","webpack://ol-mapbox-style/./node_modules/ol/expr/expression.js","webpack://ol-mapbox-style/./node_modules/ol/expr/cpu.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/style.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseVector.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Group.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Property.js","webpack://ol-mapbox-style/./node_modules/ol/layer/TileProperty.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Vector.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/VectorTile.js","webpack://ol-mapbox-style/./node_modules/ol/loadingstrategy.js","webpack://ol-mapbox-style/./node_modules/ol/math.js","webpack://ol-mapbox-style/./node_modules/ol/obj.js","webpack://ol-mapbox-style/./node_modules/ol/proj/epsg3857.js","webpack://ol-mapbox-style/./node_modules/ol/proj/epsg4326.js","webpack://ol-mapbox-style/./node_modules/ol/proj/projections.js","webpack://ol-mapbox-style/./node_modules/ol/proj/transforms.js","webpack://ol-mapbox-style/./node_modules/ol/sphere.js","webpack://ol-mapbox-style/./node_modules/ol/proj.js","webpack://ol-mapbox-style/./node_modules/ol/proj/Projection.js","webpack://ol-mapbox-style/./node_modules/ol/proj/Units.js","webpack://ol-mapbox-style/./node_modules/ol/render/Event.js","webpack://ol-mapbox-style/./node_modules/ol/render/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/render/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/render/VectorContext.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Builder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/textpath.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Executor.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Instruction.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/linechunk.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/straightchunk.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/TextBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/ZIndexContext.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Immediate.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/hitdetect.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/vector.js","webpack://ol-mapbox-style/./node_modules/ol/reproj.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Triangulation.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/common.js","webpack://ol-mapbox-style/./node_modules/ol/rotationconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/size.js","webpack://ol-mapbox-style/./node_modules/ol/source/Source.js","webpack://ol-mapbox-style/./node_modules/ol/structs/RBush.js","webpack://ol-mapbox-style/./node_modules/ol/source/VectorEventType.js","webpack://ol-mapbox-style/./node_modules/ol/source/Vector.js","webpack://ol-mapbox-style/./node_modules/ol/style/Circle.js","webpack://ol-mapbox-style/./node_modules/ol/style/Fill.js","webpack://ol-mapbox-style/./node_modules/ol/style/Icon.js","webpack://ol-mapbox-style/./node_modules/ol/style/IconImage.js","webpack://ol-mapbox-style/./node_modules/ol/style/IconImageCache.js","webpack://ol-mapbox-style/./node_modules/ol/style/Image.js","webpack://ol-mapbox-style/./node_modules/ol/style/RegularShape.js","webpack://ol-mapbox-style/./node_modules/ol/style/Stroke.js","webpack://ol-mapbox-style/./node_modules/ol/style/Style.js","webpack://ol-mapbox-style/./node_modules/ol/style/Text.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid/common.js","webpack://ol-mapbox-style/./node_modules/ol/transform.js","webpack://ol-mapbox-style/./node_modules/ol/util.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/color.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/function/convert.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/parsing_error.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/scope.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/collator.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/formatted.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/resolved_image.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/values.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/literal.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/runtime_error.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/assertion.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/format.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/image.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/coercion.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/evaluation_context.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/compound_expression.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/collator.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/within.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/is_constant.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/var.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/parsing_context.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/stops.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/step.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/interpolate.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/color_spaces.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/interpolate.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/coalesce.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/let.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/at.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/in.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/index_of.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/match.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/case.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/slice.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/comparison.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/number_format.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/length.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/result.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/function/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/properties.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/unbundle_jsonlint.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/reference/latest.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/feature_filter/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/ref_properties.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/deref.js","webpack://ol-mapbox-style/./node_modules/ol/VectorTile.js","webpack://ol-mapbox-style/./node_modules/ol/tilecoord.js","webpack://ol-mapbox-style/./node_modules/ol/tileurlfunction.js","webpack://ol-mapbox-style/./src/mapbox.js","webpack://ol-mapbox-style/./src/util.js","webpack://ol-mapbox-style/./src/text.js","webpack://ol-mapbox-style/./src/stylefunction.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseImage.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/ImageLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Image.js","webpack://ol-mapbox-style/./node_modules/ol/format/MVT.js","webpack://ol-mapbox-style/./node_modules/ol/ImageCanvas.js","webpack://ol-mapbox-style/./node_modules/ol/resolution.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Image.js","webpack://ol-mapbox-style/./node_modules/ol/source/Image.js","webpack://ol-mapbox-style/./node_modules/ol/source/common.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseTile.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/structs/LRUCache.js","webpack://ol-mapbox-style/./node_modules/ol/TileCache.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid/TileGrid.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid.js","webpack://ol-mapbox-style/./node_modules/ol/source/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/source/Raster.js","webpack://ol-mapbox-style/./node_modules/ol/source/UrlTile.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileEventType.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileImage.js","webpack://ol-mapbox-style/./node_modules/ol/net.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileJSON.js","webpack://ol-mapbox-style/./node_modules/ol/VectorRenderTile.js","webpack://ol-mapbox-style/./node_modules/ol/source/VectorTile.js","webpack://ol-mapbox-style/./src/shaders.js","webpack://ol-mapbox-style/./src/apply.js","webpack://ol-mapbox-style/./src/MapboxVectorLayer.js","webpack://ol-mapbox-style/webpack/bootstrap","webpack://ol-mapbox-style/webpack/runtime/define property getters","webpack://ol-mapbox-style/webpack/runtime/hasOwnProperty shorthand","webpack://ol-mapbox-style/webpack/runtime/make namespace object","webpack://ol-mapbox-style/webpack/runtime/jsonp chunk loading"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nmodule.exports = UnitBezier;\n\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3.0 * p1x;\n    this.bx = 3.0 * (p2x - p1x) - this.cx;\n    this.ax = 1.0 - this.cx - this.bx;\n\n    this.cy = 3.0 * p1y;\n    this.by = 3.0 * (p2y - p1y) - this.cy;\n    this.ay = 1.0 - this.cy - this.by;\n\n    this.p1x = p1x;\n    this.p1y = p2y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\n\nUnitBezier.prototype.sampleCurveX = function(t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\n\nUnitBezier.prototype.sampleCurveY = function(t) {\n    return ((this.ay * t + this.by) * t + this.cy) * t;\n};\n\nUnitBezier.prototype.sampleCurveDerivativeX = function(t) {\n    return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n};\n\nUnitBezier.prototype.solveCurveX = function(x, epsilon) {\n    if (typeof epsilon === 'undefined') epsilon = 1e-6;\n\n    var t0, t1, t2, x2, i;\n\n    // First try a few iterations of Newton's method -- normally very fast.\n    for (t2 = x, i = 0; i < 8; i++) {\n\n        x2 = this.sampleCurveX(t2) - x;\n        if (Math.abs(x2) < epsilon) return t2;\n\n        var d2 = this.sampleCurveDerivativeX(t2);\n        if (Math.abs(d2) < 1e-6) break;\n\n        t2 = t2 - x2 / d2;\n    }\n\n    // Fall back to the bisection method for reliability.\n    t0 = 0.0;\n    t1 = 1.0;\n    t2 = x;\n\n    if (t2 < t0) return t0;\n    if (t2 > t1) return t1;\n\n    while (t0 < t1) {\n\n        x2 = this.sampleCurveX(t2);\n        if (Math.abs(x2 - x) < epsilon) return t2;\n\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n\n        t2 = (t1 - t0) * 0.5 + t0;\n    }\n\n    // Failure.\n    return t2;\n};\n\nUnitBezier.prototype.solve = function(x, epsilon) {\n    return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\n","// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n  \"transparent\": [0,0,0,0], \"aliceblue\": [240,248,255,1],\n  \"antiquewhite\": [250,235,215,1], \"aqua\": [0,255,255,1],\n  \"aquamarine\": [127,255,212,1], \"azure\": [240,255,255,1],\n  \"beige\": [245,245,220,1], \"bisque\": [255,228,196,1],\n  \"black\": [0,0,0,1], \"blanchedalmond\": [255,235,205,1],\n  \"blue\": [0,0,255,1], \"blueviolet\": [138,43,226,1],\n  \"brown\": [165,42,42,1], \"burlywood\": [222,184,135,1],\n  \"cadetblue\": [95,158,160,1], \"chartreuse\": [127,255,0,1],\n  \"chocolate\": [210,105,30,1], \"coral\": [255,127,80,1],\n  \"cornflowerblue\": [100,149,237,1], \"cornsilk\": [255,248,220,1],\n  \"crimson\": [220,20,60,1], \"cyan\": [0,255,255,1],\n  \"darkblue\": [0,0,139,1], \"darkcyan\": [0,139,139,1],\n  \"darkgoldenrod\": [184,134,11,1], \"darkgray\": [169,169,169,1],\n  \"darkgreen\": [0,100,0,1], \"darkgrey\": [169,169,169,1],\n  \"darkkhaki\": [189,183,107,1], \"darkmagenta\": [139,0,139,1],\n  \"darkolivegreen\": [85,107,47,1], \"darkorange\": [255,140,0,1],\n  \"darkorchid\": [153,50,204,1], \"darkred\": [139,0,0,1],\n  \"darksalmon\": [233,150,122,1], \"darkseagreen\": [143,188,143,1],\n  \"darkslateblue\": [72,61,139,1], \"darkslategray\": [47,79,79,1],\n  \"darkslategrey\": [47,79,79,1], \"darkturquoise\": [0,206,209,1],\n  \"darkviolet\": [148,0,211,1], \"deeppink\": [255,20,147,1],\n  \"deepskyblue\": [0,191,255,1], \"dimgray\": [105,105,105,1],\n  \"dimgrey\": [105,105,105,1], \"dodgerblue\": [30,144,255,1],\n  \"firebrick\": [178,34,34,1], \"floralwhite\": [255,250,240,1],\n  \"forestgreen\": [34,139,34,1], \"fuchsia\": [255,0,255,1],\n  \"gainsboro\": [220,220,220,1], \"ghostwhite\": [248,248,255,1],\n  \"gold\": [255,215,0,1], \"goldenrod\": [218,165,32,1],\n  \"gray\": [128,128,128,1], \"green\": [0,128,0,1],\n  \"greenyellow\": [173,255,47,1], \"grey\": [128,128,128,1],\n  \"honeydew\": [240,255,240,1], \"hotpink\": [255,105,180,1],\n  \"indianred\": [205,92,92,1], \"indigo\": [75,0,130,1],\n  \"ivory\": [255,255,240,1], \"khaki\": [240,230,140,1],\n  \"lavender\": [230,230,250,1], \"lavenderblush\": [255,240,245,1],\n  \"lawngreen\": [124,252,0,1], \"lemonchiffon\": [255,250,205,1],\n  \"lightblue\": [173,216,230,1], \"lightcoral\": [240,128,128,1],\n  \"lightcyan\": [224,255,255,1], \"lightgoldenrodyellow\": [250,250,210,1],\n  \"lightgray\": [211,211,211,1], \"lightgreen\": [144,238,144,1],\n  \"lightgrey\": [211,211,211,1], \"lightpink\": [255,182,193,1],\n  \"lightsalmon\": [255,160,122,1], \"lightseagreen\": [32,178,170,1],\n  \"lightskyblue\": [135,206,250,1], \"lightslategray\": [119,136,153,1],\n  \"lightslategrey\": [119,136,153,1], \"lightsteelblue\": [176,196,222,1],\n  \"lightyellow\": [255,255,224,1], \"lime\": [0,255,0,1],\n  \"limegreen\": [50,205,50,1], \"linen\": [250,240,230,1],\n  \"magenta\": [255,0,255,1], \"maroon\": [128,0,0,1],\n  \"mediumaquamarine\": [102,205,170,1], \"mediumblue\": [0,0,205,1],\n  \"mediumorchid\": [186,85,211,1], \"mediumpurple\": [147,112,219,1],\n  \"mediumseagreen\": [60,179,113,1], \"mediumslateblue\": [123,104,238,1],\n  \"mediumspringgreen\": [0,250,154,1], \"mediumturquoise\": [72,209,204,1],\n  \"mediumvioletred\": [199,21,133,1], \"midnightblue\": [25,25,112,1],\n  \"mintcream\": [245,255,250,1], \"mistyrose\": [255,228,225,1],\n  \"moccasin\": [255,228,181,1], \"navajowhite\": [255,222,173,1],\n  \"navy\": [0,0,128,1], \"oldlace\": [253,245,230,1],\n  \"olive\": [128,128,0,1], \"olivedrab\": [107,142,35,1],\n  \"orange\": [255,165,0,1], \"orangered\": [255,69,0,1],\n  \"orchid\": [218,112,214,1], \"palegoldenrod\": [238,232,170,1],\n  \"palegreen\": [152,251,152,1], \"paleturquoise\": [175,238,238,1],\n  \"palevioletred\": [219,112,147,1], \"papayawhip\": [255,239,213,1],\n  \"peachpuff\": [255,218,185,1], \"peru\": [205,133,63,1],\n  \"pink\": [255,192,203,1], \"plum\": [221,160,221,1],\n  \"powderblue\": [176,224,230,1], \"purple\": [128,0,128,1],\n  \"rebeccapurple\": [102,51,153,1],\n  \"red\": [255,0,0,1], \"rosybrown\": [188,143,143,1],\n  \"royalblue\": [65,105,225,1], \"saddlebrown\": [139,69,19,1],\n  \"salmon\": [250,128,114,1], \"sandybrown\": [244,164,96,1],\n  \"seagreen\": [46,139,87,1], \"seashell\": [255,245,238,1],\n  \"sienna\": [160,82,45,1], \"silver\": [192,192,192,1],\n  \"skyblue\": [135,206,235,1], \"slateblue\": [106,90,205,1],\n  \"slategray\": [112,128,144,1], \"slategrey\": [112,128,144,1],\n  \"snow\": [255,250,250,1], \"springgreen\": [0,255,127,1],\n  \"steelblue\": [70,130,180,1], \"tan\": [210,180,140,1],\n  \"teal\": [0,128,128,1], \"thistle\": [216,191,216,1],\n  \"tomato\": [255,99,71,1], \"turquoise\": [64,224,208,1],\n  \"violet\": [238,130,238,1], \"wheat\": [245,222,179,1],\n  \"white\": [255,255,255,1], \"whitesmoke\": [245,245,245,1],\n  \"yellow\": [255,255,0,1], \"yellowgreen\": [154,205,50,1]}\n\nfunction clamp_css_byte(i) {  // Clamp to integer 0 .. 255.\n  i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clamp_css_float(f) {  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parse_css_int(str) {  // int or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_byte(parseFloat(str) / 100 * 255);\n  return clamp_css_byte(parseInt(str));\n}\n\nfunction parse_css_float(str) {  // float or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_float(parseFloat(str) / 100);\n  return clamp_css_float(parseFloat(str));\n}\n\nfunction css_hue_to_rgb(m1, m2, h) {\n  if (h < 0) h += 1;\n  else if (h > 1) h -= 1;\n\n  if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n  if (h * 2 < 1) return m2;\n  if (h * 3 < 2) return m1 + (m2 - m1) * (2/3 - h) * 6;\n  return m1;\n}\n\nfunction parseCSSColor(css_str) {\n  // Remove all whitespace, not compliant, but should just be more accepting.\n  var str = css_str.replace(/ /g, '').toLowerCase();\n\n  // Color keywords (and transparent) lookup.\n  if (str in kCSSColorTable) return kCSSColorTable[str].slice();  // dup.\n\n  // #abc and #abc123 syntax.\n  if (str[0] === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xfff)) return null;  // Covers NaN.\n      return [((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n              (iv & 0xf0) | ((iv & 0xf0) >> 4),\n              (iv & 0xf) | ((iv & 0xf) << 4),\n              1];\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xffffff)) return null;  // Covers NaN.\n      return [(iv & 0xff0000) >> 16,\n              (iv & 0xff00) >> 8,\n              iv & 0xff,\n              1];\n    }\n\n    return null;\n  }\n\n  var op = str.indexOf('('), ep = str.indexOf(')');\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op+1, ep-(op+1)).split(',');\n    var alpha = 1;  // To allow case fallthrough.\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'rgb':\n        if (params.length !== 3) return null;\n        return [parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha];\n      case 'hsla':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'hsl':\n        if (params.length !== 3) return null;\n        var h = (((parseFloat(params[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parse_css_float(params[1]);\n        var l = parse_css_float(params[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n        return [clamp_css_byte(css_hue_to_rgb(m1, m2, h+1/3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h-1/3) * 255),\n                alpha];\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\ntry { exports.parseCSSColor = parseCSSColor } catch(e) { }\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var fontWeights = {\n  thin: 100,\n  hairline: 100,\n  'ultra-light': 200,\n  'extra-light': 200,\n  light: 300,\n  book: 300,\n  regular: 400,\n  normal: 400,\n  plain: 400,\n  roman: 400,\n  standard: 400,\n  medium: 500,\n  'semi-bold': 600,\n  'demi-bold': 600,\n  bold: 700,\n  'extra-bold': 800,\n  'ultra-bold': 800,\n  heavy: 900,\n  black: 900,\n  'heavy-black': 900,\n  fat: 900,\n  poster: 900,\n  'ultra-black': 950,\n  'extra-black': 950\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\n\nvar fontCache = {};\n\nmodule.exports = function(fonts, size, lineHeight) {\n  var cssData = fontCache[fonts];\n  if (!cssData) {\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    var weight = 400;\n    var style = 'normal';\n    var fontFamilies = [];\n    var haveWeight, haveStyle;\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n      var font = fonts[i];\n      var parts = font.split(' ');\n      var maybeWeight = parts[parts.length - 1].toLowerCase();\n      if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n        style = haveStyle ? style : maybeWeight;\n        haveStyle = true;\n        parts.pop();\n        maybeWeight = parts[parts.length - 1].toLowerCase();\n      } else if (italicRE.test(maybeWeight)) {\n        maybeWeight = maybeWeight.replace(italicRE, '');\n        style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n        haveStyle = true;\n      }\n      for (var w in fontWeights) {\n        var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n        if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n          weight = haveWeight ? weight : fontWeights[w];\n          parts.pop();\n          if (previousPart && w.startsWith(previousPart)) {\n            parts.pop();\n          }\n          break;\n        }\n      }\n      if (!haveWeight && typeof maybeWeight == 'number') {\n        weight = maybeWeight;\n        haveWeight = true;\n      }\n      var fontFamily = parts.join(sp)\n        .replace('Klokantech Noto Sans', 'Noto Sans');\n      if (fontFamily.indexOf(sp) !== -1) {\n        fontFamily = '\"' + fontFamily + '\"';\n      }\n      fontFamilies.push(fontFamily);\n    }\n    // CSS font property: font-style font-weight font-size/line-height font-family\n    cssData = fontCache[fonts] = [style, weight, fontFamilies];\n  }\n  return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n};\n","module.exports = assert\n\nclass AssertionError extends Error {}\nAssertionError.prototype.name = 'AssertionError'\n\n/**\n * Minimal assert function\n * @param  {any} t Value to check if falsy\n * @param  {string=} m Optional assertion error message\n * @throws {AssertionError}\n */\nfunction assert (t, m) {\n  if (!t) {\n    var err = new AssertionError(m)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, assert)\n    throw err\n  }\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map),\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {toPromise} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState)),\n      ),\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false,\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default>|null} declutter Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile|null}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    let tile = this.interimTile;\n    if (!tile) {\n      //empty chain\n      return this;\n    }\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    let tile = this.interimTile;\n    if (!tile) {\n      return;\n    }\n\n    /** @type {Tile} */\n    let prev = this;\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      }\n      if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      },\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<FeatureType>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<import('./format/Feature.js').FeatureToFeatureClass<FeatureType>>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<import('./format/Feature.js').FeatureToFeatureClass<FeatureType>>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source =\n      /** @type {import(\"./source/Vector\").default<FeatureType>} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {Feature|RenderFeature} T\n * @typedef {T extends RenderFeature ? typeof RenderFeature : typeof Feature} FeatureToFeatureClass\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends RenderFeature ? RenderFeature : Feature} FeatureClassToFeature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof import('../Feature.js').default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {T}\n     */\n    this.featureClass = /** @type {T} */ (Feature);\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import('../Feature.js').FeatureLike|FeatureClassToFeature<T>>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {Feature} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<Feature>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout, object.ends),\n    false,\n    options,\n  );\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof import('../Feature.js').default]\n * @extends {FeatureFormat<T>}\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import('./Feature.js').FeatureClassToFeature<T>} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return /** @type {import('./Feature.js').FeatureClassToFeature<T>} */ (\n      this.readFeatureFromObject(\n        getObject(source),\n        this.getReadOptions(source, options),\n      )\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import('./Feature.js').FeatureClassToFeature<T>>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return /** @type {Array<import('./Feature.js').FeatureClassToFeature<T>>} */ (\n      this.readFeaturesFromObject(\n        getObject(source),\n        this.getReadOptions(source, options),\n      )\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default|import(\"../render/Feature.js\").default|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default|import(\"../render/Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  createGeometry,\n  createRenderFeature,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {\n  deflateCoordinatesArray,\n  deflateMultiCoordinatesArray,\n} from '../geom/flat/deflate.js';\nimport {getLayoutForStride} from '../geom/SimpleGeometry.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureClass} FeatureClassToFeature\n * @typedef {Object} Options\n *\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n * @property {FeatureClassToFeature} [featureClass] Feature class\n * to be used when reading features. The default is {@link module:ol/Feature~Feature}. If performance is\n * the primary concern, and features are not going to be modified or round-tripped through the format,\n * consider using {@link module:ol/render/Feature~RenderFeature}\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof Feature]\n * @extends {JSONFeature<T>}\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options<T>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    if (options.featureClass) {\n      this.featureClass = options.featureClass;\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the `geometry_name` in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Feature|RenderFeature|Array<RenderFeature>}.default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometryInternal(geoJSONFeature['geometry'], options);\n    if (this.featureClass === RenderFeature) {\n      return createRenderFeature(\n        {\n          geometry,\n          id: geoJSONFeature['id'],\n          properties: geoJSONFeature['properties'],\n        },\n        options,\n      );\n    }\n\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && geoJSONFeature['geometry_name']) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(createGeometry(geometry, options));\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature|RenderFeature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<Feature|RenderFeature|Array<RenderFeature>>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        const featureObject = this.readFeatureFromObject(\n          geoJSONFeatures[i],\n          options,\n        );\n        if (!featureObject) {\n          continue;\n        }\n        features.push(featureObject);\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features.flat();\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryObject} Geometry.\n */\nfunction readGeometryInternal(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /** @type {import(\"./Feature.js\").GeometryObject} */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object),\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object),\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object),\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object),\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object),\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return geometry;\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  const geometryObject = readGeometryInternal(object, options);\n  return createGeometry(geometryObject, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryCollectionObject} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"./Feature.js\").GeometryObject} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometryInternal(geometry, options);\n    },\n  );\n  return geometries;\n}\n\n/**\n * @param {GeoJSONPoint} object Input object.\n * @return {import(\"./Feature.js\").GeometryObject} Point geometry.\n */\nfunction readPointGeometry(object) {\n  const flatCoordinates = object['coordinates'];\n  return {\n    type: 'Point',\n    flatCoordinates,\n    layout: getLayoutForStride(flatCoordinates.length),\n  };\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} LineString geometry.\n */\nfunction readLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = coordinates.flat();\n  return {\n    type: 'LineString',\n    flatCoordinates,\n    ends: [flatCoordinates.length],\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiLineString geometry.\n */\nfunction readMultiLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const stride = coordinates[0]?.[0]?.length || 2;\n  const flatCoordinates = [];\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'MultiLineString',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPoint geometry.\n */\nfunction readMultiPointGeometry(object) {\n  const coordinates = object['coordinates'];\n  return {\n    type: 'MultiPoint',\n    flatCoordinates: coordinates.flat(),\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPolygon geometry.\n */\nfunction readMultiPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.[0].length || 2;\n  const endss = deflateMultiCoordinatesArray(\n    flatCoordinates,\n    0,\n    coordinates,\n    stride,\n  );\n  return {\n    type: 'MultiPolygon',\n    flatCoordinates,\n    ends: endss,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.length;\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'Polygon',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(\n        /** @type {import(\"../geom/Point.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {import(\"../geom/LineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {import(\"../geom/Polygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ),\n        options,\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride,\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          ),\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs,\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs,\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs, usesGeometryType),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType,\n  ),\n  [Ops.Coalesce]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs,\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs,\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs,\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 3 || parsedArgs.length === 4\n        ? NumberArrayType | ColorType\n        : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(1, 4),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n  [Ops.ToString]: createParser(\n    StringType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type,\n      )} but the following type was expected: ${typeName(typeHint)}`,\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`,\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`,\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType,\n      )} for the interpolate operation` +\n        `, got ${typeName(inputType)} instead`,\n    );\n  }\n  inputType &= expectedInputType;\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`,\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`,\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`,\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`,\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`,\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType,\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type,\n      )} instead`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`,\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type,\n        )} instead`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint,\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded,\n          )}`,\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded,\n        )}`,\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`,\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context,\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<import('../Feature').FeatureLike>|import(\"../source/VectorTile.js\").default<import('../Feature').FeatureLike>} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<import('../Feature').FeatureLike>|import(\"../source/VectorTile.js\").default<import('../Feature').FeatureLike>} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n          );\n          layerStatesArray.push(layerState);\n        },\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    const declutter = this.getLayer().getDeclutter();\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        declutter && frameState.declutter[declutter]\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null,\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @template {import('../Feature.js').FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default<FeatureType>} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature.js').FeatureLike} FeatureType\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default<FeatureType>, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup, {\n  DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedOpacity_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<ZIndexContext>}\n     */\n    this.tileClipContexts_ = null;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = !!layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent,\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        sharedExtent,\n        resolution,\n        pixelRatio,\n      );\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio,\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @param {number} [index] Render order index.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature, index) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutter,\n            index,\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature, i);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer(),\n        true,\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutter = layer.getDeclutter();\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures = declutter\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures,\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice(),\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution,\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile.getSourceTiles().reduce(function (\n        accumulator,\n        sourceTile,\n      ) {\n        return accumulator.concat(sourceTile.getFeatures());\n      }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection),\n          ),\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0,\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation,\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layerState.opacity;\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const executorGroups = tile.executorGroups[getUid(this.getLayer())];\n      const declutter = this.getLayer().getDeclutter();\n      if (executorGroups) {\n        for (let j = executorGroups.length - 1; j >= 0; --j) {\n          executorGroups[j].execute(\n            this.context,\n            [this.context.canvas.width, this.context.canvas.height],\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            DECLUTTER,\n            declutter ? frameState.declutter[declutter] : undefined,\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    const executorGroups = tiles.reduce((acc, tile, index) => {\n      tile.executorGroups[getUid(this.getLayer())].forEach((executorGroup) =>\n        acc.push({\n          executorGroup,\n          index,\n        }),\n      );\n      return acc;\n    }, []);\n\n    const executorGroupZIndexContexts = executorGroups.map(({executorGroup}) =>\n      executorGroup.getDeferredZIndexContexts(),\n    );\n    const usedZIndices = {};\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroupZindexContext =\n        executorGroups[i].executorGroup.getDeferredZIndexContexts();\n      for (const key in executorGroupZindexContext) {\n        usedZIndices[key] = true;\n      }\n    }\n    const zIndexKeys = Object.keys(usedZIndices).sort(ascending);\n    zIndexKeys.map(Number).forEach((zIndex) => {\n      executorGroupZIndexContexts.forEach((zIndexContexts, i) => {\n        if (!zIndexContexts[zIndex]) {\n          return;\n        }\n        zIndexContexts[zIndex].forEach((zIndexContext) => {\n          const {executorGroup, index} = executorGroups[i];\n          const context = executorGroup.getRenderedContext();\n          const alpha = context.globalAlpha;\n          context.globalAlpha = this.renderedOpacity_;\n          const tileClipContext = this.tileClipContexts_[index];\n          if (tileClipContext) {\n            tileClipContext.draw(context);\n          }\n          zIndexContext.draw(context);\n          if (tileClipContext) {\n            context.restore();\n          }\n          context.globalAlpha = alpha;\n          zIndexContext.clear();\n        });\n        zIndexContexts[zIndex].length = 0;\n      });\n    });\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset,\n      ),\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n    this.renderedOpacity_ =\n      frameState.layerStatesArray[frameState.layerIndex].opacity;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.renderedOpacity_;\n    const declutter = layer.getDeclutter();\n    const replayTypes = declutter\n      ? VECTOR_REPLAYS[renderMode].filter((type) => !DECLUTTER.includes(type))\n      : VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection,\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    const tileClipContexts = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes),\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      let clipContext = context;\n      let tileClipContext;\n      if (currentClip) {\n        tileClipContext = new ZIndexContext();\n        clipContext = tileClipContext.getContext();\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                clipContext.save();\n                contextSaved = true;\n              }\n              clipContext.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              clipContext.moveTo(currentClip[0], currentClip[1]);\n              clipContext.lineTo(currentClip[2], currentClip[3]);\n              clipContext.lineTo(currentClip[4], currentClip[5]);\n              clipContext.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              clipContext.moveTo(clip[6], clip[7]);\n              clipContext.lineTo(clip[4], clip[5]);\n              clipContext.lineTo(clip[2], clip[3]);\n              clipContext.lineTo(clip[0], clip[1]);\n              clipContext.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          [context.canvas.width, context.canvas.height],\n          transform,\n          rotation,\n          hifi,\n          replayTypes,\n          frameState.declutter === null ? undefined : frameState.declutter,\n        );\n      }\n      if (contextSaved) {\n        if (clipContext === context) {\n          clipContext.restore();\n        } else {\n          tileClipContexts[i] = tileClipContext;\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n    this.tileClipContexts_ = tileClipContexts;\n    if (!frameState.declutter) {\n      this.renderDeferredInternal(frameState);\n    }\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio),\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        [\n          context.canvas.width * renderScale,\n          context.canvas.height * renderScale,\n        ],\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()],\n        null,\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views, but get lifted above all polygon and line elements.\n *  * `'vector'`: Everything is rendered as vectors and the original render order is maintained. Use\n *    this mode for improved performance and visual epxerience on vector tile layers with not too many\n *    rendered features (e.g. for highlighting a subset of features of another layer with the same\n *    source).\n * @property {import(\"../source/VectorTile.js\").default<FeatureType>} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default<FeatureType>, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Options<FeatureType>} */ (\n      Object.assign({}, options)\n    );\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(baseOptions);\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    assert(\n      renderMode == 'hybrid' || renderMode == 'vector',\n      \"`renderMode` must be `'hybrid'` or `'vector'`\",\n    );\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    let i, ii, j, jj, replays;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.instructions_[this.zIndex + this.offset_].push(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection,\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ,\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent,\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent,\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]],\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload(),\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey],\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        ),\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback,\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this,\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureClass} [feature] Feature.\n   * @param {Array<FeatureClass>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureClass|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureClass>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<import(\"../format/Feature.js\").FeatureToFeatureClass<FeatureType>>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<FeatureType>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type Array<FeatureType> */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    const removedFeatures = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      const removedFeature = this.removeFeatureInternal(feature);\n      if (removedFeature) {\n        removedFeatures.push(removedFeature);\n      }\n    }\n    if (removedFeatures.length > 0) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {FeatureType|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      const indexedFeature = this.idIndex_[id];\n      if (\n        feature instanceof RenderFeature &&\n        Array.isArray(indexedFeature) &&\n        indexedFeature.includes(feature)\n      ) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n      } else if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader<FeatureType>} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          this.addEventListener(EventType.CHANGE, function onChange() {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          });\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '9.2.2';\n","//      \n\nimport {parseCSSColor} from 'csscolorparser';\n\n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n              \n              \n              \n              \n\n    constructor(r        , g        , b        , a         = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n                        \n                        \n                              \n                      \n                       \n\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input                        )               {\n        if (!input) {\n            return undefined;\n        }\n\n        if (input instanceof Color) {\n            return input;\n        }\n\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n\n        const rgba = parseCSSColor(input);\n        if (!rgba) {\n            return undefined;\n        }\n\n        return new Color(\n            rgba[0] / 255 * rgba[3],\n            rgba[1] / 255 * rgba[3],\n            rgba[2] / 255 * rgba[3],\n            rgba[3]\n        );\n    }\n\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString()         {\n        const [r, g, b, a] = this.toArray();\n        return `rgba(${Math.round(r)},${Math.round(g)},${Math.round(b)},${a})`;\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 255].\n     */\n    toArray()                                   {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r * 255 / a,\n            g * 255 / a,\n            b * 255 / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns a RGBA array of float values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01()                                   {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r / a,\n            g / a,\n            b / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, premultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01PremultipliedAlpha()                                   {\n        const {r, g, b, a} = this;\n        return [\n            r,\n            g,\n            b,\n            a\n        ];\n    }\n}\n\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\n\nexport default Color;\n","//      \n\nimport assert from 'assert';\n\n                                                                 \n                                                         \n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\n\nexport default function convertFunction(parameters     , propertySpec                            )                          {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\n\nfunction convertIdentityFunction(parameters, propertySpec)               {\n    const get = ['get', parameters.property];\n\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\n\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl': return 'interpolate-hcl';\n    case 'lab': return 'interpolate-lab';\n    default: return 'interpolate';\n    }\n}\n\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n\n        return expression;\n    } else {\n        const expression = ['step', ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n\n        fixupDegenerateStepCurve(expression);\n\n        return expression;\n    }\n}\n\nfunction coalesce(a, b) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n}\n\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\n\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        assert(parameters.stops.length > 0 && parameters.stops.length <= 2);\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? [\"linear\"] : [\"exponential\", base],\n            [\"number\", get]\n        ];\n\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\n\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? [\"linear\"] : [\"exponential\", base], input];\n\n    } else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n\n    fixupDegenerateStepCurve(expression);\n\n    return expression;\n}\n\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\n\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\n\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        assert(propertySpec.expression);\n        return (propertySpec.expression     ).interpolated ? 'exponential' : 'interval';\n    }\n}\n\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nexport function convertTokenString(s        )                                   {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0) result.push(literal);\n        result.push(['get', match[1]]);\n    }\n\n    if (result.length === 1) {\n        return s;\n    }\n\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n\n    return result;\n}\n\n","//      \n\nclass ParsingError extends Error {\n                \n                    \n    constructor(key        , message        ) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\nexport default ParsingError;\n","//      \n\n                                                \n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n                   \n                                        \n    constructor(parent        , bindings                              = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n\n    concat(bindings                             )        {\n        return new Scope(this, bindings);\n    }\n\n    get(name        )             {\n        if (this.bindings[name]) { return this.bindings[name]; }\n        if (this.parent) { return this.parent.get(name); }\n        throw new Error(`${name} not found in scope.`);\n    }\n\n    has(name        )          {\n        if (this.bindings[name]) return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nexport default Scope;\n","//      \n\n                                         \n                                             \n                                             \n                                               \n                                           \n                                             \n                                           \n                                           \n                                                 \n                                                   \n                                                           \n\n                                                                            \n\n                  \n               \n                 \n                 \n                  \n                \n                 \n                \n                                                           \n                \n                   \n                    \n                      \n\n                         \n                  \n                   \n              \n \n\n                                                                                      \n\nexport const NullType = {kind: 'null'};\nexport const NumberType = {kind: 'number'};\nexport const StringType = {kind: 'string'};\nexport const BooleanType = {kind: 'boolean'};\nexport const ColorType = {kind: 'color'};\nexport const ObjectType = {kind: 'object'};\nexport const ValueType = {kind: 'value'};\nexport const ErrorType = {kind: 'error'};\nexport const CollatorType = {kind: 'collator'};\nexport const FormattedType = {kind: 'formatted'};\nexport const ResolvedImageType = {kind: 'resolvedImage'};\n\nexport function array(itemType      , N         )            {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\n\nexport function toString(type      )         {\n    if (type.kind === 'array') {\n        const itemType = toString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    } else {\n        return type.kind;\n    }\n}\n\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    ResolvedImageType\n];\n\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nexport function checkSubtype(expected      , t      )          {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n\n    return `Expected ${toString(expected)} but found ${toString(t)} instead.`;\n}\n\nexport function isValidType(provided      , allowedTypes             )          {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\n\nexport function isValidNativeType(provided     , allowedTypes                   )          {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n","//      \n\n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\n\n                   \n                                  \n  \n\n                             \n                 \n                                    \n                                 \n                     \n\n            \n                                    \n                                 \n                     \n\n                                           \n\n                           \n \n\n                        \n                                          \n                              \n                                                         \n                                \n                      \n                                           \n \n\nexport default class Collator {\n                          \n                                                        \n                            \n\n    constructor(caseSensitive         , diacriticSensitive         , locale               ) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [],\n            {sensitivity: this.sensitivity, usage: 'search'});\n    }\n\n    compare(lhs        , rhs        )         {\n        return this.collator.compare(lhs, rhs);\n    }\n\n    resolvedLocale()         {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n","//      \n                                             \n                                                            \n\nexport class FormattedSection {\n                 \n                                \n                         \n                             \n                            \n\n    constructor(text        , image                      , scale               , fontStack               , textColor              ) {\n        // combine characters so that diacritic marks are not separate code points\n        this.text = text.normalize ? text.normalize() : text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\n\nexport default class Formatted {\n                                      \n\n    constructor(sections                         ) {\n        this.sections = sections;\n    }\n\n    static fromString(unformatted        )            {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n\n    isEmpty()          {\n        if (this.sections.length === 0) return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n                                             (section.image && section.image.name.length !== 0));\n    }\n\n    static factory(text                    )            {\n        if (text instanceof Formatted) {\n            return text;\n        } else {\n            return Formatted.fromString(text);\n        }\n    }\n\n    toString()         {\n        if (this.sections.length === 0) return '';\n        return this.sections.map(section => section.text).join('');\n    }\n\n    serialize()               {\n        const serialized               = [\"format\"];\n        for (const section of this.sections) {\n            if (section.image) {\n                serialized.push([\"image\", section.image.name]);\n                continue;\n            }\n            serialized.push(section.text);\n            const options                           = {};\n            if (section.fontStack) {\n                options[\"text-font\"] = [\"literal\", section.fontStack.split(',')];\n            }\n            if (section.scale) {\n                options[\"font-scale\"] = section.scale;\n            }\n            if (section.textColor) {\n                options[\"text-color\"] = ([\"rgba\"]              ).concat(section.textColor.toArray());\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","//      \n\n                                    \n                 \n                      \n  \n\nexport default class ResolvedImage {\n                 \n                       \n\n    constructor(options                      ) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n\n    toString()         {\n        return this.name;\n    }\n\n    static fromString(name        )                       {\n        if (!name) return null; // treat empty values as no image\n        return new ResolvedImage({name, available: false});\n    }\n\n    serialize()                {\n        return [\"image\", this.name];\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport Color from '../util/color.js';\nimport Collator from './types/collator.js';\nimport Formatted from './types/formatted.js';\nimport ResolvedImage from './types/resolved_image.js';\nimport {NullType, NumberType, StringType, BooleanType, ColorType, ObjectType, ValueType, CollatorType, FormattedType, ResolvedImageType, array} from './types.js';\n\n                                     \n\nexport function validateRGBA(r       , g       , b       , a        )                {\n    if (!(\n        typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255\n    )) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n\n    if (!(\n        typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1)\n    )) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n\n    return null;\n}\n\n                                                                                                                                                  \n\nexport function isValue(mixed       )          {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color) {\n        return true;\n    } else if (mixed instanceof Collator) {\n        return true;\n    } else if (mixed instanceof Formatted) {\n        return true;\n    } else if (mixed instanceof ResolvedImage) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function typeOf(value       )       {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType                         ;\n\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n\n        return array(itemType || ValueType, length);\n    } else {\n        assert(typeof value === 'object');\n        return ObjectType;\n    }\n}\n\nexport function toString(value       )         {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color || value instanceof Formatted || value instanceof ResolvedImage) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nexport {Color, Collator};\n","//      \n\nimport assert from 'assert';\nimport {isValue, typeOf, Color} from '../values.js';\nimport Formatted from '../types/formatted.js';\n\n                                      \n                                         \n                                                                       \n                                                        \n\nclass Literal                       {\n               \n                 \n\n    constructor(type      , value       ) {\n        this.type = type;\n        this.value = value;\n    }\n\n    static parse(args                       , context                )                 {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n\n        if (!isValue(args[1]))\n            return context.error(`invalid value`);\n\n        const value = (args[1]     );\n        let type = typeOf(value);\n\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (\n            type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)\n        ) {\n            type = expected;\n        }\n\n        return new Literal(type, value);\n    }\n\n    evaluate()        {\n        return this.value;\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return [\"literal\", this.value];\n        } else if (this.value instanceof Color) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return [\"rgba\"].concat(this.value.toArray());\n        } else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        } else {\n            assert(this.value === null ||\n                typeof this.value === 'string' ||\n                typeof this.value === 'number' ||\n                typeof this.value === 'boolean');\n            return (this.value     );\n        }\n    }\n}\n\nexport default Literal;\n","//      \n\nclass RuntimeError {\n                 \n                    \n\n    constructor(message        ) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n\n    toJSON()         {\n        return this.message;\n    }\n}\n\nexport default RuntimeError;\n","//      \n\nimport assert from 'assert';\n\nimport {\n    ObjectType,\n    ValueType,\n    StringType,\n    NumberType,\n    BooleanType,\n    checkSubtype,\n    toString,\n    array\n} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nconst types = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\n\nclass Assertion                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        let i = 1;\n        let type;\n\n        const name         = (args[0]     );\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))\n                ) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n\n            type = array(itemType, N);\n        } else {\n            assert(types[name], name);\n            type = types[name];\n        }\n\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Assertion(type, parsed);\n    }\n\n    evaluate(ctx                   )             {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${toString(this.type)}, but found ${toString(typeOf(value))} instead.`);\n            }\n        }\n\n        assert(false);\n        return null;\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' ||\n                itemType.kind === 'number' ||\n                itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    serialized.push(N);\n                }\n            }\n        }\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\n\nexport default Assertion;\n","//      \n\nimport {NumberType, ValueType, FormattedType, array, StringType, ColorType, ResolvedImageType} from '../types.js';\nimport Formatted, {FormattedSection} from '../types/formatted.js';\nimport {toString, typeOf} from '../values.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\n                                   \n                                                            \n                                                        \n                        \n                             \n                            \n                                 \n \n\nexport default class FormatExpression                       {\n               \n                                                \n\n    constructor(sections                                   ) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2) {\n            return context.error(`Expected at least one argument.`);\n        }\n\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object')  {\n            return context.error(`First argument must be an image or text section.`);\n        }\n\n        const sections                                    = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = (args[i]     );\n\n            if (nextTokenMayBeObject && typeof arg === \"object\" && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale) return null;\n                }\n\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font) return null;\n                }\n\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor) return null;\n                }\n\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n            } else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content) return null;\n\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error(`Formatted text type must be 'string', 'value', 'image' or 'null'.`);\n\n                nextTokenMayBeObject = true;\n                sections.push({content, scale: null, font: null, textColor: null});\n            }\n        }\n\n        return new FormatExpression(sections);\n    }\n\n    evaluate(ctx                   )            {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n\n            return new FormattedSection(\n                    toString(evaluatedContent),\n                    null,\n                    section.scale ? section.scale.evaluate(ctx) : null,\n                    section.font ? section.font.evaluate(ctx).join(',') : null,\n                    section.textColor ? section.textColor.evaluate(ctx) : null\n            );\n        };\n\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n\n    eachChild(fn                         ) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n\n    outputDefined()          {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n\n    serialize()                       {\n        const serialized = [\"format\"];\n        for (const section of this.sections) {\n            serialized.push(section.content.serialize());\n            const options = {};\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            if (section.textColor) {\n                options['text-color'] = section.textColor.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","//      \n\nimport {ResolvedImageType, StringType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\nexport default class ImageExpression                       {\n               \n                      \n\n    constructor(input            ) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 2) {\n            return context.error(`Expected two arguments.`);\n        }\n\n        const name = context.parse(args[1], 1, StringType);\n        if (!name) return context.error(`No image name provided.`);\n\n        return new ImageExpression(name);\n    }\n\n    evaluate(ctx                   )                       {\n        const evaluatedImageName = this.input.evaluate(ctx);\n\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages) value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n\n        return value;\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n\n    serialize()                       {\n        return [\"image\", this.input.serialize()];\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport {BooleanType, ColorType, NumberType, StringType, ValueType} from '../types.js';\nimport {Color, toString as valueToString, validateRGBA} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\nimport Formatted from '../types/formatted.js';\nimport FormatExpression from '../definitions/format.js';\nimport ImageExpression from '../definitions/image.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        const name         = (args[0]     );\n        assert(types[name], name);\n\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const type = types[name];\n\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Coercion(type, parsed);\n    }\n\n    evaluate(ctx                   )                                                                       {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        } else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color) {\n                    return input;\n                } else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c) return c;\n                } else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                    } else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        return new Color((input[0]     ) / 255, (input[1]     ) / 255, (input[2]     ) / 255, (input[3]     ));\n                    }\n                }\n            }\n            throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : String(JSON.stringify(input))}'`);\n        } else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                value = arg.evaluate(ctx);\n                if (value === null) return 0;\n                const num = Number(value);\n                if (isNaN(num)) continue;\n                return num;\n            }\n            throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n        } else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'resolvedImage') {\n            return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else {\n            return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{content: this.args[0], scale: null, font: null, textColor: null}]).serialize();\n        }\n\n        if (this.type.kind === 'resolvedImage') {\n            return new ImageExpression(this.args[0]).serialize();\n        }\n\n        const serialized = [`to-${this.type.kind}`];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coercion;\n","//      \n\nimport {Color} from './values.js';\n\n                                                \n                                                           \n                                                                        \n                                                             \n                                                                    \n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nclass EvaluationContext {\n                              \n                      \n                                \n                                        \n                                    \n                                      \n                             \n                                              \n\n                                            \n\n    constructor() {\n        this.globals = (null     );\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n        this.featureTileCoord = null;\n        this.featureDistanceData = null;\n    }\n\n    id()                {\n        return this.feature && this.feature.id !== undefined ? this.feature.id : null;\n    }\n\n    geometryType()                {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n\n    geometry()                       {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n\n    canonicalID()                         {\n        return this.canonical;\n    }\n\n    properties()                  {\n        return (this.feature && this.feature.properties) || {};\n    }\n\n    distanceFromCenter()         {\n        if (this.featureTileCoord && this.featureDistanceData) {\n\n            const c = this.featureDistanceData.center;\n            const scale = this.featureDistanceData.scale;\n            const {x, y} = this.featureTileCoord;\n\n            // Calculate the distance vector `d` (left handed)\n            const dX = x * scale - c[0];\n            const dY = y * scale - c[1];\n\n            // The bearing vector `b` (left handed)\n            const bX = this.featureDistanceData.bearing[0];\n            const bY = this.featureDistanceData.bearing[1];\n\n            // Distance is calculated as `dot(d, v)`\n            const dist = (bX * dX + bY * dY);\n            return dist;\n        }\n\n        return 0;\n    }\n\n    parseColor(input        )         {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input);\n        }\n        return cached;\n    }\n}\n\nexport default EvaluationContext;\n","//      \n\nimport {toString} from './types.js';\n\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport assert from 'assert';\n\n                                                                    \n                                     \n                                       \n\n                                       \n                                       \n                                                                \n                                               \n                                                            \n\nclass CompoundExpression                       {\n                 \n               \n                        \n                            \n\n                                                   \n\n    constructor(name        , type      , evaluate          , args                   ) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n\n    evaluate(ctx                   )        {\n        return this._evaluate(ctx, this.args);\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()               {\n        return [this.name].concat(this.args.map(arg => arg.serialize()));\n    }\n\n    static parse(args                       , context                )              {\n        const op         = (args[0]     );\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n\n        const overloads = availableOverloads.filter(([signature]) => (\n            !Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n\n        let signatureContext                 = (null     );\n\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, context.path, null, context.scope);\n\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs                    = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n\n        assert(!signatureContext || signatureContext.errors.length > 0);\n\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params))\n                .join(' | ');\n\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed) return null;\n                actualTypes.push(toString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n\n        return null;\n    }\n\n    static register(\n        registry                    ,\n        definitions                            \n    ) {\n        assert(!CompoundExpression.definitions);\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\n\nfunction stringifySignature(signature           )         {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(toString).join(', ')})`;\n    } else {\n        return `(${toString(signature.type)}...)`;\n    }\n}\n\nexport default CompoundExpression;\n","//      \n\nimport {StringType, BooleanType, CollatorType} from '../types.js';\nimport Collator from '../types/collator.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\nexport default class CollatorExpression                       {\n               \n                              \n                                   \n                              \n\n    constructor(caseSensitive            , diacriticSensitive            , locale                   ) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const options = (args[1]     );\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`Collator options argument must be an object.`);\n\n        const caseSensitive = context.parse(\n            options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive) return null;\n\n        const diacriticSensitive = context.parse(\n            options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive) return null;\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n\n    evaluate(ctx                   )           {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n\n    outputDefined()          {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n\n    serialize()                       {\n        const options = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return [\"collator\", options];\n    }\n}\n","//      \n\nimport {isValue} from '../values.js';\n                                      \nimport {BooleanType} from '../types.js';\n                                                                       \n                                                        \n                                                              \n                                                                                        \n                                                                \n\n                                                             \n\n// minX, minY, maxX, maxY\n                                             \nconst EXTENT = 8192;\n\nfunction updateBBox(bbox      , coord                  ) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\n\nfunction mercatorXfromLng(lng        ) {\n    return (180 + lng) / 360;\n}\n\nfunction mercatorYfromLat(lat        ) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\n\nfunction boxWithinBox(bbox1      , bbox2      ) {\n    if (bbox1[0] <= bbox2[0]) return false;\n    if (bbox1[2] >= bbox2[2]) return false;\n    if (bbox1[1] <= bbox2[1]) return false;\n    if (bbox1[3] >= bbox2[3]) return false;\n    return true;\n}\n\nfunction getTileCoordinates(p, canonical                 ) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\n\nfunction onBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\n\nfunction rayIntersect(p, p1, p2) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\n\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings) {\n    let inside = false;\n    for (let i = 0, len = rings.length; i < len; i++) {\n        const ring = rings[i];\n        for (let j = 0, len2 = ring.length; j < len2 - 1; j++) {\n            if (onBoundary(point, ring[j], ring[j + 1])) return false;\n            if (rayIntersect(point, ring[j], ring[j + 1])) inside = !inside;\n        }\n    }\n    return inside;\n}\n\nfunction pointWithinPolygons(point, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction perp(v1, v2) {\n    return (v1[0] * v2[1] - v1[1] * v2[0]);\n}\n\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction  twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = (x1 * y3 - x3 * y1);\n    const det2 =  (x2 * y3 - x3 * y2);\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0)) return true;\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction lineIntersectLine(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0) return false;\n\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b)) return true;\n    return false;\n}\n\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (lineIntersectLine(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (let i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction lineStringWithinPolygons(line, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction getTilePolygon(coordinates, bbox      , canonical                 ) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\n\nfunction getTilePolygons(coordinates, bbox, canonical                 ) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\n\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\n\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\n\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical                 ) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints = [];\n    if (!geometry) return tilePoints;\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\n\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical                 ) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines = [];\n    if (!geometry) return tileLines;\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\n\nfunction pointsWithinPolygons(ctx                   , polygonGeometry                 ) {\n    const pointBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons)) return false;\n        }\n    }\n\n    return true;\n}\n\nfunction linesWithinPolygons(ctx                   , polygonGeometry                 ) {\n    const lineBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons)) return false;\n        }\n    }\n    return true;\n}\n\nclass Within                       {\n               \n                    \n                                \n\n    constructor(geojson         , geometries                 ) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n\n    static parse(args                       , context                )          {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = (args[1]        );\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    const type = geojson.features[i].geometry.type;\n                    if (type === 'Polygon' || type === 'MultiPolygon') {\n                        return new Within(geojson, geojson.features[i].geometry);\n                    }\n                }\n            } else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            } else if (geojson.type  === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error(`'within' expression requires valid geojson object that contains polygon geometry type.`);\n    }\n\n    evaluate(ctx                   )          {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        return [\"within\", this.geojson];\n    }\n\n}\n\nexport default Within;\n","//      \n\nimport CompoundExpression from './compound_expression.js';\nimport Within from './definitions/within.js';\n                                                \n\nfunction isFeatureConstant(e            )          {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (\n            e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id'\n        ) {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n\n    if (e instanceof Within) {\n        return false;\n    }\n\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isStateConstant(e            )          {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isGlobalPropertyConstant(e            , properties               )          {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) { return false; }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) { result = false; }\n    });\n    return result;\n}\n\nexport {isFeatureConstant, isGlobalPropertyConstant, isStateConstant};\n","//      \n\n                                      \n                                                 \n                                                        \n                                                               \n\nclass Var                       {\n               \n                 \n                                \n\n    constructor(name        , boundExpression            ) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n\n    static parse(args                       , context                )             {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error(`'var' expression requires exactly one string literal argument.`);\n\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n\n        return new Var(name, context.scope.get(name));\n    }\n\n    evaluate(ctx                   )      {\n        return this.boundExpression.evaluate(ctx);\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                {\n        return [\"var\", this.name];\n    }\n}\n\nexport default Var;\n","//      \n\nimport Scope from './scope.js';\nimport {checkSubtype} from './types.js';\nimport ParsingError from './parsing_error.js';\nimport Literal from './definitions/literal.js';\nimport Assertion from './definitions/assertion.js';\nimport Coercion from './definitions/coercion.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport CollatorExpression from './definitions/collator.js';\nimport Within from './definitions/within.js';\nimport {isGlobalPropertyConstant, isFeatureConstant} from './is_constant.js';\nimport Var from './definitions/var.js';\n\n                                                                    \n                                     \n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n                                 \n                        \n                \n                 \n                                \n\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n                        \n\n    constructor(\n        registry                    ,\n        path                = [],\n        expectedType       ,\n        scope        = new Scope(),\n        errors                      = []\n    ) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n    }\n\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(\n        expr       ,\n        index         ,\n        expectedType        ,\n        bindings                              ,\n        options                                                  = {}\n    )              {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n\n    _parse(expr       , options                                                 )              {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n\n        function annotate(parsed, type, typeAnnotation                              ) {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n            }\n\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed) return null;\n\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n\n                return parsed;\n            }\n\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        } else if (typeof expr === 'undefined') {\n            return this.error(`'undefined' value invalid. Use null instead.`);\n        } else if (typeof expr === 'object') {\n            return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n        } else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index        , expectedType        , bindings                              )                 {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(\n            this.registry,\n            path,\n            expectedType || null,\n            scope,\n            this.errors\n        );\n    }\n\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error        , ...keys               ) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ParsingError(key, error));\n    }\n\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected      , t      )          {\n        const error = checkSubtype(expected, t);\n        if (error) this.error(error);\n        return error;\n    }\n}\n\nexport default ParsingContext;\n\nfunction isConstant(expression            ) {\n    if (expression instanceof Var) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    } else if (expression instanceof Within) {\n        return false;\n    }\n\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'line-progress', 'sky-radial-progress', 'accumulated', 'is-supported-script', 'pitch', 'distance-from-center']);\n}\n","//      \n\nimport RuntimeError from './runtime_error.js';\n\n                                                \n\n                                                \n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nexport function findStopLessThanOrEqualTo(stops               , input        )         {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n\n    return 0;\n}\n","//      \n\nimport {NumberType} from '../types.js';\n\nimport {findStopLessThanOrEqualTo} from '../stops.js';\n\n                                       \n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Step                       {\n               \n\n                      \n                          \n                               \n\n    constructor(type      , input            , stops       ) {\n        this.type = type;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static parse(args                       , context                )        {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input) return null;\n\n        const stops        = [];\n\n        let outputType       = (null     );\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n\n            const labelKey = i;\n            const valueKey = i + 1;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        return new Step(outputType, input, stops);\n    }\n\n    evaluate(ctx                   )      {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx)     )        );\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize()                       {\n        const serialized = [\"step\", this.input.serialize()];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n\nexport default Step;\n","//      \n\nimport Color from './color.js';\n\nexport function number(a        , b        , t        )         {\n    return (a * (1 - t)) + (b * t);\n}\n\nexport function color(from       , to       , t        )        {\n    return new Color(\n        number(from.r, to.r, t),\n        number(from.g, to.g, t),\n        number(from.b, to.b, t),\n        number(from.a, to.a, t)\n    );\n}\n\nexport function array(from               , to               , t        )                {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n","//      \n\nimport Color from './color.js';\n\nimport {number as interpolateNumber} from './interpolate.js';\n\n                 \n              \n              \n              \n                 \n  \n\n                 \n              \n              \n              \n                 \n  \n\n// Constants\nconst Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1,\n    deg2rad = Math.PI / 180,\n    rad2deg = 180 / Math.PI;\n\n// Utilities\nfunction xyz2lab(t        ) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t        ) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x        ) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x        ) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\n// LAB\nfunction rgbToLab(rgbColor       )           {\n    const b = rgb2xyz(rgbColor.r),\n        a = rgb2xyz(rgbColor.g),\n        l = rgb2xyz(rgbColor.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\n\nfunction labToRgb(labColor          )        {\n    let y = (labColor.l + 16) / 116,\n        x = isNaN(labColor.a) ? y : y + labColor.a / 500,\n        z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color(\n        xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        labColor.alpha\n    );\n}\n\nfunction interpolateLab(from          , to          , t        )           {\n    return {\n        l: interpolateNumber(from.l, to.l, t),\n        a: interpolateNumber(from.a, to.a, t),\n        b: interpolateNumber(from.b, to.b, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\n// HCL\nfunction rgbToHcl(rgbColor       )           {\n    const {l, a, b} = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\n\nfunction hclToRgb(hclColor          )        {\n    const h = hclColor.h * deg2rad,\n        c = hclColor.c,\n        l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\n\nfunction interpolateHue(a        , b        , t        ) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\n\nfunction interpolateHcl(from          , to          , t        )           {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: interpolateNumber(from.c, to.c, t),\n        l: interpolateNumber(from.l, to.l, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\nexport const lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\n\nexport const hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n","//      \n\nimport UnitBezier from '@mapbox/unitbezier';\n\nimport * as interpolate from '../../util/interpolate.js';\nimport {toString, NumberType, ColorType} from '../types.js';\nimport {findStopLessThanOrEqualTo} from '../stops.js';\nimport {hcl, lab} from '../../util/color_spaces.js';\nimport Color from '../../util/color.js';\n\n                                       \n                                                                       \n                                                        \n                                                              \n                                      \n\n                               \n                        \n                                           \n                                                                              \n\nclass Interpolate                       {\n               \n\n                                                                    \n                                     \n                      \n                          \n                               \n\n    constructor(type      , operator                                                       , interpolation                   , input            , stops       ) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static interpolationFactor(interpolation                   , input        , lower        , upper        )         {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n\n    static parse(args                       , context                )               {\n        let [operator, interpolation, input, ...rest] = args;\n\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error(`Expected an interpolation type expression.`, 1);\n        }\n\n        if (interpolation[0] === 'linear') {\n            interpolation = {name: 'linear'};\n        } else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (\n                controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)\n            ) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: (controlPoints     )\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        input = context.parse(input, 2, NumberType);\n        if (!input) return null;\n\n        const stops        = [];\n\n        let outputType       = (null     );\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        if (outputType.kind !== 'number' &&\n            outputType.kind !== 'color' &&\n            !(\n                outputType.kind === 'array' &&\n                outputType.itemType.kind === 'number' &&\n                typeof outputType.N === 'number'\n            )\n        ) {\n            return context.error(`Type ${toString(outputType)} is not interpolatable.`);\n        }\n\n        return new Interpolate(outputType, (operator     ), interpolation, input, stops);\n    }\n\n    evaluate(ctx                   )        {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx)     )        );\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n\n        if (this.operator === 'interpolate') {\n            return (interpolate[this.type.kind.toLowerCase()]     )(outputLower, outputUpper, t); // eslint-disable-line import/namespace\n        } else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        } else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize()                       {\n        let interpolation;\n        if (this.interpolation.name === 'linear') {\n            interpolation = [\"linear\"];\n        } else if (this.interpolation.name === 'exponential') {\n            if  (this.interpolation.base === 1) {\n                interpolation = [\"linear\"];\n            } else {\n                interpolation = [\"exponential\", this.interpolation.base];\n            }\n        } else {\n            interpolation = [\"cubic-bezier\" ].concat(this.interpolation.controlPoints);\n        }\n\n        const serialized = [this.operator, interpolation, this.input.serialize()];\n\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(\n                this.labels[i],\n                this.outputs[i].serialize()\n            );\n        }\n        return serialized;\n    }\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nexport default Interpolate;\n","//      \n\nimport assert from 'assert';\n\nimport {checkSubtype, ValueType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Coalesce                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )            {\n        if (args.length < 2) {\n            return context.error(\"Expectected at least one argument.\");\n        }\n        let outputType       = (null     );\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, {typeAnnotation: 'omit'});\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        assert(outputType);\n\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce((outputType     ), parsedArgs);\n    }\n\n    evaluate(ctx                   )             {\n        let result = null;\n        let argCount = 0;\n        let firstImage;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                // set to first image\n                if (!firstImage) {\n                    firstImage = result;\n                }\n                result = null;\n                // if we reach the end, return the first image\n                if (argCount === this.args.length) {\n                    return firstImage;\n                }\n            }\n\n            if (result !== null) break;\n        }\n        return result;\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        const serialized = [\"coalesce\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coalesce;\n","//      \n\n                                      \n                                                                       \n                                                        \n                                                               \n\nclass Let                       {\n               \n                                          \n                       \n\n    constructor(bindings                             , result            ) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n\n    evaluate(ctx                   )      {\n        return this.result.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n\n    static parse(args                       , context                )       {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n\n        const bindings                              = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n            }\n\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value) return null;\n\n            bindings.push([name, value]);\n        }\n\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result) return null;\n\n        return new Let(bindings, result);\n    }\n\n    outputDefined()          {\n        return this.result.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"let\"];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\n\nexport default Let;\n","//      \n\nimport {array, ValueType, NumberType} from '../types.js';\n\nimport RuntimeError from '../runtime_error.js';\n\n                                                                       \n                                                        \n                                                              \n                                                 \n                                        \n\nclass At                       {\n               \n                      \n                      \n\n    constructor(type      , index            , input            ) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )      {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n\n        if (!index || !input) return null;\n\n        const t            = (input.type     );\n        return new At(t.itemType, index, input);\n    }\n\n    evaluate(ctx                   )        {\n        const index = ((this.index.evaluate(ctx)     )        );\n        const array = ((this.input.evaluate(ctx)     )              );\n\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n\n        return array[index];\n    }\n\n    eachChild(fn                         ) {\n        fn(this.index);\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        return [\"at\", this.index.serialize(), this.input.serialize()];\n    }\n}\n\nexport default At;\n","//      \n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass In                       {\n               \n                       \n                         \n\n    constructor(needle            , haystack            ) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n\n    static parse(args                       , context                )      {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        return new In(needle, haystack);\n    }\n\n    evaluate(ctx                   )          {\n        const needle = (this.needle.evaluate(ctx)     );\n        const haystack = (this.haystack.evaluate(ctx)     );\n\n        if (haystack == null) return false;\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        return haystack.indexOf(needle) >= 0;\n    }\n\n    eachChild(fn                         ) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        return [\"in\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default In;\n","//      \n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass IndexOf                       {\n               \n                       \n                         \n                           \n\n    constructor(needle            , haystack            , fromIndex             ) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n\n    static parse(args                       , context                )           {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex) return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        } else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n\n    evaluate(ctx                   )      {\n        const needle = (this.needle.evaluate(ctx)     );\n        const haystack = (this.haystack.evaluate(ctx)     );\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        if (this.fromIndex) {\n            const fromIndex = (this.fromIndex.evaluate(ctx)        );\n            return haystack.indexOf(needle, fromIndex);\n        }\n\n        return haystack.indexOf(needle);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        if (this.fromIndex != null && this.fromIndex !== undefined) {\n            const fromIndex = this.fromIndex.serialize();\n            return [\"index-of\", this.needle.serialize(), this.haystack.serialize(), fromIndex];\n        }\n        return [\"index-of\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default IndexOf;\n","//      \n\nimport assert from 'assert';\n\nimport {typeOf} from '../values.js';\nimport {ValueType,          } from '../types.js';\n\n                                                                       \n                                                        \n                                                              \n\n// Map input label values to output expression index\n                                         \n\nclass Match                       {\n               \n                    \n\n                      \n                 \n                               \n                          \n\n    constructor(inputType      , outputType      , input            , cases       , outputs                   , otherwise            ) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args                       , context                )         {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error(`Expected an even number of arguments.`);\n\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error(`Branch labels must be numbers or strings.`);\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error(`Numeric branch labels must be integer values.`);\n\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n\n                cases[String(label)] = outputs.length;\n            }\n\n            const result = context.parse(value, i, outputType);\n            if (!result) return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input) return null;\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(inputType && outputType);\n\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype((inputType     ), input.type)) {\n            return null;\n        }\n\n        return new Match((inputType     ), (outputType     ), input, cases, outputs, otherwise);\n    }\n\n    evaluate(ctx                   )      {\n        const input = (this.input.evaluate(ctx)     );\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"match\", this.input.serialize()];\n\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput                                          = [];\n        const outputLookup                            = {}; // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([this.cases[label], [label]]);\n            } else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n\n        const coerceLabel = (label) => this.inputType.kind === 'number' ? Number(label) : label;\n\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            } else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\n\nexport default Match;\n","//      \n\nimport assert from 'assert';\n\nimport {BooleanType} from '../types.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\n                                                \n\nclass Case                       {\n               \n\n                       \n                          \n\n    constructor(type      , branches          , otherwise            ) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args                       , context                )        {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error(`Expected an odd number of arguments.`);\n\n        let outputType       ;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test) return null;\n\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result) return null;\n\n            branches.push([test, result]);\n\n            outputType = outputType || result.type;\n        }\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(outputType);\n        return new Case((outputType     ), branches, otherwise);\n    }\n\n    evaluate(ctx                   )      {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n\n    outputDefined()          {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"case\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Case;\n","//      \n\nimport {ValueType, NumberType, StringType, array, toString, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Slice                       {\n               \n                      \n                           \n                          \n\n    constructor(type      , input            , beginIndex            , endIndex             ) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n\n    }\n\n    static parse(args                       , context                )         {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n\n        if (!input || !beginIndex) return null;\n\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${toString(input.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex) return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        } else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n\n    evaluate(ctx                   )      {\n        const input = (this.input.evaluate(ctx)     );\n        const beginIndex = (this.beginIndex.evaluate(ctx)        );\n\n        if (!isValidNativeType(input, ['string', 'array'])) {\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${toString(typeOf(input))} instead.`);\n        }\n\n        if (this.endIndex) {\n            const endIndex = (this.endIndex.evaluate(ctx)        );\n            return input.slice(beginIndex, endIndex);\n        }\n\n        return input.slice(beginIndex);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        if (this.endIndex != null && this.endIndex !== undefined) {\n            const endIndex = this.endIndex.serialize();\n            return [\"slice\", this.input.serialize(), this.beginIndex.serialize(), endIndex];\n        }\n        return [\"slice\", this.input.serialize(), this.beginIndex.serialize()];\n    }\n}\n\nexport default Slice;\n","//      \n\nimport {toString, ValueType, BooleanType, CollatorType} from '../types.js';\nimport Assertion from './assertion.js';\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\n                                                                                               \n                                                              \n                                                        \n                                      \n\n                                                                 \n\nfunction isComparableType(op                    , type      ) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\n\nfunction eq(ctx                   , a     , b     )          { return a === b; }\nfunction neq(ctx                   , a     , b     )          { return a !== b; }\nfunction lt(ctx                   , a     , b     )          { return a < b; }\nfunction gt(ctx                   , a     , b     )          { return a > b; }\nfunction lteq(ctx                   , a     , b     )          { return a <= b; }\nfunction gteq(ctx                   , a     , b     )          { return a >= b; }\n\nfunction eqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx                   , a     , b     , c     )          { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) >= 0; }\n\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op                    , compareBasic                                          , compareWithCollator                                               )                         {\n    const isOrderComparison = op !== '==' && op !== '!=';\n\n    return class Comparison                       {\n                   \n                        \n                        \n                              \n                                    \n\n        constructor(lhs            , rhs            , collator             ) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n\n        static parse(args                       , context                )              {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error(`Expected two or three arguments.`);\n\n            const op                     = (args[0]     );\n\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs) return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${toString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs) return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${toString(rhs.type)}'.`);\n            }\n\n            if (\n                lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value'\n            ) {\n                return context.error(`Cannot compare types '${toString(lhs.type)}' and '${toString(rhs.type)}'.`);\n            }\n\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n\n            let collator = null;\n            if (args.length === 4) {\n                if (\n                    lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value'\n                ) {\n                    return context.error(`Cannot use collator to compare non-string types.`);\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator) return null;\n            }\n\n            return new Comparison(lhs, rhs, collator);\n        }\n\n        evaluate(ctx                   )          {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n\n        eachChild(fn                         ) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n\n        outputDefined()          {\n            return true;\n        }\n\n        serialize()                       {\n            const serialized = [op];\n            this.eachChild(child => { serialized.push(child.serialize()); });\n            return serialized;\n        }\n    };\n}\n\nexport const Equals                                                                  = makeComparison('==', eq, eqCollate);\nexport const NotEquals                                                                    = makeComparison('!=', neq, neqCollate);\nexport const LessThan                                                                 = makeComparison('<', lt, ltCollate);\nexport const GreaterThan                                                                 = makeComparison('>', gt, gtCollate);\nexport const LessThanOrEqual                                                                      = makeComparison('<=', lteq, lteqCollate);\nexport const GreaterThanOrEqual                                                                      = makeComparison('>=', gteq, gteqCollate);\n","//      \n\nimport {StringType, NumberType} from '../types.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\n                   \n                                          \n  \n\n                                 \n                 \n                                    \n                                     \n                         \n\n            \n                                    \n                                     \n                         \n\n                              \n\n                           \n \n\n                            \n                                                        \n                             \n                         \n                                          \n                                          \n  \n\nexport default class NumberFormat                       {\n               \n                       \n                                 // BCP 47 language tag\n                                 // ISO 4217 currency code, required if style=currency\n                                 // Simple units sanctioned for use in ECMAScript, required if style=unit. https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier\n                                          // Default 0\n                                          // Default 3\n\n    constructor(number            ,\n                locale                   ,\n                currency                   ,\n                unit                   ,\n                minFractionDigits                   ,\n                maxFractionDigits                   ) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.unit = unit;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 3)\n            return context.error(`Expected two arguments.`);\n\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number) return null;\n\n        const options = (args[2]     );\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`NumberFormat options argument must be an object.`);\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency) return null;\n        }\n\n        let unit = null;\n        if (options['unit']) {\n            unit = context.parse(options['unit'], 1, StringType);\n            if (!unit) return null;\n        }\n\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits) return null;\n        }\n\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits) return null;\n        }\n\n        return new NumberFormat(number, locale, currency, unit, minFractionDigits, maxFractionDigits);\n    }\n\n    evaluate(ctx                   )         {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [],\n            {\n                style:\n                    (this.currency && \"currency\") ||\n                    (this.unit && \"unit\") ||\n                    \"decimal\",\n                currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n                unit: this.unit ? this.unit.evaluate(ctx) : undefined,\n                minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n                maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n            }).format(this.number.evaluate(ctx));\n    }\n\n    eachChild(fn                         ) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.unit) {\n            fn(this.unit);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        const options = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.unit) {\n            options['unit'] = this.unit.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return [\"number-format\", this.number.serialize(), options];\n    }\n}\n","//      \n\nimport {NumberType, toString} from '../types.js';\n\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Length                       {\n               \n                      \n\n    constructor(input            ) {\n        this.type = NumberType;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )          {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n\n        const input = context.parse(args[1], 1);\n        if (!input) return null;\n\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${toString(input.type)} instead.`);\n\n        return new Length(input);\n    }\n\n    evaluate(ctx                   )               {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${toString(typeOf(input))} instead.`);\n        }\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        const serialized = [\"length\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Length;\n","//      \n\nimport {\n              \n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ObjectType,\n    ValueType,\n    ErrorType,\n    CollatorType,\n    array,\n    toString as typeToString\n} from '../types.js';\n\nimport {typeOf, Color, validateRGBA, toString as valueToString} from '../values.js';\nimport CompoundExpression from '../compound_expression.js';\nimport RuntimeError from '../runtime_error.js';\nimport Let from './let.js';\nimport Var from './var.js';\nimport Literal from './literal.js';\nimport Assertion from './assertion.js';\nimport Coercion from './coercion.js';\nimport At from './at.js';\nimport In from './in.js';\nimport IndexOf from './index_of.js';\nimport Match from './match.js';\nimport Case from './case.js';\nimport Slice from './slice.js';\nimport Step from './step.js';\nimport Interpolate from './interpolate.js';\nimport Coalesce from './coalesce.js';\nimport {\n    Equals,\n    NotEquals,\n    LessThan,\n    GreaterThan,\n    LessThanOrEqual,\n    GreaterThanOrEqual\n} from './comparison.js';\nimport CollatorExpression from './collator.js';\nimport NumberFormat from './number_format.js';\nimport FormatExpression from './format.js';\nimport ImageExpression from './image.js';\nimport Length from './length.js';\nimport Within from './within.js';\n\n                                                       \n                                                         \n\nconst expressions                     = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'index-of': IndexOf,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'slice': Slice,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var,\n    'within': Within\n};\n\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error) throw new RuntimeError(error);\n    return new Color(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\n\nfunction has(key, obj) {\n    return key in obj;\n}\n\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\n\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\n\nfunction varargs(type      )          {\n    return {type};\n}\n\nCompoundExpression.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'pitch': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.pitch || 0\n    ],\n    'distance-from-center': [\n        NumberType,\n        [],\n        (ctx) => ctx.distanceFromCenter()\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'sky-radial-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.skyRadialProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[(k     ).value] === (v     ).value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === (v     ).value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === (v     ).value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => (k     ).value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => (v     ).value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => (v     ).value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => (v     ).value.indexOf(ctx.properties()[(k     ).value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[(k     ).value], (v     ).value, 0, (v     ).value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\n\nexport default expressions;\n","//      \n\n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\n                          \n                                       \n                                      \n\nexport function success      (value   )               {\n    return {result: 'success', value};\n}\n\nexport function error      (value   )               {\n    return {result: 'error', value};\n}\n","\nimport * as colorSpaces from '../util/color_spaces.js';\nimport Color from '../util/color.js';\nimport extend from '../util/extend.js';\nimport getType from '../util/get_type.js';\nimport * as interpolate from '../util/interpolate.js';\nimport Interpolate from '../expression/definitions/interpolate.js';\nimport Formatted from '../expression/types/formatted.js';\nimport ResolvedImage from '../expression/types/resolved_image.js';\nimport {supportsInterpolation} from '../util/properties.js';\nimport {findStopLessThanOrEqualTo} from '../expression/stops.js';\n\nexport function isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nfunction identityFunction(x) {\n    return x;\n}\n\nexport function createFunction(parameters, propertySpec) {\n    const isColor = propertySpec.type === 'color';\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n\n    if (isColor) {\n        parameters = extend({}, parameters);\n\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], Color.parse(stop[1])];\n            });\n        }\n\n        if (parameters.default) {\n            parameters.default = Color.parse(parameters.default);\n        } else {\n            parameters.default = Color.parse(propertySpec.default);\n        }\n    }\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb' && !colorSpaces[parameters.colorSpace]) { // eslint-disable-line import/namespace\n        throw new Error(`Unknown color space: ${parameters.colorSpace}`);\n    }\n\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    } else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    } else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n\n    } else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    } else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n\n        const interpolationType = {name: 'linear'};\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({zoom}, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    } else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            {name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1} : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({zoom}) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    } else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\n\nfunction coalesce(a, b, c) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n    if (c !== undefined) return c;\n}\n\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce(evaluated, parameters.default, propertySpec.default);\n}\n\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n\n    return parameters.stops[index][1];\n}\n\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(\n        input, base,\n        parameters.stops[index][0],\n        parameters.stops[index + 1][0]);\n\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    let interp = interpolate[propertySpec.type] || identityFunction; // eslint-disable-line import/namespace\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb') {\n        const colorspace = colorSpaces[parameters.colorSpace]; // eslint-disable-line import/namespace\n        interp = (a, b) => colorspace.reverse(colorspace.interpolate(colorspace.forward(a), colorspace.forward(b), t));\n    }\n\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t);\n            }\n        };\n    }\n\n    return interp(outputLower, outputUpper, t);\n}\n\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    if (propertySpec.type === 'color') {\n        input = Color.parse(input);\n    } else if (propertySpec.type === 'formatted') {\n        input = Formatted.fromString(input.toString());\n    } else if (propertySpec.type === 'resolvedImage') {\n        input = ResolvedImage.fromString(input.toString());\n    } else if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n        input = undefined;\n    }\n    return coalesce(input, parameters.default, propertySpec.default);\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport extend from '../util/extend.js';\nimport ParsingError from './parsing_error.js';\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport Step from './definitions/step.js';\nimport Interpolate from './definitions/interpolate.js';\nimport Coalesce from './definitions/coalesce.js';\nimport Let from './definitions/let.js';\nimport definitions from './definitions/index.js';\nimport * as isConstant from './is_constant.js';\nimport RuntimeError from './runtime_error.js';\nimport {success, error} from '../util/result.js';\nimport {supportsPropertyExpression, supportsZoomExpression, supportsInterpolation} from '../util/properties.js';\n\n                                                     \n                                       \n                                                \n                                                                 \n                                              \n                                                                    \n                                                            \n                                                           \n                                                \n                                                             \n                                                                    \n\n                       \n                                                                      \n                        \n                                    \n                                      \n                                   \n  \n\n                                              \n\n                                          \n                 \n                   \n                            \n                          \n                               \n                                               \n                       \n   \n\nexport class StyleExpression {\n                           \n\n                                  \n                         \n                                              \n                                     \n\n    constructor(expression            , propertySpec                             ) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   , featureTileCoord        , featureDistanceData                      )      {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        return this.expression.evaluate(this._evaluator);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   , featureTileCoord        , featureDistanceData                      )      {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        } catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\n\nexport function isExpression(expression       )          {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in definitions;\n}\n\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nexport function createExpression(expression       , propertySpec                             )                                               {\n    const parser = new ParsingContext(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined,\n        propertySpec && propertySpec.type === 'string' ? {typeAnnotation: 'coerce'} : undefined);\n\n    if (!parsed) {\n        assert(parser.errors.length > 0);\n        return error(parser.errors);\n    }\n\n    return success(new StyleExpression(parsed, propertySpec));\n}\n\nexport class ZoomConstantExpression                       {\n               \n                              \n                                      \n\n    constructor(kind      , expression                 ) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('constant'                ) && !isConstant.isStateConstant(expression.expression);\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\n\nexport class ZoomDependentExpression                       {\n               \n                             \n                              \n\n                                      \n                                          \n\n    constructor(kind      , expression                 , zoomStops               , interpolationType                    ) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('camera'                ) && !isConstant.isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    interpolationFactor(input        , lower        , upper        )         {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\n\n                                  \n                     \n                                                                                                                                                                \n \n\n                                \n                   \n                              \n                                                                                                                                                                                                     \n  \n\n                                \n                   \n                                                                                                                                                                \n                                                                                  \n                             \n                                         \n  \n\n                                   \n                      \n                              \n                                                                                                                                                                                                     \n                                                                                  \n                             \n                                         \n  \n\n                                     \n                        \n                      \n                      \n                          \n\nexport function createPropertyExpression(expression       , propertySpec                            )                                                       {\n    expression = createExpression(expression, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n\n    const parsed = expression.value.expression;\n\n    const isFeatureConstant = isConstant.isFeatureConstant(parsed);\n    if (!isFeatureConstant && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError('', 'data expressions not supported')]);\n    }\n\n    const isZoomConstant = isConstant.isGlobalPropertyConstant(parsed, ['zoom', 'pitch', 'distance-from-center']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError('', 'zoom expressions not supported')]);\n    }\n\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ParsingError) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n\n    if (!zoomCurve) {\n        return success(isFeatureConstant ?\n            (new ZoomConstantExpression('constant', expression.value)                    ) :\n            (new ZoomConstantExpression('source', expression.value)                  ));\n    }\n\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n\n    return success(isFeatureConstant ?\n        (new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType)                  ) :\n        (new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType)                     ));\n}\n\nimport {isFunction, createFunction} from '../function/index.js';\nimport {Color} from './values.js';\n\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nexport class StylePropertyFunction    {\n                                               \n                                               \n\n                         \n                                                                    \n                                                                                  \n                              \n\n    constructor(parameters                               , specification                            ) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extend(this, createFunction(this._parameters, this._specification));\n    }\n\n    static deserialize(serialized                                                                                          )                           {\n        return new StylePropertyFunction(serialized._parameters, serialized._specification);\n    }\n\n    static serialize(input                          )                                                                                           {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\n\nexport function normalizePropertyExpression   (value                               , specification                            )                          {\n    if (isFunction(value)) {\n        return (new StylePropertyFunction(value, specification)     );\n\n    } else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n\n    } else {\n        let constant      = value;\n        if (typeof value === 'string' && specification.type === 'color') {\n            constant = Color.parse(value);\n        }\n        return {\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression            )                                           {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n\n    } else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n\n    } else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n\n        result = expression;\n    }\n\n    if (result instanceof ParsingError) {\n        return result;\n    }\n\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n\n    return result;\n}\n\nimport {ColorType, StringType, NumberType, BooleanType, ValueType, FormattedType, ResolvedImageType, array} from './types.js';\n\nfunction getExpectedType(spec                            )       {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n\n    return types[spec.type];\n}\n\nfunction getDefaultValue(spec                            )        {\n    if (spec.type === 'color' && (isFunction(spec.default) || Array.isArray(spec.default))) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n","//      \n\n                                                                 \n\nexport function supportsPropertyExpression(spec                            )          {\n    return spec['property-type'] === 'data-driven';\n}\n\nexport function supportsZoomExpression(spec                            )          {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\n\nexport function supportsInterpolation(spec                            )          {\n    return !!spec.expression && spec.expression.interpolated;\n}\n","//      \n\n// Turn jsonlint-lines-primitives objects into primitive objects\nexport function unbundle(value       )        {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\n\nexport function deepUnbundle(value       )        {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue                           = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n\n    return unbundle(value);\n}\n","//      \n\nimport spec from './v8.json';\n\n                                         \n\nexport default spec;\n","//      \n\nimport {createExpression} from '../expression/index.js';\nimport {isFeatureConstant} from '../expression/is_constant.js';\nimport {deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport latest from '../reference/latest.js';\n                                                                      \n                                                             \n                                                \n\n                                                                                                       \n                                                                                                                                                                                                   \n                                                                                                                                      \n\nexport default createFilter;\nexport {isExpressionFilter, isDynamicFilter, extractStaticFilter};\n\nfunction isExpressionFilter(filter     )          {\n    if (filter === true || filter === false) {\n        return true;\n    }\n\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n\n    case 'in':\n        return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n\n    case 'any':\n    case 'all':\n        for (const f of filter.slice(1)) {\n            if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n\n    default:\n        return true;\n    }\n}\n\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @param {string} layerType the type of the layer this filter will be applied to.\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter     , layerType          = 'fill')                {\n    if (filter === null || filter === undefined) {\n        return {filter: () => true, needGeometry: false, needFeature: false};\n    }\n\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n    const filterExp = ((filter     )                             );\n\n    let staticFilter = true;\n    try {\n        staticFilter = extractStaticFilter(filterExp);\n    } catch (e) {\n        console.warn(\n`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\nand paste the contents of this message in the report.\nThank you!\nFilter Expression:\n${JSON.stringify(filterExp, null, 2)}\n        `);\n    }\n\n    // Compile the static component of the filter\n    const filterSpec = latest[`filter_${layerType}`];\n    const compiledStaticFilter = createExpression(staticFilter, filterSpec);\n\n    let filterFunc = null;\n    if (compiledStaticFilter.result === 'error') {\n        throw new Error(compiledStaticFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    } else {\n        filterFunc = (globalProperties                  , feature         , canonical                  ) => compiledStaticFilter.value.evaluate(globalProperties, feature, {}, canonical);\n    }\n\n    // If the static component is not equal to the entire filter then we have a dynamic component\n    // Compile the dynamic component separately\n    let dynamicFilterFunc = null;\n    let needFeature = null;\n    if (staticFilter !== filterExp) {\n        const compiledDynamicFilter = createExpression(filterExp, filterSpec);\n\n        if (compiledDynamicFilter.result === 'error') {\n            throw new Error(compiledDynamicFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        } else {\n            dynamicFilterFunc = (globalProperties                  , feature         , canonical                  , featureTileCoord        , featureDistanceData                      ) => compiledDynamicFilter.value.evaluate(globalProperties, feature, {}, canonical, undefined, undefined, featureTileCoord, featureDistanceData);\n            needFeature = !isFeatureConstant(compiledDynamicFilter.value.expression);\n        }\n    }\n\n    filterFunc = ((filterFunc     )                  );\n    const needGeometry = geometryNeeded(staticFilter);\n\n    return {\n        filter: filterFunc,\n        dynamicFilter: dynamicFilterFunc ? dynamicFilterFunc : undefined,\n        needGeometry,\n        needFeature: !!needFeature\n    };\n}\n\nfunction extractStaticFilter(filter     )      {\n    if (!isDynamicFilter(filter)) {\n        return filter;\n    }\n\n    // Shallow copy so we can replace expressions in-place\n    let result = deepUnbundle(filter);\n\n    // 1. Union branches\n    unionDynamicBranches(result);\n\n    // 2. Collapse dynamic conditions to  `true`\n    result = collapseDynamicBooleanExpressions(result);\n\n    return result;\n}\n\nfunction collapseDynamicBooleanExpressions(expression     )      {\n    if (!Array.isArray(expression)) {\n        return expression;\n    }\n\n    const collapsed = collapsedExpression(expression);\n    if (collapsed === true) {\n        return collapsed;\n    } else {\n        return collapsed.map((subExpression) => collapseDynamicBooleanExpressions(subExpression));\n    }\n}\n\n/**\n * Traverses the expression and replaces all instances of branching on a\n * `dynamic` conditional (such as `['pitch']` or `['distance-from-center']`)\n * into an `any` expression.\n * This ensures that all possible outcomes of a `dynamic` branch are considered\n * when evaluating the expression upfront during filtering.\n *\n * @param {Array<any>} filter the filter expression mutated in-place.\n */\nfunction unionDynamicBranches(filter     ) {\n    let isBranchingDynamically = false;\n    const branches = [];\n\n    if (filter[0] === 'case') {\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[i]);\n            branches.push(filter[i + 1]);\n        }\n\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'match') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 2; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'step') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n    }\n\n    if (isBranchingDynamically) {\n        filter.length = 0;\n        filter.push('any', ...branches);\n    }\n\n    // traverse and recurse into children\n    for (let i = 1; i < filter.length; i++) {\n        unionDynamicBranches(filter[i]);\n    }\n}\n\nfunction isDynamicFilter(filter     )          {\n    // Base Cases\n    if (!Array.isArray(filter)) {\n        return false;\n    }\n    if (isRootExpressionDynamic(filter[0])) {\n        return true;\n    }\n\n    for (let i = 1; i < filter.length; i++) {\n        const child = filter[i];\n        if (isDynamicFilter(child)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isRootExpressionDynamic(expression        )          {\n    return expression === 'pitch' ||\n        expression === 'distance-from-center';\n}\n\nconst dynamicConditionExpressions = new Set([\n    'in',\n    '==',\n    '!=',\n    '>',\n    '>=',\n    '<',\n    '<=',\n    'to-boolean'\n]);\n\nfunction collapsedExpression(expression     )      {\n    if (dynamicConditionExpressions.has(expression[0])) {\n\n        for (let i = 1; i < expression.length; i++) {\n            const param = expression[i];\n            if (isDynamicFilter(param)) {\n                return true;\n            }\n        }\n    }\n    return expression;\n}\n\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter)) return false;\n    if (filter[0] === 'within') return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index])) return true;\n    }\n    return false;\n}\n\nfunction convertFilter(filter             )        {\n    if (!filter) return true;\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n    const converted =\n        op === '==' ? convertComparisonOp(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) :\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>=' ? convertComparisonOp(filter[1], filter[2], op) :\n        op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n        op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) :\n        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) :\n        op === 'in' ? convertInOp(filter[1], filter.slice(2)) :\n        op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) :\n        op === 'has' ? convertHasOp(filter[1]) :\n        op === '!has' ? convertNegation(convertHasOp(filter[1])) :\n        op === 'within' ? filter :\n        true;\n    return converted;\n}\n\nfunction convertComparisonOp(property        , value     , op        ) {\n    switch (property) {\n    case '$type':\n        return [`filter-type-${op}`, value];\n    case '$id':\n        return [`filter-id-${op}`, value];\n    default:\n        return [`filter-${op}`, property, value];\n    }\n}\n\nfunction convertDisjunctionOp(filters                   ) {\n    return ['any'].concat(filters.map(convertFilter));\n}\n\nfunction convertInOp(property        , values            ) {\n    if (values.length === 0) { return false; }\n    switch (property) {\n    case '$type':\n        return [`filter-type-in`, ['literal', values]];\n    case '$id':\n        return [`filter-id-in`, ['literal', values]];\n    default:\n        if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n            return ['filter-in-large', property, ['literal', values.sort(compare)]];\n        } else {\n            return ['filter-in-small', property, ['literal', values]];\n        }\n    }\n}\n\nfunction convertHasOp(property        ) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [`filter-has-id`];\n    default:\n        return [`filter-has`, property];\n    }\n}\n\nfunction convertNegation(filter       ) {\n    return ['!', filter];\n}\n","//      \nexport default ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n","//      \n\nimport refProperties from './util/ref_properties.js';\n\n                                                   \n\nfunction deref(layer                    , parent                    )                     {\n    const result = {};\n\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            result[k] = (parent     )[k];\n        }\n    });\n\n    return ((result     )                    );\n}\n\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nexport default function derefLayers(layers                           )                            {\n    layers = layers.slice();\n\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[(layers[i]     ).ref]);\n        }\n    }\n\n    return layers;\n}\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default<typeof import(\"./Feature.js\").default|typeof import(\"./render/Feature.js\").default>} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default<typeof import(\"./Feature.js\").default|typeof import(\"./render/Feature.js\").default>}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").FeatureLike>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default<typeof import(\"./Feature.js\").default|typeof import(\"./render/Feature.js\").default>} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").FeatureLike>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          if (!range) {\n            throw new Error(\n              'The {-y} placeholder requires a tile grid with extent',\n            );\n          }\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","const mapboxBaseUrl = 'https://api.mapbox.com';\n\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nexport function getMapboxPath(url) {\n  const startsWith = 'mapbox://';\n  if (url.indexOf(startsWith) !== 0) {\n    return '';\n  }\n  return url.slice(startsWith.length);\n}\n\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeSpriteUrl(url, token, styleUrl) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, styleUrl).href);\n  }\n  const startsWith = 'sprites/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected sprites url: ${url}`);\n  }\n  const sprite = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${sprite}/sprite?access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeStyleUrl(url, token) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, location.href).href);\n  }\n  const startsWith = 'styles/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected style url: ${url}`);\n  }\n  const style = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${style}?&access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {string} A vector tile template.\n * @private\n */\nexport function normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n  const urlObject = new URL(url, styleUrl);\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    if (!token) {\n      return decodeURI(urlObject.href);\n    }\n    if (!urlObject.searchParams.has(tokenParam)) {\n      urlObject.searchParams.set(tokenParam, token);\n    }\n    return decodeURI(urlObject.href);\n  }\n\n  if (mapboxPath === 'mapbox.satellite') {\n    const sizeFactor = window.devicePixelRatio >= 1.5 ? '@2x' : '';\n    return `https://api.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}${sizeFactor}.webp?access_token=${token}`;\n  }\n  return `https://{a-d}.tiles.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}.vector.pbf?access_token=${token}`;\n}\n","import TileState from 'ol/TileState.js';\nimport {VectorTile} from 'ol';\nimport {expandUrl} from 'ol/tileurlfunction.js';\nimport {getUid} from 'ol/util.js';\nimport {normalizeSourceUrl, normalizeStyleUrl} from './mapbox.js';\nimport {toPromise} from 'ol/functions.js';\n\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n\n/** @typedef {import(\"ol\").Map} Map */\n/** @typedef {import(\"ol/layer\").Layer} Layer */\n/** @typedef {import(\"ol/layer\").Group} LayerGroup */\n/** @typedef {import(\"ol/layer\").Vector} VectorLayer */\n/** @typedef {import(\"ol/layer\").VectorTile} VectorTileLayer */\n/** @typedef {import(\"ol/source\").Source} Source */\n\nconst functionCacheByStyleId = {};\nconst filterCacheByStyleId = {};\n\nlet styleId = 0;\nexport function getStyleId(glStyle) {\n  if (!glStyle.id) {\n    glStyle.id = styleId++;\n  }\n  return glStyle.id;\n}\n\nexport function getStyleFunctionKey(glStyle, olLayer) {\n  return getStyleId(glStyle) + '.' + getUid(olLayer);\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nexport function getFunctionCache(glStyle) {\n  let functionCache = functionCacheByStyleId[glStyle.id];\n  if (!functionCache) {\n    functionCache = {};\n    functionCacheByStyleId[getStyleId(glStyle)] = functionCache;\n  }\n  return functionCache;\n}\n\nexport function clearFunctionCache() {\n  for (const key in functionCacheByStyleId) {\n    delete functionCacheByStyleId[key];\n  }\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nexport function getFilterCache(glStyle) {\n  let filterCache = filterCacheByStyleId[glStyle.id];\n  if (!filterCache) {\n    filterCache = {};\n    filterCacheByStyleId[getStyleId(glStyle)] = filterCache;\n  }\n  return filterCache;\n}\n\nexport function deg2rad(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\nexport const defaultResolutions = (function () {\n  const resolutions = [];\n  for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n    resolutions.push(res);\n  }\n  return resolutions;\n})();\n\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nexport function createCanvas(width, height) {\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') { // eslint-disable-line\n    return /** @type {?} */ (new OffscreenCanvas(width, height));\n  }\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n\nexport function getZoomForResolution(resolution, resolutions) {\n  let i = 0;\n  const ii = resolutions.length;\n  for (; i < ii; ++i) {\n    const candidate = resolutions[i];\n    if (candidate < resolution && i + 1 < ii) {\n      const zoomFactor = resolutions[i] / resolutions[i + 1];\n      return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n    }\n  }\n  return ii - 1;\n}\n\nexport function getResolutionForZoom(zoom, resolutions) {\n  const base = Math.floor(zoom);\n  const factor = Math.pow(2, zoom - base);\n  return resolutions[base] / factor;\n}\n\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options={}] Options.\n * @param {{request?: Request}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nexport function fetchResource(resourceType, url, options = {}, metadata) {\n  if (url in pendingRequests) {\n    if (metadata) {\n      metadata.request = pendingRequests[url][0];\n    }\n    return pendingRequests[url][1];\n  }\n  const transformedRequest = options.transformRequest\n    ? options.transformRequest(url, resourceType) || url\n    : url;\n  const pendingRequest = toPromise(() => transformedRequest).then(\n    (transformedRequest) => {\n      if (!(transformedRequest instanceof Request)) {\n        transformedRequest = new Request(transformedRequest);\n      }\n      if (!transformedRequest.headers.get('Accept')) {\n        transformedRequest.headers.set('Accept', 'application/json');\n      }\n      if (metadata) {\n        metadata.request = transformedRequest;\n      }\n      return fetch(transformedRequest)\n        .then(function (response) {\n          delete pendingRequests[url];\n          return response.ok\n            ? response.json()\n            : Promise.reject(new Error('Error fetching source ' + url));\n        })\n        .catch(function (error) {\n          delete pendingRequests[url];\n          return Promise.reject(new Error('Error fetching source ' + url));\n        });\n    },\n  );\n  pendingRequests[url] = [transformedRequest, pendingRequest];\n  return pendingRequest;\n}\n\nexport function getGlStyle(glStyleOrUrl, options) {\n  if (typeof glStyleOrUrl === 'string') {\n    if (glStyleOrUrl.trim().startsWith('{')) {\n      try {\n        const glStyle = JSON.parse(glStyleOrUrl);\n        return Promise.resolve(glStyle);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    } else {\n      glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n      return fetchResource('Style', glStyleOrUrl, options);\n    }\n  } else {\n    return Promise.resolve(glStyleOrUrl);\n  }\n}\n\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise<{tileJson: Object, tileLoadFunction: import('ol/Tile.js').LoadFunction}?>} TileJson and load function\n */\nexport function getTileJson(glSource, styleUrl, options = {}) {\n  const cacheKey = [styleUrl, JSON.stringify(glSource)].toString();\n  let promise = tilejsonCache[cacheKey];\n  if (!promise || options.transformRequest) {\n    let tileLoadFunction;\n    if (options.transformRequest) {\n      tileLoadFunction = (tile, src) => {\n        const transformedRequest = options.transformRequest\n          ? options.transformRequest(src, 'Tiles') || src\n          : src;\n        if (tile instanceof VectorTile) {\n          tile.setLoader((extent, resolution, projection) => {\n            toPromise(() => transformedRequest).then((transformedRequest) => {\n              fetch(transformedRequest)\n                .then((response) => response.arrayBuffer())\n                .then((data) => {\n                  const format = tile.getFormat();\n                  const features = format.readFeatures(data, {\n                    extent: extent,\n                    featureProjection: projection,\n                  });\n                  // @ts-ignore\n                  tile.setFeatures(features);\n                })\n                .catch((e) => tile.setState(TileState.ERROR));\n            });\n          });\n        } else {\n          const img = tile.getImage();\n          toPromise(() => transformedRequest).then((transformedRequest) => {\n            if (transformedRequest instanceof Request) {\n              fetch(transformedRequest)\n                .then((response) => response.blob())\n                .then((blob) => {\n                  const url = URL.createObjectURL(blob);\n                  img.addEventListener('load', () => URL.revokeObjectURL(url));\n                  img.addEventListener('error', () => URL.revokeObjectURL(url));\n                  img.src = url;\n                })\n                .catch((e) => tile.setState(TileState.ERROR));\n            } else {\n              img.src = transformedRequest;\n            }\n          });\n        }\n      };\n    }\n    const url = glSource.url;\n    if (url && !glSource.tiles) {\n      const normalizedSourceUrl = normalizeSourceUrl(\n        url,\n        options.accessToken,\n        options.accessTokenParam || 'access_token',\n        styleUrl || location.href,\n      );\n      if (url.startsWith('mapbox://')) {\n        promise = Promise.resolve({\n          tileJson: Object.assign({}, glSource, {\n            url: undefined,\n            tiles: expandUrl(normalizedSourceUrl),\n          }),\n          tileLoadFunction,\n        });\n      } else {\n        const metadata = {};\n        promise = fetchResource(\n          'Source',\n          normalizedSourceUrl,\n          options,\n          metadata,\n        ).then(function (tileJson) {\n          tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n            if (tileJson.scheme === 'tms') {\n              tileUrl = tileUrl.replace('{y}', '{-y}');\n            }\n            return normalizeSourceUrl(\n              tileUrl,\n              options.accessToken,\n              options.accessTokenParam || 'access_token',\n              metadata.request.url,\n            );\n          });\n          return Promise.resolve({tileJson, tileLoadFunction});\n        });\n      }\n    } else {\n      glSource = Object.assign({}, glSource, {\n        tiles: glSource.tiles.map(function (tileUrl) {\n          if (glSource.scheme === 'tms') {\n            tileUrl = tileUrl.replace('{y}', '{-y}');\n          }\n          return normalizeSourceUrl(\n            tileUrl,\n            options.accessToken,\n            options.accessTokenParam || 'access_token',\n            styleUrl || location.href,\n          );\n        }),\n      });\n      promise = Promise.resolve({\n        tileJson: Object.assign({}, glSource),\n        tileLoadFunction,\n      });\n    }\n    tilejsonCache[cacheKey] = promise;\n  }\n  return promise;\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nexport function drawIconHalo(\n  spriteImage,\n  spriteImageData,\n  haloWidth,\n  haloColor,\n) {\n  const imgSize = [\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width,\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height,\n  ];\n  const imageCanvas = createCanvas(imgSize[0], imgSize[1]);\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    spriteImage,\n    spriteImageData.x,\n    spriteImageData.y,\n    spriteImageData.width,\n    spriteImageData.height,\n    haloWidth * spriteImageData.pixelRatio,\n    haloWidth * spriteImageData.pixelRatio,\n    spriteImageData.width,\n    spriteImageData.height,\n  );\n  const imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n  imageContext.globalCompositeOperation = 'destination-over';\n  imageContext.fillStyle = `rgba(${haloColor.r * 255},${haloColor.g * 255},${\n    haloColor.b * 255\n  },${haloColor.a})`;\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const alpha = data[index + 3];\n      if (alpha > 0) {\n        imageContext.arc(\n          i,\n          j,\n          haloWidth * spriteImageData.pixelRatio,\n          0,\n          2 * Math.PI,\n        );\n      }\n    }\n  }\n  imageContext.fill();\n  return imageCanvas;\n}\n\nfunction smoothstep(min, max, value) {\n  const x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n  return x * x * (3 - 2 * x);\n}\n\n/**\n * @param {HTMLImageElement} image SDF image\n * @param {{x: number, y: number, width: number, height: number}} area Area to unSDF\n * @param {{r: number, g: number, b: number, a: number}} color Color to use\n * @return {HTMLCanvasElement} Regular image\n */\nexport function drawSDF(image, area, color) {\n  const imageCanvas = createCanvas(area.width, area.height);\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    image,\n    area.x,\n    area.y,\n    area.width,\n    area.height,\n    0,\n    0,\n    area.width,\n    area.height,\n  );\n  const imageData = imageContext.getImageData(0, 0, area.width, area.height);\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const dist = data[index + 3] / 255;\n\n      const buffer = 0.75;\n      const gamma = 0.1;\n\n      const alpha = smoothstep(buffer - gamma, buffer + gamma, dist);\n      if (alpha > 0) {\n        data[index + 0] = Math.round(255 * color.r * alpha);\n        data[index + 1] = Math.round(255 * color.g * alpha);\n        data[index + 2] = Math.round(255 * color.b * alpha);\n        data[index + 3] = Math.round(255 * alpha);\n      } else {\n        data[index + 3] = 0;\n      }\n    }\n  }\n  imageContext.putImageData(imageData, 0, 0);\n  return imageCanvas;\n}\n\n/**\n * @typedef {import(\"./apply.js\").Options} Options\n * @private\n */\n","import mb2css from 'mapbox-to-css-font';\nimport {checkedFonts, registerFont} from 'ol/render/canvas.js';\nimport {createCanvas} from './util.js';\n\nconst hairSpacePool = Array(256).join('\\u200A');\nexport function applyLetterSpacing(text, letterSpacing) {\n  if (letterSpacing >= 0.05) {\n    let textWithLetterSpacing = '';\n    const lines = text.split('\\n');\n    const joinSpaceString = hairSpacePool.slice(\n      0,\n      Math.round(letterSpacing / 0.1),\n    );\n    for (let l = 0, ll = lines.length; l < ll; ++l) {\n      if (l > 0) {\n        textWithLetterSpacing += '\\n';\n      }\n      textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n    }\n    return textWithLetterSpacing;\n  }\n  return text;\n}\n\nlet measureContext;\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvas(1, 1).getContext('2d');\n  }\n  return measureContext;\n}\n\nfunction measureText(text, letterSpacing) {\n  return (\n    getMeasureContext().measureText(text).width +\n    (text.length - 1) * letterSpacing\n  );\n}\n\nconst measureCache = {};\nexport function wrapText(text, font, em, letterSpacing) {\n  if (text.indexOf('\\n') !== -1) {\n    const hardLines = text.split('\\n');\n    const lines = [];\n    for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n      lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n    }\n    return lines.join('\\n');\n  }\n  const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n  let wrappedText = measureCache[key];\n  if (!wrappedText) {\n    const words = text.split(' ');\n    if (words.length > 1) {\n      const ctx = getMeasureContext();\n      ctx.font = font;\n      const oneEm = ctx.measureText('M').width;\n      const maxWidth = oneEm * em;\n      let line = '';\n      const lines = [];\n      // Pass 1 - wrap lines to not exceed maxWidth\n      for (let i = 0, ii = words.length; i < ii; ++i) {\n        const word = words[i];\n        const testLine = line + (line ? ' ' : '') + word;\n        if (measureText(testLine, letterSpacing) <= maxWidth) {\n          line = testLine;\n        } else {\n          if (line) {\n            lines.push(line);\n          }\n          line = word;\n        }\n      }\n      if (line) {\n        lines.push(line);\n      }\n      // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n      for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n        const line = lines[i];\n        if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n          const prevWidth =\n            i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n          const nextWidth =\n            i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n          lines.splice(i, 1);\n          ii -= 1;\n          if (prevWidth < nextWidth) {\n            lines[i - 1] += ' ' + line;\n            i -= 1;\n          } else {\n            lines[i] = line + ' ' + lines[i];\n          }\n        }\n      }\n      // Pass 3 - try to fill 80% of maxWidth for each line\n      for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n        const line = lines[i];\n        const next = lines[i + 1];\n        if (\n          measureText(line, letterSpacing) > maxWidth * 0.7 &&\n          measureText(next, letterSpacing) < maxWidth * 0.6\n        ) {\n          const lineWords = line.split(' ');\n          const lastWord = lineWords.pop();\n          if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n            lines[i] = lineWords.join(' ');\n            lines[i + 1] = lastWord + ' ' + next;\n          }\n          ii -= 1;\n        }\n      }\n      wrappedText = lines.join('\\n');\n    } else {\n      wrappedText = text;\n    }\n    wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n    measureCache[key] = wrappedText;\n  }\n  return wrappedText;\n}\n\nconst fontFamilyRegEx = /font-family: ?([^;]*);/;\nconst stripQuotesRegEx = /(\"|')/g;\nlet loadedFontFamilies;\nfunction hasFontFamily(family) {\n  if (!loadedFontFamilies) {\n    loadedFontFamilies = {};\n    const styleSheets = document.styleSheets;\n    for (let i = 0, ii = styleSheets.length; i < ii; ++i) {\n      const styleSheet = /** @type {CSSStyleSheet} */ (styleSheets[i]);\n      try {\n        const cssRules = styleSheet.rules || styleSheet.cssRules;\n        if (cssRules) {\n          for (let j = 0, jj = cssRules.length; j < jj; ++j) {\n            const cssRule = cssRules[j];\n            if (cssRule.type == 5) {\n              const match = cssRule.cssText.match(fontFamilyRegEx);\n              loadedFontFamilies[match[1].replace(stripQuotesRegEx, '')] = true;\n            }\n          }\n        }\n      } catch (e) {\n        // empty catch block\n      }\n    }\n  }\n  return family in loadedFontFamilies;\n}\n\nconst processedFontFamilies = {};\n\n/**\n * @param {Array} fonts Fonts.\n * @param {string} [templateUrl] Template URL.\n * @return {Array} Processed fonts.\n * @private\n */\nexport function getFonts(\n  fonts,\n  templateUrl = 'https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css',\n) {\n  const fontsKey = fonts.toString();\n  if (fontsKey in processedFontFamilies) {\n    return processedFontFamilies[fontsKey];\n  }\n  const fontDescriptions = [];\n  for (let i = 0, ii = fonts.length; i < ii; ++i) {\n    fonts[i] = fonts[i].replace('Arial Unicode MS', 'Arial');\n    const font = fonts[i];\n    const cssFont = mb2css(font, 1);\n    registerFont(cssFont);\n    const parts = cssFont.split(' ');\n    fontDescriptions.push([\n      parts.slice(3).join(' ').replace(/\"/g, ''),\n      parts[1],\n      parts[0],\n    ]);\n  }\n  for (let i = 0, ii = fontDescriptions.length; i < ii; ++i) {\n    const fontDescription = fontDescriptions[i];\n    const family = fontDescription[0];\n    if (!hasFontFamily(family)) {\n      if (\n        checkedFonts.get(\n          `${fontDescription[2]}\\n${fontDescription[1]} \\n${family}`,\n        ) !== 100\n      ) {\n        const fontUrl = templateUrl\n          .replace('{font-family}', family.replace(/ /g, '-').toLowerCase())\n          .replace('{Font+Family}', family.replace(/ /g, '+'))\n          .replace('{fontweight}', fontDescription[1])\n          .replace(\n            '{-fontstyle}',\n            fontDescription[2].replace('normal', '').replace(/(.+)/, '-$1'),\n          )\n          .replace('{fontstyle}', fontDescription[2]);\n        if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n          const markup = document.createElement('link');\n          markup.href = fontUrl;\n          markup.rel = 'stylesheet';\n          document.head.appendChild(markup);\n        }\n      }\n    }\n  }\n  processedFontFamilies[fontsKey] = fonts;\n  return fonts;\n}\n","/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\nimport {toPromise} from 'ol/functions.js';\n\nimport Color from '@mapbox/mapbox-gl-style-spec/util/color.js';\nimport convertFunction from '@mapbox/mapbox-gl-style-spec/function/convert.js';\nimport createFilter from '@mapbox/mapbox-gl-style-spec/feature_filter/index.js';\nimport derefLayers from '@mapbox/mapbox-gl-style-spec/deref.js';\nimport mb2css from 'mapbox-to-css-font';\nimport spec from '@mapbox/mapbox-gl-style-spec/reference/v8.json';\nimport {applyLetterSpacing, wrapText} from './text.js';\nimport {\n  clearFunctionCache,\n  createCanvas,\n  defaultResolutions,\n  deg2rad,\n  drawIconHalo,\n  drawSDF,\n  getFilterCache,\n  getFunctionCache,\n  getStyleFunctionKey,\n  getZoomForResolution,\n} from './util.js';\nimport {\n  createPropertyExpression,\n  isExpression,\n} from '@mapbox/mapbox-gl-style-spec/expression/index.js';\nimport {isFunction} from '@mapbox/mapbox-gl-style-spec/function/index.js';\n\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n * @typedef {import('./util.js').ResourceType} ResourceType\n */\n\nconst types = {\n  'Point': 1,\n  'MultiPoint': 1,\n  'LineString': 2,\n  'MultiLineString': 2,\n  'Polygon': 3,\n  'MultiPolygon': 3,\n};\nconst anchor = {\n  'center': [0.5, 0.5],\n  'left': [0, 0.5],\n  'right': [1, 0.5],\n  'top': [0.5, 0],\n  'bottom': [0.5, 1],\n  'top-left': [0, 0],\n  'top-right': [1, 0],\n  'bottom-left': [0, 1],\n  'bottom-right': [1, 1],\n};\n\nconst expressionData = function (rawExpression, propertySpec) {\n  const compiledExpression = createPropertyExpression(\n    rawExpression,\n    propertySpec,\n  );\n  if (compiledExpression.result === 'error') {\n    throw new Error(\n      compiledExpression.value\n        .map((err) => `${err.key}: ${err.message}`)\n        .join(', '),\n    );\n  }\n  return compiledExpression.value;\n};\n\nconst emptyObj = {};\nconst zoomObj = {zoom: 0};\nlet renderFeatureCoordinates, renderFeature;\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nexport function getValue(\n  layer,\n  layoutOrPaint,\n  property,\n  zoom,\n  feature,\n  functionCache,\n  featureState,\n) {\n  const layerId = layer.id;\n  if (!functionCache) {\n    functionCache = {};\n    console.warn('No functionCache provided to getValue()'); //eslint-disable-line no-console\n  }\n  if (!functionCache[layerId]) {\n    functionCache[layerId] = {};\n  }\n  const functions = functionCache[layerId];\n  if (!functions[property]) {\n    let value = (layer[layoutOrPaint] || emptyObj)[property];\n    const propertySpec = spec[`${layoutOrPaint}_${layer.type}`][property];\n    if (value === undefined) {\n      value = propertySpec.default;\n    }\n    let isExpr = isExpression(value);\n    if (!isExpr && isFunction(value)) {\n      value = convertFunction(value, propertySpec);\n      isExpr = true;\n    }\n    if (isExpr) {\n      const compiledExpression = expressionData(value, propertySpec);\n      functions[property] =\n        compiledExpression.evaluate.bind(compiledExpression);\n    } else {\n      if (propertySpec.type == 'color') {\n        value = Color.parse(value);\n      }\n      functions[property] = function () {\n        return value;\n      };\n    }\n  }\n  zoomObj.zoom = zoom;\n  return functions[property](zoomObj, feature, featureState);\n}\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {\"icon\"|\"text\"} prefix Style property prefix.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getDeclutterMode(layer, zoom, feature, prefix, functionCache) {\n  const allowOverlap = getValue(\n    layer,\n    'layout',\n    `${prefix}-allow-overlap`,\n    zoom,\n    feature,\n    functionCache,\n  );\n  if (!allowOverlap) {\n    return 'declutter';\n  }\n  const ignorePlacement = getValue(\n    layer,\n    'layout',\n    `${prefix}-ignore-placement`,\n    zoom,\n    feature,\n    functionCache,\n  );\n  if (!ignorePlacement) {\n    return 'obstacle';\n  }\n  return 'none';\n}\n\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n  if (!filterCache) {\n    console.warn('No filterCache provided to evaluateFilter()'); //eslint-disable-line no-console\n  }\n  if (!(layerId in filterCache)) {\n    filterCache[layerId] = createFilter(filter).filter;\n  }\n  zoomObj.zoom = zoom;\n  return filterCache[layerId](zoomObj, feature);\n}\n\nlet renderTransparentEnabled = false;\n\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nexport function renderTransparent(enabled) {\n  if (enabled !== renderTransparentEnabled) {\n    clearFunctionCache();\n    renderTransparentEnabled = enabled;\n  }\n}\n\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n  if (color) {\n    if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n      return undefined;\n    }\n    const a = color.a;\n    opacity = opacity === undefined ? 1 : opacity;\n    return a === 0\n      ? 'transparent'\n      : 'rgba(' +\n          Math.round((color.r * 255) / a) +\n          ',' +\n          Math.round((color.g * 255) / a) +\n          ',' +\n          Math.round((color.b * 255) / a) +\n          ',' +\n          a * opacity +\n          ')';\n  }\n  return color;\n}\n\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n  return text.replace(templateRegEx, function (match) {\n    return properties[match.slice(1, -1)] || '';\n  });\n}\n\nlet recordLayer = false;\n\n/**\n * Turns recording of the Mapbox Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nexport function recordStyleLayer(record = false) {\n  recordLayer = record;\n}\n\nexport const styleFunctionArgs = {};\n\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox Style object.\n * @param {string|Request|Promise<string|Request>} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox Style object.\n * @param {function(Array<string>, string=):Array<string>} getFonts Function that\n * receives a font stack and the url template from the GL style's `metadata['ol:webfonts']`\n * property (if set) as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nexport function stylefunction(\n  olLayer,\n  glStyle,\n  sourceOrLayers,\n  resolutions = defaultResolutions,\n  spriteData = undefined,\n  spriteImageUrl = undefined,\n  getFonts = undefined,\n  getImage = undefined,\n) {\n  if (typeof glStyle == 'string') {\n    glStyle = JSON.parse(glStyle);\n  }\n  if (glStyle.version != 8) {\n    throw new Error('glStyle version 8 required.');\n  }\n  styleFunctionArgs[getStyleFunctionKey(glStyle, olLayer)] =\n    Array.from(arguments);\n\n  let spriteImage, spriteImageSize;\n  let spriteImageUnSDFed;\n\n  if (spriteImageUrl) {\n    if (typeof Image !== 'undefined') {\n      const img = new Image();\n      let blobUrl;\n      toPromise(() => spriteImageUrl).then((spriteImageUrl) => {\n        if (spriteImageUrl instanceof Request) {\n          fetch(spriteImageUrl)\n            .then((response) => response.blob())\n            .then((blob) => {\n              blobUrl = URL.createObjectURL(blob);\n              img.src = blobUrl;\n            })\n            .catch(() => {});\n        } else {\n          img.crossOrigin = 'anonymous';\n          img.src = spriteImageUrl;\n          if (blobUrl) {\n            URL.revokeObjectURL(blobUrl);\n          }\n        }\n      });\n      img.onload = function () {\n        spriteImage = img;\n        spriteImageSize = [img.width, img.height];\n        olLayer.changed();\n        img.onload = null;\n      };\n    } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) { //eslint-disable-line\n      const worker = /** @type {*} */ (self);\n      // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n      worker.postMessage({\n        action: 'loadImage',\n        src: spriteImageUrl,\n      });\n      worker.addEventListener('message', function handler(event) {\n        if (\n          event.data.action === 'imageLoaded' &&\n          event.data.src === spriteImageUrl\n        ) {\n          spriteImage = event.data.image;\n          spriteImageSize = [spriteImage.width, spriteImage.height];\n        }\n      });\n    }\n  }\n\n  const allLayers = derefLayers(glStyle.layers);\n\n  const layersBySourceLayer = {};\n  const mapboxLayers = [];\n\n  const iconImageCache = {};\n  const patternCache = {};\n  const functionCache = getFunctionCache(glStyle);\n  const filterCache = getFilterCache(glStyle);\n\n  let mapboxSource;\n  for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n    const layer = allLayers[i];\n    const layerId = layer.id;\n    if (\n      (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers) ||\n      (Array.isArray(sourceOrLayers) && sourceOrLayers.indexOf(layerId) !== -1)\n    ) {\n      const sourceLayer = layer['source-layer'];\n      if (!mapboxSource) {\n        mapboxSource = layer.source;\n        const source = glStyle.sources[mapboxSource];\n        if (!source) {\n          throw new Error(`Source \"${mapboxSource}\" is not defined`);\n        }\n        const type = source.type;\n        if (type !== 'vector' && type !== 'geojson') {\n          throw new Error(\n            `Source \"${mapboxSource}\" is not of type \"vector\" or \"geojson\", but \"${type}\"`,\n          );\n        }\n      } else if (layer.source !== mapboxSource) {\n        throw new Error(\n          `Layer \"${layerId}\" does not use source \"${mapboxSource}`,\n        );\n      }\n      let layers = layersBySourceLayer[sourceLayer];\n      if (!layers) {\n        layers = [];\n        layersBySourceLayer[sourceLayer] = layers;\n      }\n      layers.push({\n        layer: layer,\n        index: i,\n      });\n      mapboxLayers.push(layerId);\n    }\n  }\n\n  const textHalo = new Stroke();\n  const textColor = new Fill();\n\n  const styles = [];\n\n  /**\n   * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {string} [onlyLayer] Calculate style for this layer only.\n   * @return {Array<import(\"ol/style/Style\").default>} Style.\n   */\n  const styleFunction = function (feature, resolution, onlyLayer) {\n    const properties = feature.getProperties();\n    const layers = layersBySourceLayer[properties.layer];\n    if (!layers) {\n      return undefined;\n    }\n    let zoom = resolutions.indexOf(resolution);\n    if (zoom == -1) {\n      zoom = getZoomForResolution(resolution, resolutions);\n    }\n    const type = types[feature.getGeometry().getType()];\n    const f = {\n      id: feature.getId(),\n      properties: properties,\n      type: type,\n    };\n    const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n    let stylesLength = -1;\n    let featureBelongsToLayer;\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      const layerData = layers[i];\n      const layer = layerData.layer;\n      const layerId = layer.id;\n      if (onlyLayer !== undefined && onlyLayer !== layerId) {\n        continue;\n      }\n\n      const layout = layer.layout || emptyObj;\n      const paint = layer.paint || emptyObj;\n      if (\n        layout.visibility === 'none' ||\n        ('minzoom' in layer && zoom < layer.minzoom) ||\n        ('maxzoom' in layer && zoom >= layer.maxzoom)\n      ) {\n        continue;\n      }\n      const filter = layer.filter;\n      if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n        featureBelongsToLayer = layer;\n        let color, opacity, fill, stroke, strokeColor, style;\n        const index = layerData.index;\n        if (\n          type == 3 &&\n          (layer.type == 'fill' || layer.type == 'fill-extrusion')\n        ) {\n          opacity = getValue(\n            layer,\n            'paint',\n            layer.type + '-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (layer.type + '-pattern' in paint) {\n            const fillIcon = getValue(\n              layer,\n              'paint',\n              layer.type + '-pattern',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            if (fillIcon) {\n              const icon =\n                typeof fillIcon === 'string'\n                  ? fromTemplate(fillIcon, properties)\n                  : fillIcon.toString();\n              if (spriteImage && spriteData && spriteData[icon]) {\n                ++stylesLength;\n                style = styles[stylesLength];\n                if (\n                  !style ||\n                  !style.getFill() ||\n                  style.getStroke() ||\n                  style.getText()\n                ) {\n                  style = new Style({\n                    fill: new Fill(),\n                  });\n                  styles[stylesLength] = style;\n                }\n                fill = style.getFill();\n                style.setZIndex(index);\n                const icon_cache_key = icon + '.' + opacity;\n                let pattern = patternCache[icon_cache_key];\n                if (!pattern) {\n                  const spriteImageData = spriteData[icon];\n                  const canvas = createCanvas(\n                    spriteImageData.width,\n                    spriteImageData.height,\n                  );\n                  const ctx = /** @type {CanvasRenderingContext2D} */ (\n                    canvas.getContext('2d')\n                  );\n                  ctx.globalAlpha = opacity;\n                  ctx.drawImage(\n                    spriteImage,\n                    spriteImageData.x,\n                    spriteImageData.y,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                    0,\n                    0,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                  );\n                  pattern = ctx.createPattern(canvas, 'repeat');\n                  patternCache[icon_cache_key] = pattern;\n                }\n                fill.setColor(pattern);\n              }\n            }\n          } else {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                layer.type + '-color',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n              opacity,\n            );\n            if (layer.type + '-outline-color' in paint) {\n              strokeColor = colorWithOpacity(\n                getValue(\n                  layer,\n                  'paint',\n                  layer.type + '-outline-color',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                ),\n                opacity,\n              );\n            }\n            if (!strokeColor) {\n              strokeColor = color;\n            }\n            if (color || strokeColor) {\n              ++stylesLength;\n              style = styles[stylesLength];\n              if (\n                !style ||\n                (color && !style.getFill()) ||\n                (!color && style.getFill()) ||\n                (strokeColor && !style.getStroke()) ||\n                (!strokeColor && style.getStroke()) ||\n                style.getText()\n              ) {\n                style = new Style({\n                  fill: color ? new Fill() : undefined,\n                  stroke: strokeColor ? new Stroke() : undefined,\n                });\n                styles[stylesLength] = style;\n              }\n              if (color) {\n                fill = style.getFill();\n                fill.setColor(color);\n              }\n              if (strokeColor) {\n                stroke = style.getStroke();\n                stroke.setColor(strokeColor);\n                stroke.setWidth(0.5);\n              }\n              style.setZIndex(index);\n            }\n          }\n        }\n        if (type != 1 && layer.type == 'line') {\n          if (!('line-pattern' in paint)) {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'line-color',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n              getValue(\n                layer,\n                'paint',\n                'line-opacity',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n          } else {\n            color = undefined;\n          }\n          const width = getValue(\n            layer,\n            'paint',\n            'line-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (color && width > 0) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getStroke() ||\n              style.getFill() ||\n              style.getText()\n            ) {\n              style = new Style({\n                stroke: new Stroke(),\n              });\n              styles[stylesLength] = style;\n            }\n            stroke = style.getStroke();\n            stroke.setLineCap(\n              getValue(\n                layer,\n                'layout',\n                'line-cap',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setLineJoin(\n              getValue(\n                layer,\n                'layout',\n                'line-join',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setMiterLimit(\n              getValue(\n                layer,\n                'layout',\n                'line-miter-limit',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setColor(color);\n            stroke.setWidth(width);\n            stroke.setLineDash(\n              paint['line-dasharray']\n                ? getValue(\n                    layer,\n                    'paint',\n                    'line-dasharray',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState,\n                  ).map(function (x) {\n                    return x * width;\n                  })\n                : null,\n            );\n            style.setZIndex(index);\n          }\n        }\n\n        let hasImage = false;\n        let text = null;\n        let placementAngle = 0;\n        let icon, iconImg, skipLabel;\n        if ((type == 1 || type == 2) && 'icon-image' in layout) {\n          const iconImage = getValue(\n            layer,\n            'layout',\n            'icon-image',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (iconImage) {\n            icon =\n              typeof iconImage === 'string'\n                ? fromTemplate(iconImage, properties)\n                : iconImage.toString();\n            let styleGeom = undefined;\n            const imageElement = getImage ? getImage(olLayer, icon) : undefined;\n            if (\n              (spriteImage && spriteData && spriteData[icon]) ||\n              imageElement\n            ) {\n              const iconRotationAlignment = getValue(\n                layer,\n                'layout',\n                'icon-rotation-alignment',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              );\n              if (type == 2) {\n                const geom = /** @type {*} */ (feature.getGeometry());\n                // ol package and ol-debug.js only\n                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                  const extent = geom.getExtent();\n                  const size = Math.sqrt(\n                    Math.max(\n                      Math.pow((extent[2] - extent[0]) / resolution, 2),\n                      Math.pow((extent[3] - extent[1]) / resolution, 2),\n                    ),\n                  );\n                  if (size > 150) {\n                    //FIXME Do not hard-code a size of 150\n                    const midpoint =\n                      geom.getType() === 'MultiLineString'\n                        ? geom.getFlatMidpoints()\n                        : geom.getFlatMidpoint();\n                    if (!renderFeature) {\n                      renderFeatureCoordinates = [NaN, NaN];\n                      renderFeature = new RenderFeature(\n                        'Point',\n                        renderFeatureCoordinates,\n                        [],\n                        2,\n                        {},\n                        undefined,\n                      );\n                    }\n                    styleGeom = renderFeature;\n                    renderFeatureCoordinates[0] = midpoint[0];\n                    renderFeatureCoordinates[1] = midpoint[1];\n                    const placement = getValue(\n                      layer,\n                      'layout',\n                      'symbol-placement',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState,\n                    );\n                    if (\n                      placement === 'line' &&\n                      iconRotationAlignment === 'map'\n                    ) {\n                      const stride = geom.getStride();\n                      const coordinates = geom.getFlatCoordinates();\n                      for (\n                        let i = 0, ii = coordinates.length - stride;\n                        i < ii;\n                        i += stride\n                      ) {\n                        const x1 = coordinates[i];\n                        const y1 = coordinates[i + 1];\n                        const x2 = coordinates[i + stride];\n                        const y2 = coordinates[i + stride + 1];\n                        const minX = Math.min(x1, x2);\n                        const minY = Math.min(y1, y2);\n                        const maxX = Math.max(x1, x2);\n                        const maxY = Math.max(y1, y2);\n                        if (\n                          midpoint[0] >= minX &&\n                          midpoint[0] <= maxX &&\n                          midpoint[1] >= minY &&\n                          midpoint[1] <= maxY\n                        ) {\n                          placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                          break;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              if (type !== 2 || styleGeom) {\n                const iconSize = getValue(\n                  layer,\n                  'layout',\n                  'icon-size',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                );\n                const iconColor =\n                  paint['icon-color'] !== undefined\n                    ? getValue(\n                        layer,\n                        'paint',\n                        'icon-color',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState,\n                      )\n                    : null;\n                if (!iconColor || iconColor.a !== 0) {\n                  const haloColor = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-color',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState,\n                  );\n                  const haloWidth = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-width',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState,\n                  );\n                  let iconCacheKey = `${icon}.${iconSize}.${haloWidth}.${haloColor}`;\n                  if (iconColor !== null) {\n                    iconCacheKey += `.${iconColor}`;\n                  }\n                  iconImg = iconImageCache[iconCacheKey];\n                  if (!iconImg) {\n                    const declutterMode = getDeclutterMode(\n                      layer,\n                      zoom,\n                      f,\n                      'icon',\n                      functionCache,\n                    );\n                    let displacement;\n                    if ('icon-offset' in layout) {\n                      displacement = getValue(\n                        layer,\n                        'layout',\n                        'icon-offset',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState,\n                      ).slice(0);\n                      displacement[0] *= iconSize;\n                      displacement[1] *= -iconSize;\n                    }\n                    let color = iconColor\n                      ? [\n                          iconColor.r * 255,\n                          iconColor.g * 255,\n                          iconColor.b * 255,\n                          iconColor.a,\n                        ]\n                      : undefined;\n                    if (imageElement) {\n                      const iconOptions = {\n                        color: color,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                        scale: iconSize,\n                      };\n                      if (typeof imageElement === 'string') {\n                        // it is a src URL\n                        iconOptions.src = imageElement;\n                      } else {\n                        iconOptions.img = imageElement;\n                        iconOptions.imgSize = [\n                          imageElement.width,\n                          imageElement.height,\n                        ];\n                      }\n                      iconImg = new Icon(iconOptions);\n                    } else {\n                      const spriteImageData = spriteData[icon];\n                      let img, size, offset;\n                      if (haloWidth) {\n                        if (spriteImageData.sdf) {\n                          img = drawIconHalo(\n                            drawSDF(\n                              spriteImage,\n                              spriteImageData,\n                              iconColor || [0, 0, 0, 1],\n                            ),\n                            {\n                              x: 0,\n                              y: 0,\n                              width: spriteImageData.width,\n                              height: spriteImageData.height,\n                              pixelRatio: spriteImageData.pixelRatio,\n                            },\n                            haloWidth,\n                            haloColor,\n                          );\n                          color = undefined; // do not tint haloed icons\n                        } else {\n                          img = drawIconHalo(\n                            spriteImage,\n                            spriteImageData,\n                            haloWidth,\n                            haloColor,\n                          );\n                        }\n                      } else {\n                        if (spriteImageData.sdf) {\n                          if (!spriteImageUnSDFed) {\n                            spriteImageUnSDFed = drawSDF(\n                              spriteImage,\n                              {\n                                x: 0,\n                                y: 0,\n                                width: spriteImageSize[0],\n                                height: spriteImageSize[1],\n                              },\n                              {r: 1, g: 1, b: 1, a: 1},\n                            );\n                          }\n                          img = spriteImageUnSDFed;\n                        } else {\n                          img = spriteImage;\n                        }\n                        size = [spriteImageData.width, spriteImageData.height];\n                        offset = [spriteImageData.x, spriteImageData.y];\n                      }\n                      iconImg = new Icon({\n                        color: color,\n                        img: img,\n                        // @ts-ignore\n                        imgSize: spriteImageSize,\n                        size: size,\n                        offset: offset,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        scale: iconSize / spriteImageData.pixelRatio,\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      });\n                    }\n                    iconImageCache[iconCacheKey] = iconImg;\n                  }\n                }\n                if (iconImg) {\n                  ++stylesLength;\n                  style = styles[stylesLength];\n                  if (\n                    !style ||\n                    !style.getImage() ||\n                    style.getFill() ||\n                    style.getStroke()\n                  ) {\n                    style = new Style();\n                    styles[stylesLength] = style;\n                  }\n                  style.setGeometry(styleGeom);\n                  iconImg.setRotation(\n                    placementAngle +\n                      deg2rad(\n                        getValue(\n                          layer,\n                          'layout',\n                          'icon-rotate',\n                          zoom,\n                          f,\n                          functionCache,\n                          featureState,\n                        ),\n                      ),\n                  );\n                  iconImg.setOpacity(\n                    getValue(\n                      layer,\n                      'paint',\n                      'icon-opacity',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState,\n                    ),\n                  );\n                  iconImg.setAnchor(\n                    anchor[\n                      getValue(\n                        layer,\n                        'layout',\n                        'icon-anchor',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState,\n                      )\n                    ],\n                  );\n                  style.setImage(iconImg);\n                  text = style.getText();\n                  style.setText(undefined);\n                  style.setZIndex(index);\n                  hasImage = true;\n                  skipLabel = false;\n                }\n              } else {\n                skipLabel = true;\n              }\n            }\n          }\n        }\n\n        if (type == 1 && layer.type === 'circle') {\n          ++stylesLength;\n          style = styles[stylesLength];\n          if (\n            !style ||\n            !style.getImage() ||\n            style.getFill() ||\n            style.getStroke()\n          ) {\n            style = new Style();\n            styles[stylesLength] = style;\n          }\n          const circleRadius =\n            'circle-radius' in paint\n              ? getValue(\n                  layer,\n                  'paint',\n                  'circle-radius',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                )\n              : 5;\n          const circleStrokeColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-color',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n\n          const circleTranslate = getValue(\n            layer,\n            'paint',\n            'circle-translate',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const circleColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-color',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n          const circleStrokeWidth = getValue(\n            layer,\n            'paint',\n            'circle-stroke-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const cache_key =\n            circleRadius +\n            '.' +\n            circleStrokeColor +\n            '.' +\n            circleColor +\n            '.' +\n            circleStrokeWidth +\n            '.' +\n            circleTranslate[0] +\n            '.' +\n            circleTranslate[1];\n\n          iconImg = iconImageCache[cache_key];\n          if (!iconImg) {\n            iconImg = new Circle({\n              radius: circleRadius,\n              displacement: [circleTranslate[0], -circleTranslate[1]],\n              stroke:\n                circleStrokeColor && circleStrokeWidth > 0\n                  ? new Stroke({\n                      width: circleStrokeWidth,\n                      color: circleStrokeColor,\n                    })\n                  : undefined,\n              fill: circleColor\n                ? new Fill({\n                    color: circleColor,\n                  })\n                : undefined,\n              declutterMode: 'none',\n            });\n            iconImageCache[cache_key] = iconImg;\n          }\n          style.setImage(iconImg);\n          text = style.getText();\n          style.setText(undefined);\n          style.setGeometry(undefined);\n          style.setZIndex(index);\n          hasImage = true;\n        }\n\n        let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n        if ('text-field' in layout) {\n          textSize = Math.round(\n            getValue(\n              layer,\n              'layout',\n              'text-size',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n          const fontArray = getValue(\n            layer,\n            'layout',\n            'text-font',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          textLineHeight = getValue(\n            layer,\n            'layout',\n            'text-line-height',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          font = mb2css(\n            getFonts\n              ? getFonts(\n                  fontArray,\n                  glStyle.metadata\n                    ? glStyle.metadata['ol:webfonts']\n                    : undefined,\n                )\n              : fontArray,\n            textSize,\n            textLineHeight,\n          );\n          if (!font.includes('sans-serif')) {\n            font += ',sans-serif';\n          }\n          letterSpacing = getValue(\n            layer,\n            'layout',\n            'text-letter-spacing',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          maxTextWidth = getValue(\n            layer,\n            'layout',\n            'text-max-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const textField = getValue(\n            layer,\n            'layout',\n            'text-field',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (typeof textField === 'object' && textField.sections) {\n            if (textField.sections.length === 1) {\n              label = textField.toString();\n            } else {\n              label = textField.sections.reduce((acc, chunk, i) => {\n                const fonts = chunk.fontStack\n                  ? chunk.fontStack.split(',')\n                  : fontArray;\n                const chunkFont = mb2css(\n                  getFonts ? getFonts(fonts) : fonts,\n                  textSize * (chunk.scale || 1),\n                  textLineHeight,\n                );\n                let text = chunk.text;\n                if (text === '\\n') {\n                  acc.push('\\n', '');\n                  return acc;\n                }\n                if (type == 2) {\n                  acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                  return;\n                }\n                text = wrapText(\n                  text,\n                  chunkFont,\n                  maxTextWidth,\n                  letterSpacing,\n                ).split('\\n');\n                for (let i = 0, ii = text.length; i < ii; ++i) {\n                  if (i > 0) {\n                    acc.push('\\n', '');\n                  }\n                  acc.push(text[i], chunkFont);\n                }\n                return acc;\n              }, []);\n            }\n          } else {\n            label = fromTemplate(textField, properties).trim();\n          }\n          opacity = getValue(\n            layer,\n            'paint',\n            'text-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n        }\n        if (label && opacity && !skipLabel) {\n          if (!hasImage) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getText() ||\n              style.getFill() ||\n              style.getStroke()\n            ) {\n              style = new Style();\n              styles[stylesLength] = style;\n            }\n            style.setImage(undefined);\n            style.setGeometry(undefined);\n          }\n          const declutterMode = getDeclutterMode(\n            layer,\n            zoom,\n            f,\n            'text',\n            functionCache,\n          );\n          if (!style.getText()) {\n            style.setText(text);\n          }\n          text = style.getText();\n          if (\n            !text ||\n            ('getDeclutterMode' in text &&\n              text.getDeclutterMode() !== declutterMode)\n          ) {\n            text = new Text({\n              padding: [2, 2, 2, 2],\n              // @ts-ignore\n              declutterMode: declutterMode,\n            });\n            style.setText(text);\n          }\n          const textTransform = getValue(\n            layer,\n            'layout',\n            'text-transform',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (textTransform == 'uppercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toUpperCase()))\n              : label.toUpperCase();\n          } else if (textTransform == 'lowercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toLowerCase()))\n              : label.toLowerCase();\n          }\n          const wrappedLabel = Array.isArray(label)\n            ? label\n            : type == 2\n              ? applyLetterSpacing(label, letterSpacing)\n              : wrapText(label, font, maxTextWidth, letterSpacing);\n          text.setText(wrappedLabel);\n          text.setFont(font);\n          text.setRotation(\n            deg2rad(\n              getValue(\n                layer,\n                'layout',\n                'text-rotate',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            ),\n          );\n          const textAnchor = getValue(\n            layer,\n            'layout',\n            'text-anchor',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const placement =\n            hasImage || type == 1\n              ? 'point'\n              : getValue(\n                  layer,\n                  'layout',\n                  'symbol-placement',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                );\n          let textAlign;\n          if (placement === 'line-center') {\n            text.setPlacement('line');\n            textAlign = 'center';\n          } else {\n            text.setPlacement(placement);\n          }\n          if (placement === 'line' && typeof text.setRepeat === 'function') {\n            const symbolSpacing = getValue(\n              layer,\n              'layout',\n              'symbol-spacing',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setRepeat(symbolSpacing * 2);\n          }\n          text.setOverflow(placement === 'point');\n          let textHaloWidth = getValue(\n            layer,\n            'paint',\n            'text-halo-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const textOffset = getValue(\n            layer,\n            'layout',\n            'text-offset',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const textTranslate = getValue(\n            layer,\n            'paint',\n            'text-translate',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          // Text offset has to take halo width and line height into account\n          let vOffset = 0;\n          let hOffset = 0;\n          if (placement == 'point') {\n            textAlign = 'center';\n            if (textAnchor.indexOf('left') !== -1) {\n              textAlign = 'left';\n              hOffset = textHaloWidth;\n            } else if (textAnchor.indexOf('right') !== -1) {\n              textAlign = 'right';\n              hOffset = -textHaloWidth;\n            }\n            const textRotationAlignment = getValue(\n              layer,\n              'layout',\n              'text-rotation-alignment',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setRotateWithView(textRotationAlignment == 'map');\n          } else {\n            text.setMaxAngle(\n              (deg2rad(\n                getValue(\n                  layer,\n                  'layout',\n                  'text-max-angle',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                ),\n              ) *\n                label.length) /\n                wrappedLabel.length,\n            );\n            text.setRotateWithView(false);\n          }\n          text.setTextAlign(textAlign);\n          let textBaseline = 'middle';\n          if (textAnchor.indexOf('bottom') == 0) {\n            textBaseline = 'bottom';\n            vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n          } else if (textAnchor.indexOf('top') == 0) {\n            textBaseline = 'top';\n            vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n          }\n          text.setTextBaseline(textBaseline);\n          const textJustify = getValue(\n            layer,\n            'layout',\n            'text-justify',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n          text.setOffsetX(\n            textOffset[0] * textSize + hOffset + textTranslate[0],\n          );\n          text.setOffsetY(\n            textOffset[1] * textSize + vOffset + textTranslate[1],\n          );\n          textColor.setColor(\n            colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'text-color',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n              opacity,\n            ),\n          );\n          text.setFill(textColor);\n          const haloColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'text-halo-color',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n            opacity,\n          );\n          if (haloColor && textHaloWidth > 0) {\n            textHalo.setColor(haloColor);\n            // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n            // Halo width must be doubled because it is applied around the center of the text outline\n            textHaloWidth *= 2;\n            // 1/4 of text size (spec) x 2\n            const halfTextSize = 0.5 * textSize;\n            textHalo.setWidth(\n              textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize,\n            );\n            text.setStroke(textHalo);\n          } else {\n            text.setStroke(undefined);\n          }\n          const textPadding = getValue(\n            layer,\n            'layout',\n            'text-padding',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const padding = text.getPadding();\n          if (textPadding !== padding[0]) {\n            padding[0] = textPadding;\n            padding[1] = textPadding;\n            padding[2] = textPadding;\n            padding[3] = textPadding;\n          }\n          style.setZIndex(index);\n        }\n      }\n    }\n\n    if (stylesLength > -1) {\n      styles.length = stylesLength + 1;\n      if (recordLayer) {\n        if ('set' in feature) {\n          // ol/Feature\n          feature.set('mapbox-layer', featureBelongsToLayer);\n        } else {\n          // ol/render/Feature\n          feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n        }\n      }\n      return styles;\n    }\n    return undefined;\n  };\n\n  olLayer.setStyle(styleFunction);\n  olLayer.set('mapbox-source', mapboxSource);\n  olLayer.set('mapbox-layers', mapboxLayers);\n  olLayer.set('mapbox-featurestate', olLayer.get('mapbox-featurestate') || {});\n  return styleFunction;\n}\n\n/**\n * Get the the style for a specific Mapbox layer only. This can be useful for creating a legend.\n * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature OpenLayers feature.\n * @param {number} resolution View resolution.\n * @param {import(\"ol/layer\").Vector|import(\"ol/layer\").VectorTile} olLayer OpenLayers layer.\n * @param {string} layerId Id of the Mapbox layer to get the style for\n * @return {Array<import(\"ol/style\").Style>} Styles for the provided Mapbox layer.\n */\nexport function getStyleForLayer(feature, resolution, olLayer, layerId) {\n  const evaluateStyle = olLayer.getStyleFunction();\n  if (evaluateStyle.length === 3) {\n    // @ts-ignore\n    return evaluateStyle(feature, resolution, layerId);\n  }\n  return undefined;\n}\n\nexport {\n  colorWithOpacity as _colorWithOpacity,\n  evaluateFilter as _evaluateFilter,\n  fromTemplate as _fromTemplate,\n  getValue as _getValue,\n};\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection),\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection,\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.image_.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth),\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight),\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const context = this.getRenderContext(frameState);\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection,\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY,\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      if (opacity !== 1) {\n        context.save();\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.restore();\n      }\n    }\n    this.postRender(this.context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureClass} FeatureClassToFeature\n * @typedef {Object} Options\n * @property {FeatureClassToFeature} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof import(\"../render/Feature.js\").default]\n * @extends {FeatureFormat<T>}\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options<T>} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    this.featureClass = options.featureClass\n      ? options.featureClass\n      : /** @type {T} */ (RenderFeature);\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1],\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass === RenderFeature) {\n      feature = new /** @type {typeof RenderFeature} */ (this.featureClass)(\n        geometryType,\n        flatCoordinates,\n        ends,\n        2,\n        values,\n        id,\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n              ? new LineString(flatCoordinates, 'XY')\n              : geometryType === 'MultiPoint'\n                ? new MultiPoint(flatCoordinates, 'XY')\n                : geometryType === 'MultiLineString'\n                  ? new MultiLineString(flatCoordinates, 'XY', ends)\n                  : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import('./Feature.js').FeatureClassToFeature<T>>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return /** @type {Array<import('./Feature.js').FeatureClassToFeature<T>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n            ? pbf.readFloat()\n            : tag === 3\n              ? pbf.readDouble()\n              : tag === 4\n                ? pbf.readVarint64()\n                : tag === 5\n                  ? pbf.readVarint()\n                  : tag === 6\n                    ? pbf.readSVarint()\n                    : tag === 7\n                      ? pbf.readBoolean()\n                      : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../render/Feature.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../render/Feature.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageState from './ImageState.js';\nimport ImageWrapper from './Image.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageWrapper {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/resolution\n */\n\n/**\n * @typedef {number|Array<number>} ResolutionLike\n */\n\n/**\n * @param {ResolutionLike} resolution Resolution.\n * @return {number} Resolution.\n */\nexport function fromResolutionLike(resolution) {\n  if (Array.isArray(resolution)) {\n    return Math.min(...resolution);\n  }\n  return resolution;\n}\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../Image.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageWrapper {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate,\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution,\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        fromResolutionLike(this.sourceImage_.getResolution()),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_,\n        true,\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this,\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (\n        this.sourceListenerKey_\n      ),\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {DECIMALS} from './common.js';\nimport {ceil} from '../math.js';\nimport {\n  containsExtent,\n  equals,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../Image.js\").Loader} [loader] Loader. Can either be a custom loader, or one of the\n * loaders created with a `createLoader()` function ({@link module:ol/source/wms.createLoader wms},\n * {@link module:ol/source/arcgisRest.createLoader arcgisRest}, {@link module:ol/source/mapguide.createLoader mapguide},\n * {@link module:ol/source/static.createLoader static}).\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Base class for sources providing a single image.\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").Loader}\n     */\n    this.loader = options.loader || null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.wantedExtent_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.wantedResolution_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.static_ = options.loader ? options.loader.length === 0 : false;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.wantedProjection_ = null;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate(),\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.loader) {\n      const requestExtent = getRequestExtent(extent, resolution, pixelRatio, 1);\n      const requestResolution = this.findNearestResolution(resolution);\n      if (\n        this.image &&\n        (this.static_ ||\n          (this.wantedProjection_ === projection &&\n            ((this.wantedExtent_ &&\n              containsExtent(this.wantedExtent_, requestExtent)) ||\n              containsExtent(this.image.getExtent(), requestExtent)) &&\n            ((this.wantedResolution_ &&\n              fromResolutionLike(this.wantedResolution_) ===\n                requestResolution) ||\n              fromResolutionLike(this.image.getResolution()) ===\n                requestResolution)))\n      ) {\n        return this.image;\n      }\n      this.wantedProjection_ = projection;\n      this.wantedExtent_ = requestExtent;\n      this.wantedResolution_ = requestResolution;\n      this.image = new ImageWrapper(\n        requestExtent,\n        requestResolution,\n        pixelRatio,\n        this.loader,\n      );\n      this.image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this),\n      );\n    }\n    return this.image;\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n/**\n * Adjusts the extent so it aligns with pixel boundaries.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Reolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} ratio Ratio between request size and view size.\n * @return {import(\"../extent.js\").Extent} Request extent.\n */\nexport function getRequestExtent(extent, resolution, pixelRatio, ratio) {\n  const imageResolution = resolution / pixelRatio;\n  const center = getCenter(extent);\n  const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n  const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n  const marginWidth = ceil(((ratio - 1) * viewWidth) / 2, DECIMALS);\n  const requestWidth = viewWidth + 2 * marginWidth;\n  const marginHeight = ceil(((ratio - 1) * viewHeight) / 2, DECIMALS);\n  const requestHeight = viewHeight + 2 * marginHeight;\n  return getForViewAndSize(center, imageResolution, 0, [\n    requestWidth,\n    requestHeight,\n  ]);\n}\n\nexport default ImageSource;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nexport const DECIMALS = 4;\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.',\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageLayer from '../layer/Image.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileLayer from '../layer/Tile.js';\nimport TileQueue from '../TileQueue.js';\nimport TileSource from './Tile.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {create as createTransform} from '../transform.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport {getUid} from '../util.js';\n\nlet hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet context;\n\n/**\n * @param {Uint8ClampedArray} data Image data.\n * @param {number} width Number of columns.\n * @param {number} height Number of rows.\n * @return {ImageData} Image data.\n */\nexport function newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  }\n\n  if (!context) {\n    context = document.createElement('canvas').getContext('2d');\n  }\n  const imageData = context.createImageData(width, height);\n  imageData.data.set(data);\n  return imageData;\n}\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  let workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    }\n    return {data: data, width: width, height: height};\n  }\n\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height,\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'})),\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    this._imageOps = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this._imageOps) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this._onWorkerMessage.bind(this, 0),\n      );\n    }\n    this._workers = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this._queue = [];\n\n    this._maxQueueLength = config.queue || Infinity;\n    this._running = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this._dataLookup = {};\n\n    /**\n     * @type {Job}\n     * @private\n     */\n    this._job = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this._enqueue({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this._dispatch();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  _enqueue(job) {\n    this._queue.push(job);\n    while (this._queue.length > this._maxQueueLength) {\n      this._queue.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  _dispatch() {\n    if (this._running || this._queue.length === 0) {\n      return;\n    }\n\n    const job = this._queue.shift();\n    this._job = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        buffers,\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this._workers[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        slices,\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  _onWorkerMessage(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this._dataLookup[index] = event.data;\n    --this._running;\n    if (this._running === 0) {\n      this._resolveJob();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  _resolveJob() {\n    const job = this._job;\n    const threads = this._workers.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n      meta = this._dataLookup[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this._dataLookup[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this._dataLookup[i]['meta'];\n      }\n    }\n    this._job = null;\n    this._dataLookup = {};\n    job.callback(\n      null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta,\n    );\n    this._dispatch();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   */\n  disposeInternal() {\n    for (let i = 0; i < this._workers.length; ++i) {\n      this._workers[i].terminate();\n    }\n    this._workers.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /** @type {boolean} */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.processSources_.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutter: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      const attributions = [];\n      for (\n        let index = 0, iMax = options.sources.length;\n        index < iMax;\n        ++index\n      ) {\n        const sourceOrLayer = options.sources[index];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const attributionGetter = source.getAttributions();\n        if (typeof attributionGetter === 'function') {\n          const sourceAttribution = attributionGetter(frameState);\n          attributions.push.apply(attributions, sourceAttribution);\n        }\n      }\n      return attributions.length !== 0 ? attributions : null;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    this.tileQueue_.loadMoreTiles(16, 16);\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      frameState.renderTargets = {};\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data),\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState),\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas,\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    } else {\n      this.changed();\n    }\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data),\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {},\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark,\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this),\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      throw new Error('Either `url` or `tileJSON` options must be provided');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection,\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {fromKey, getCacheKeyForTileKey, getKeyZXY} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default<import(\"../format/Feature.js\").FeatureToFeatureClass<FeatureType>>} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options<FeatureType>} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<import(\"../format/Feature.js\").FeatureToFeatureClass<FeatureType>>|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache = new TileCache(this.tileCache.highWaterMark);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.tileCache;\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const z = fromKey(tileCache.peekFirstKey())[0];\n    const tileGrid = this.tileGrid;\n    tileCache.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTileCache.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      const tile = tileCache.peek(cacheKey);\n      if (tile) {\n        const sourceTiles = tile.sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection,\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection,\n        );\n        const sourceTile = this.sourceTileCache.containsKey(tileUrl)\n          ? this.sourceTileCache.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction,\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR,\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0],\n          );\n          this.sourceTileCache.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR,\n          )\n            ? TileState.ERROR\n            : TileState.LOADED,\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const coordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    let tile;\n    if (this.tileCache.containsKey(coordKey)) {\n      tile = this.tileCache.get(coordKey);\n      if (tile.key === key) {\n        return tile;\n      }\n    }\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        empty =\n          empty &&\n          !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      });\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection),\n    );\n\n    newTile.key = key;\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      this.tileCache.replace(coordKey, newTile);\n    } else {\n      this.tileCache.set(coordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    super.updateCacheSize(tileCount * 2, projection);\n    this.sourceTileCache.highWaterMark =\n      this.getTileCacheForProjection(projection).highWaterMark;\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile),\n      );\n    },\n  );\n}\n","/**\n * Generates a shaded relief image given elevation data.  Uses a 3x3\n * neighborhood for determining slope and aspect.\n * @param {Array<ImageData>} inputs Array of input images.\n * @param {Object} data Data added in the \"beforeoperations\" event.\n * @return {ImageData} Output image.\n */\nexport function hillshade(inputs, data) {\n  const elevationImage = inputs[0];\n  const width = elevationImage.width;\n  const height = elevationImage.height;\n  const elevationData = elevationImage.data;\n  const shadeData = new Uint8ClampedArray(elevationData.length);\n  const dp = data.resolution * 2;\n  const maxX = width - 1;\n  const maxY = height - 1;\n  const pixel = [0, 0, 0, 0];\n  const twoPi = 2 * Math.PI;\n  const halfPi = Math.PI / 2;\n  const sunEl = (Math.PI * data.sunEl) / 180;\n  const sunAz = (Math.PI * data.sunAz) / 180;\n  const cosSunEl = Math.cos(sunEl);\n  const sinSunEl = Math.sin(sunEl);\n  const highlightColor = data.highlightColor;\n  const shadowColor = data.shadowColor;\n  const accentColor = data.accentColor;\n  const encoding = data.encoding;\n\n  let pixelX,\n    pixelY,\n    x0,\n    x1,\n    y0,\n    y1,\n    offset,\n    z0,\n    z1,\n    dzdx,\n    dzdy,\n    slope,\n    aspect,\n    accent,\n    scaled,\n    shade,\n    scaledAccentColor,\n    compositeShadeColor,\n    clamp,\n    slopeScaleBase,\n    scaledSlope,\n    cosIncidence;\n\n  function calculateElevation(pixel, encoding = 'mapbox') {\n    // The method used to extract elevations from the DEM.\n    //\n    // The supported methods are the Mapbox format\n    // (red * 256 * 256 + green * 256 + blue) * 0.1 - 10000\n    // and the Terrarium format\n    // (red * 256 + green + blue / 256) - 32768\n    //\n    if (encoding === 'mapbox') {\n      return (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1 - 10000;\n    }\n    if (encoding === 'terrarium') {\n      return pixel[0] * 256 + pixel[1] + pixel[2] / 256 - 32768;\n    }\n  }\n  for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n    y0 = pixelY === 0 ? 0 : pixelY - 1;\n    y1 = pixelY === maxY ? maxY : pixelY + 1;\n    for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n      x0 = pixelX === 0 ? 0 : pixelX - 1;\n      x1 = pixelX === maxX ? maxX : pixelX + 1;\n\n      // determine elevation for (x0, pixelY)\n      offset = (pixelY * width + x0) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (x1, pixelY)\n      offset = (pixelY * width + x1) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdx = (z1 - z0) / dp;\n\n      // determine elevation for (pixelX, y0)\n      offset = (y0 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (pixelX, y1)\n      offset = (y1 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdy = (z1 - z0) / dp;\n\n      aspect = Math.atan2(dzdy, -dzdx);\n      if (aspect < 0) {\n        aspect = halfPi - aspect;\n      } else if (aspect > halfPi) {\n        aspect = twoPi - aspect + halfPi;\n      } else {\n        aspect = halfPi - aspect;\n      }\n\n      // Bootstrap slope and corresponding incident values\n      slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n      cosIncidence =\n        sinSunEl * Math.cos(slope) +\n        cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n      accent = Math.cos(slope);\n      // 255 for Hex colors\n      scaled = 255 * cosIncidence;\n\n      /*\n       * The following is heavily inspired\n       * by [Maplibre's equivalent WebGL shader](https://github.com/maplibre/maplibre-gl-js/blob/main/src/shaders/hillshade.fragment.glsl)\n       */\n\n      // Forces given value to stay between two given extremes\n      clamp = Math.min(Math.max(2 * data.sunEl, 0), 1);\n\n      // Intensity basis for hillshade opacity\n      slopeScaleBase = 1.875 - data.opacity * 1.75;\n      // Intensity interpolation so that higher intensity values create more opaque hillshading\n      scaledSlope =\n        data.opacity !== 0.5\n          ? halfPi *\n            ((Math.pow(slopeScaleBase, slope) - 1) /\n              (Math.pow(slopeScaleBase, halfPi) - 1))\n          : slope;\n\n      // Accent hillshade color with given accentColor to emphasize rougher terrain\n      scaledAccentColor = {\n        r: (1 - accent) * accentColor.r * clamp * 255,\n        g: (1 - accent) * accentColor.g * clamp * 255,\n        b: (1 - accent) * accentColor.b * clamp * 255,\n        a: (1 - accent) * accentColor.a * clamp * 255,\n      };\n\n      // Allows highlight vs shadow discrimination\n      shade = Math.abs((((aspect + sunAz) / Math.PI + 0.5) % 2) - 1);\n      // Creates a composite color mix between highlight & shadow colors to emphasize slopes\n      compositeShadeColor = {\n        r: (highlightColor.r * (1 - shade) + shadowColor.r * shade) * scaled,\n        g: (highlightColor.g * (1 - shade) + shadowColor.g * shade) * scaled,\n        b: (highlightColor.b * (1 - shade) + shadowColor.b * shade) * scaled,\n        a: (highlightColor.a * (1 - shade) + shadowColor.a * shade) * scaled,\n      };\n\n      // Fill in result color value\n      offset = (pixelY * width + pixelX) * 4;\n      shadeData[offset] =\n        scaledAccentColor.r * (1 - shade) + compositeShadeColor.r;\n      shadeData[offset + 1] =\n        scaledAccentColor.g * (1 - shade) + compositeShadeColor.g;\n      shadeData[offset + 2] =\n        scaledAccentColor.b * (1 - shade) + compositeShadeColor.b;\n      // Key opacity on the scaledSlope to improve legibility by increasing higher elevation rates' contrast\n      shadeData[offset + 3] =\n        elevationData[offset + 3] *\n        data.opacity *\n        clamp *\n        Math.sin(scaledSlope);\n    }\n  }\n\n  return new ImageData(shadeData, width, height);\n}\n","/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport Layer from 'ol/layer/Layer.js';\nimport LayerGroup from 'ol/layer/Group.js';\nimport MVT from 'ol/format/MVT.js';\nimport Map from 'ol/Map.js';\nimport Raster from 'ol/source/Raster.js';\nimport Source from 'ol/source/Source.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource, {defaultLoadFunction} from 'ol/source/VectorTile.js';\nimport View from 'ol/View.js';\nimport derefLayers from '@mapbox/mapbox-gl-style-spec/deref.js';\nimport {METERS_PER_UNIT} from 'ol/proj/Units.js';\nimport {\n  _colorWithOpacity,\n  stylefunction as applyStylefunction,\n  getValue,\n  styleFunctionArgs,\n} from './stylefunction.js';\nimport {bbox as bboxStrategy} from 'ol/loadingstrategy.js';\nimport {createXYZ} from 'ol/tilegrid.js';\nimport {\n  defaultResolutions,\n  fetchResource,\n  getFilterCache,\n  getFunctionCache,\n  getGlStyle,\n  getResolutionForZoom,\n  getStyleFunctionKey,\n  getTileJson,\n  getZoomForResolution,\n} from './util.js';\nimport {\n  equivalent,\n  fromLonLat,\n  getPointResolution,\n  get as getProjection,\n  getUserProjection,\n} from 'ol/proj.js';\nimport {getCenter, getTopLeft} from 'ol/extent.js';\nimport {getFonts} from './text.js';\nimport {hillshade} from './shaders.js';\nimport {\n  normalizeSourceUrl,\n  normalizeSpriteUrl,\n  normalizeStyleUrl,\n} from './mapbox.js';\n\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, import(\"./util.js\").ResourceType): (Request|string|Promise<Request|string>|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request` or a url `string`, or a promise tehereof.\n * Without a return value the original request will not be modified.\n * @property {string} [projection='EPSG:3857'] Only useful when working with non-standard projections.\n * Code of a projection registered with OpenLayers. All sources of the style must be provided in this\n * projection. The projection must also have a valid extent defined, which will be used to determine the\n * origin and resolutions of the tile grid for all tiled sources of the style. When provided, the bbox\n * placeholder in tile and geojson urls changes: the default is `{bbox-epsg-3857}`, when projection is e.g.\n * set to `EPSG:4326`, the bbox placeholder will be `{bbox-epsg-4326}`.\n * @property {Array<number>} [resolutions] Only useful when working with non-standard projections.\n * Resolutions for mapping resolution to the `zoom` used in the Mapbox style.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {string} [webfonts] Template for resolving webfonts. Can be used to specify where to fetch\n * web fonts when no `ol:webfonts` metadata is set in the style object. See `getFonts()` and the\n * \"Font handling\" section in `README.md` for details.\n * @property {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image for an icon name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function be used for icons not in the sprite or to override sprite icons.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n */\n\n/**\n * @typedef {Object} ApplyStyleOptions\n * @property {string} [source=''] Source. Default is `''`, which causes the first source in the\n * style to be used.\n * @property {Array<string>} [layers] Layers. If no source is provided, the layers with the\n * provided ids will be used from the style's `layers` array. All layers need to use the same source.\n * @property {boolean} [updateSource=true] Update or create vector (tile) layer source with parameters\n * specified for the source in the mapbox style definition.\n */\n\n/**\n * @param {import(\"ol/proj/Projection.js\").default} projection Projection.\n * @param {number} [tileSize=512] Tile size.\n * @return {Array<number>} Resolutions.\n */\nfunction getTileResolutions(projection, tileSize = 512) {\n  return projection.getExtent()\n    ? createXYZ({\n        extent: projection.getExtent(),\n        tileSize: tileSize,\n        maxZoom: 22,\n      }).getResolutions()\n    : defaultResolutions;\n}\n\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n  if (!options.accessToken) {\n    options = Object.assign({}, options);\n    const searchParams = new URL(styleUrl).searchParams;\n    // The last search parameter is the access token\n    searchParams.forEach((value, key) => {\n      options.accessToken = value;\n      options.accessTokenParam = key;\n    });\n  }\n  return options;\n}\n\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle` (unless `updateSource` is\n * set to `false`).\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url` and\n * `tileUrlFunction`. When the source projection is the default (`EPSG:3857`), the `tileGrid` will\n * also be overridden. If you'd rather not have ol-mapbox-style modify the source, configure `applyStyle()`\n * with the `updateSource: false` option.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>|Options&ApplyStyleOptions} [sourceOrLayersOrOptions] Options or\n * `source` key or an array of layer `id`s from the Mapbox Style object. When a `source` key is\n * provided, all layers for the specified source will be included in the style function. When layer\n * `id`s are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the first source specified in the glStyle will be rendered.\n * @param {Options&ApplyStyleOptions|string} [optionsOrPath] **Deprecated**. Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} [resolutions] **Deprecated**. Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections, can also be supplied with\n * options.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nexport function applyStyle(\n  layer,\n  glStyle,\n  sourceOrLayersOrOptions = '',\n  optionsOrPath = {},\n  resolutions = undefined,\n) {\n  let styleUrl, sourceId;\n  /** @type {Options&ApplyStyleOptions} */\n  let options;\n  let sourceOrLayers;\n  let updateSource = true;\n  if (\n    typeof sourceOrLayersOrOptions !== 'string' &&\n    !Array.isArray(sourceOrLayersOrOptions)\n  ) {\n    options = sourceOrLayersOrOptions;\n    sourceOrLayers = options.source || options.layers;\n    optionsOrPath = options;\n  } else {\n    sourceOrLayers = sourceOrLayersOrOptions;\n  }\n  if (typeof optionsOrPath === 'string') {\n    styleUrl = optionsOrPath;\n    options = {};\n  } else {\n    styleUrl = optionsOrPath.styleUrl;\n    options = optionsOrPath;\n  }\n  if (options.updateSource === false) {\n    updateSource = false;\n  }\n  if (!resolutions) {\n    resolutions = options.resolutions;\n  }\n  if (\n    !styleUrl &&\n    typeof glStyle === 'string' &&\n    !glStyle.trim().startsWith('{')\n  ) {\n    styleUrl = glStyle;\n  }\n  if (styleUrl) {\n    styleUrl = styleUrl.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(styleUrl, options.accessToken);\n    options = completeOptions(styleUrl, options);\n  }\n\n  return new Promise(function (resolve, reject) {\n    // TODO: figure out where best place to check source type is\n    // Note that the source arg is an array of gl layer ids and each must be\n    // dereferenced to get source type to validate\n    getGlStyle(glStyle, options)\n      .then(function (glStyle) {\n        if (glStyle.version != 8) {\n          return reject(new Error('glStyle version 8 required.'));\n        }\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          return reject(\n            new Error('Can only apply to VectorLayer or VectorTileLayer'),\n          );\n        }\n\n        const type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n        if (!sourceOrLayers) {\n          sourceId = Object.keys(glStyle.sources).find(function (key) {\n            return glStyle.sources[key].type === type;\n          });\n          sourceOrLayers = sourceId;\n        } else if (Array.isArray(sourceOrLayers)) {\n          sourceId = glStyle.layers.find(function (layer) {\n            return layer.id === sourceOrLayers[0];\n          }).source;\n        } else {\n          sourceId = sourceOrLayers;\n        }\n        if (!sourceId) {\n          return reject(new Error(`No ${type} source found in the glStyle.`));\n        }\n\n        function assignSource() {\n          if (!updateSource) {\n            return Promise.resolve();\n          }\n          if (layer instanceof VectorTileLayer) {\n            return setupVectorSource(\n              glStyle.sources[sourceId],\n              styleUrl,\n              options,\n            ).then(function (source) {\n              const targetSource = layer.getSource();\n              if (!targetSource) {\n                layer.setSource(source);\n              } else if (source !== targetSource) {\n                targetSource.setTileUrlFunction(source.getTileUrlFunction());\n                if (\n                  typeof targetSource.setUrls === 'function' &&\n                  typeof source.getUrls === 'function'\n                ) {\n                  // to get correct keys for tile cache and queue\n                  targetSource.setUrls(source.getUrls());\n                }\n                //@ts-ignore\n                if (!targetSource.format_) {\n                  //@ts-ignore\n                  targetSource.format_ = source.format_;\n                }\n                if (!targetSource.getAttributions()) {\n                  targetSource.setAttributions(source.getAttributions());\n                }\n                if (\n                  targetSource.getTileLoadFunction() === defaultLoadFunction\n                ) {\n                  targetSource.setTileLoadFunction(\n                    source.getTileLoadFunction(),\n                  );\n                }\n                if (\n                  equivalent(\n                    targetSource.getProjection(),\n                    source.getProjection(),\n                  )\n                ) {\n                  targetSource.tileGrid = source.getTileGrid();\n                }\n              }\n              const tileGrid = layer.getSource().getTileGrid();\n              if (\n                !isFinite(layer.getMaxResolution()) &&\n                !isFinite(layer.getMinZoom()) &&\n                tileGrid.getMinZoom() > 0\n              ) {\n                layer.setMaxResolution(\n                  getResolutionForZoom(\n                    Math.max(0, tileGrid.getMinZoom() - 1e-12),\n                    tileGrid.getResolutions(),\n                  ),\n                );\n              }\n            });\n          }\n          const glSource = glStyle.sources[sourceId];\n          let source = layer.getSource();\n          if (!source || source.get('mapbox-source') !== glSource) {\n            source = setupGeoJSONSource(glSource, styleUrl, options);\n          }\n          const targetSource = /** @type {VectorSource} */ (layer.getSource());\n          if (!targetSource) {\n            layer.setSource(source);\n          } else if (source !== targetSource) {\n            if (!targetSource.getAttributions()) {\n              targetSource.setAttributions(source.getAttributions());\n            }\n            //@ts-ignore\n            if (!targetSource.format_) {\n              //@ts-ignore\n              targetSource.format_ = source.getFormat();\n            }\n            //@ts-ignore\n            targetSource.url_ = source.getUrl();\n          }\n          return Promise.resolve();\n        }\n\n        let spriteScale, spriteData, spriteImageUrl, style;\n        function onChange() {\n          if (!style && (!glStyle.sprite || spriteData)) {\n            if (options.projection && !resolutions) {\n              const projection = getProjection(options.projection);\n              const units = projection.getUnits();\n              if (units !== 'm') {\n                resolutions = defaultResolutions.map(\n                  (resolution) => resolution / METERS_PER_UNIT[units],\n                );\n              }\n            }\n            style = applyStylefunction(\n              layer,\n              glStyle,\n              sourceOrLayers,\n              resolutions,\n              spriteData,\n              spriteImageUrl,\n              (fonts, templateUrl = options.webfonts) =>\n                getFonts(fonts, templateUrl),\n              options.getImage,\n            );\n            if (!layer.getStyle()) {\n              reject(new Error(`Nothing to show for source [${sourceId}]`));\n            } else {\n              assignSource().then(resolve).catch(reject);\n            }\n          } else if (style) {\n            layer.setStyle(style);\n            assignSource().then(resolve).catch(reject);\n          } else {\n            reject(new Error('Something went wrong trying to apply style.'));\n          }\n        }\n\n        if (glStyle.sprite) {\n          const sprite = new URL(\n            normalizeSpriteUrl(\n              glStyle.sprite,\n              options.accessToken,\n              styleUrl || location.href,\n            ),\n          );\n          spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n          const sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n          let spriteUrl =\n            sprite.origin +\n            sprite.pathname +\n            sizeFactor +\n            '.json' +\n            sprite.search;\n\n          new Promise(function (resolve, reject) {\n            fetchResource('Sprite', spriteUrl, options)\n              .then(resolve)\n              .catch(function (error) {\n                spriteUrl =\n                  sprite.origin + sprite.pathname + '.json' + sprite.search;\n                fetchResource('Sprite', spriteUrl, options)\n                  .then(resolve)\n                  .catch(reject);\n              });\n          })\n            .then(function (spritesJson) {\n              if (spritesJson === undefined) {\n                reject(new Error('No sprites found.'));\n              }\n              spriteData = spritesJson;\n              spriteImageUrl =\n                sprite.origin +\n                sprite.pathname +\n                sizeFactor +\n                '.png' +\n                sprite.search;\n              if (options.transformRequest) {\n                const transformed =\n                  options.transformRequest(spriteImageUrl, 'SpriteImage') ||\n                  spriteImageUrl;\n                if (\n                  transformed instanceof Request ||\n                  transformed instanceof Promise\n                ) {\n                  spriteImageUrl = transformed;\n                }\n              }\n              onChange();\n            })\n            .catch(function (err) {\n              reject(\n                new Error(\n                  `Sprites cannot be loaded: ${spriteUrl}: ${err.message}`,\n                ),\n              );\n            });\n        } else {\n          onChange();\n        }\n      })\n      .catch(reject);\n  });\n}\n\nconst emptyObj = {};\n\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n  glStyle.layers.some(function (layer) {\n    if (layer.type === 'background') {\n      if (mapOrLayer instanceof Layer) {\n        mapOrLayer.setBackground(function (resolution) {\n          return getBackgroundColor(layer, resolution, options, {});\n        });\n        return true;\n      }\n      if (mapOrLayer instanceof Map || mapOrLayer instanceof LayerGroup) {\n        mapOrLayer\n          .getLayers()\n          .insertAt(0, setupBackgroundLayer(layer, options, {}));\n        return true;\n      }\n    }\n  });\n}\n\n/**\n * Applies properties of the Mapbox Style's first `background` layer to the\n * provided map or layer (group).\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|import(\"ol/layer/Base.js\").default} mapOrLayer OpenLayers Map or layer (group).\n * @param {Object|string} glStyle Mapbox Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nexport function applyBackground(mapOrLayer, glStyle, options = {}) {\n  return getGlStyle(glStyle, options).then(function (glStyle) {\n    setFirstBackground(mapOrLayer, glStyle, options);\n  });\n}\n\nfunction getSourceIdByRef(layers, ref) {\n  let sourceId;\n  layers.some(function (layer) {\n    if (layer.id == ref) {\n      sourceId = layer.source;\n      return true;\n    }\n  });\n  return sourceId;\n}\n\nfunction extentFromTileJSON(tileJSON, projection) {\n  const bounds = tileJSON.bounds;\n  if (bounds) {\n    const ll = fromLonLat([bounds[0], bounds[1]], projection);\n    const tr = fromLonLat([bounds[2], bounds[3]], projection);\n    return [ll[0], ll[1], tr[0], tr[1]];\n  }\n  return getProjection(projection).getExtent();\n}\n\nfunction sourceOptionsFromTileJSON(glSource, tileJSON, options) {\n  const tileJSONSource = new TileJSON({\n    tileJSON: tileJSON,\n    tileSize: glSource.tileSize || tileJSON.tileSize || 512,\n  });\n  const tileJSONDoc = tileJSONSource.getTileJSON();\n  const tileGrid = tileJSONSource.getTileGrid();\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const extent = extentFromTileJSON(tileJSONDoc, projection);\n  const projectionExtent = projection.getExtent();\n  const minZoom = tileJSONDoc.minzoom || 0;\n  const maxZoom = tileJSONDoc.maxzoom || 22;\n  /** @type {import(\"ol/source/VectorTile.js\").Options<import(\"ol/render/Feature.js\").default>} */\n  const sourceOptions = {\n    attributions: tileJSONSource.getAttributions(),\n    projection: projection,\n    tileGrid: new TileGrid({\n      origin: projectionExtent\n        ? getTopLeft(projectionExtent)\n        : tileGrid.getOrigin(0),\n      extent: extent || tileGrid.getExtent(),\n      minZoom: minZoom,\n      resolutions: getTileResolutions(projection, tileJSON.tileSize).slice(\n        0,\n        maxZoom + 1,\n      ),\n      tileSize: tileGrid.getTileSize(0),\n    }),\n  };\n  if (Array.isArray(tileJSONDoc.tiles)) {\n    sourceOptions.urls = tileJSONDoc.tiles;\n  } else {\n    sourceOptions.url = tileJSONDoc.tiles;\n  }\n  return sourceOptions;\n}\n\nfunction getBackgroundColor(glLayer, resolution, options, functionCache) {\n  const background = {\n    id: glLayer.id,\n    type: glLayer.type,\n  };\n  const layout = glLayer.layout || {};\n  const paint = glLayer.paint || {};\n  background['paint'] = paint;\n  const zoom = getZoomForResolution(\n    resolution,\n    options.resolutions || defaultResolutions,\n  );\n  let opacity;\n  const bg = getValue(\n    background,\n    'paint',\n    'background-color',\n    zoom,\n    emptyObj,\n    functionCache,\n  );\n  if (paint['background-opacity'] !== undefined) {\n    opacity = getValue(\n      background,\n      'paint',\n      'background-opacity',\n      zoom,\n      emptyObj,\n      functionCache,\n    );\n  }\n  return layout.visibility == 'none'\n    ? undefined\n    : _colorWithOpacity(bg, opacity);\n}\n\n/**\n * @param {Object} glLayer Mapbox Style layer object.\n * @param {Options} options Options.\n * @param {Object} functionCache Cache for functions.\n * @return {Layer} OpenLayers layer.\n */\nfunction setupBackgroundLayer(glLayer, options, functionCache) {\n  const div = document.createElement('div');\n  div.className = 'ol-mapbox-style-background';\n  div.style.position = 'absolute';\n  div.style.width = '100%';\n  div.style.height = '100%';\n  return new Layer({\n    source: new Source({}),\n    render(frameState) {\n      const color = getBackgroundColor(\n        glLayer,\n        frameState.viewState.resolution,\n        options,\n        functionCache,\n      );\n      div.style.backgroundColor = color;\n      return div;\n    },\n  });\n}\n\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nexport function setupVectorSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options)\n      .then(function ({tileJson, tileLoadFunction}) {\n        const sourceOptions = sourceOptionsFromTileJSON(\n          glSource,\n          tileJson,\n          options,\n        );\n        sourceOptions.tileLoadFunction = tileLoadFunction;\n        sourceOptions.format = new MVT();\n        resolve(new VectorTileSource(sourceOptions));\n      })\n      .catch(reject);\n  });\n}\n\nfunction setupVectorLayer(glSource, styleUrl, options) {\n  const layer = new VectorTileLayer({\n    declutter: true,\n    visible: false,\n  });\n  setupVectorSource(glSource, styleUrl, options)\n    .then(function (source) {\n      source.set('mapbox-source', glSource);\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\nfunction getBboxTemplate(projection) {\n  const projCode = projection ? projection.getCode() : 'EPSG:3857';\n  return `{bbox-${projCode.toLowerCase().replace(/[^a-z0-9]/g, '-')}}`;\n}\n\nfunction setupRasterSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options)\n      .then(function ({tileJson, tileLoadFunction}) {\n        const source = new TileJSON({\n          interpolate:\n            options.interpolate === undefined ? true : options.interpolate,\n          transition: 0,\n          crossOrigin: 'anonymous',\n          tileJSON: tileJson,\n        });\n        source.tileGrid = sourceOptionsFromTileJSON(\n          glSource,\n          tileJson,\n          options,\n        ).tileGrid;\n        if (options.projection) {\n          //@ts-ignore\n          source.projection = getProjection(options.projection);\n        }\n        const getTileUrl = source.getTileUrlFunction();\n        if (tileLoadFunction) {\n          source.setTileLoadFunction(tileLoadFunction);\n        }\n        source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n          const bboxTemplate = getBboxTemplate(projection);\n          let src = getTileUrl(tileCoord, pixelRatio, projection);\n          if (src.indexOf(bboxTemplate) != -1) {\n            const bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n            src = src.replace(bboxTemplate, bbox.toString());\n          }\n          return src;\n        });\n        source.set('mapbox-source', glSource);\n        resolve(source);\n      })\n      .catch(function (error) {\n        reject(error);\n      });\n  });\n}\n\nfunction setupRasterLayer(glSource, styleUrl, options) {\n  const layer = new TileLayer();\n  setupRasterSource(glSource, styleUrl, options)\n    .then(function (source) {\n      layer.setSource(source);\n    })\n    .catch(function () {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\n/**\n *\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string} styleUrl Style url\n * @param {Options} options ol-mapbox-style options.\n * @return {ImageLayer<Raster>} The raster layer\n */\nfunction setupHillshadeLayer(glSource, styleUrl, options) {\n  const tileLayer = setupRasterLayer(glSource, styleUrl, options);\n  /** @type {ImageLayer<Raster>} */\n  const layer = new ImageLayer({\n    source: new Raster({\n      operationType: 'image',\n      operation: hillshade,\n      sources: [tileLayer],\n    }),\n  });\n  return layer;\n}\n\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n  const geoJsonFormat = options.projection\n    ? new GeoJSON({dataProjection: options.projection})\n    : new GeoJSON();\n  const data = glSource.data;\n  const sourceOptions = {};\n  if (typeof data == 'string') {\n    const geoJsonUrl = normalizeSourceUrl(\n      data,\n      options.accessToken,\n      options.accessTokenParam || 'access_token',\n      styleUrl || location.href,\n    );\n    if (/\\{bbox-[0-9a-z-]+\\}/.test(geoJsonUrl)) {\n      const extentUrl = (extent, resolution, projection) => {\n        const bboxTemplate = getBboxTemplate(projection);\n        return geoJsonUrl.replace(bboxTemplate, `${extent.join(',')}`);\n      };\n      const source = new VectorSource({\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n        loader: (extent, resolution, projection, success, failure) => {\n          const url =\n            typeof extentUrl === 'function'\n              ? extentUrl(extent, resolution, projection)\n              : extentUrl;\n          fetchResource('GeoJSON', url, options)\n            .then((json) => {\n              const features = /** @type {*} */ (\n                source\n                  .getFormat()\n                  .readFeatures(json, {featureProjection: projection})\n              );\n              source.addFeatures(features);\n              success(features);\n            })\n            .catch((response) => {\n              source.removeLoadedExtent(extent);\n              failure();\n            });\n        },\n        strategy: bboxStrategy,\n      });\n      source.set('mapbox-source', glSource);\n      return source;\n    }\n    const source = new VectorSource({\n      attributions: glSource.attribution,\n      format: geoJsonFormat,\n      url: geoJsonUrl,\n      loader: (extent, resolution, projection, success, failure) => {\n        fetchResource('GeoJSON', geoJsonUrl, options)\n          .then((json) => {\n            const features = /** @type {*} */ (\n              source\n                .getFormat()\n                .readFeatures(json, {featureProjection: projection})\n            );\n            source.addFeatures(features);\n            success(features);\n          })\n          .catch((response) => {\n            source.removeLoadedExtent(extent);\n            failure();\n          });\n      },\n    });\n    return source;\n  }\n  sourceOptions.features = geoJsonFormat.readFeatures(data, {\n    featureProjection: getUserProjection() || 'EPSG:3857',\n  });\n\n  const source = new VectorSource(\n    Object.assign(\n      {\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n      },\n      sourceOptions,\n    ),\n  );\n  source.set('mapbox-source', glSource);\n  return /** @type {VectorSource} */ (source);\n}\n\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n  return new VectorLayer({\n    declutter: true,\n    source: setupGeoJSONSource(glSource, styleUrl, options),\n    visible: false,\n  });\n}\n\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n  let zoom = null;\n  return function (event) {\n    if (\n      glLayer.paint &&\n      'raster-opacity' in glLayer.paint &&\n      event.frameState.viewState.zoom !== zoom\n    ) {\n      zoom = event.frameState.viewState.zoom;\n      delete functionCache[glLayer.id];\n      updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n    }\n  };\n}\n\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n  const opacity = getValue(\n    glLayer,\n    'paint',\n    'raster-opacity',\n    zoom,\n    emptyObj,\n    functionCache,\n  );\n  layer.setOpacity(opacity);\n}\n\nfunction manageVisibility(layer, mapOrGroup) {\n  function onChange() {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    if (!glStyle) {\n      return;\n    }\n    const mapboxLayers = derefLayers(glStyle.layers);\n    const layerMapboxLayerids = layer.get('mapbox-layers');\n    const visible = mapboxLayers\n      .filter(function (mapboxLayer) {\n        return layerMapboxLayerids.includes(mapboxLayer.id);\n      })\n      .some(function (mapboxLayer) {\n        return (\n          !mapboxLayer.layout ||\n          !mapboxLayer.layout.visibility ||\n          mapboxLayer.layout.visibility === 'visible'\n        );\n      });\n    if (layer.get('visible') !== visible) {\n      layer.setVisible(visible);\n    }\n  }\n  layer.on('change', onChange);\n  onChange();\n}\n\nexport function setupLayer(glStyle, styleUrl, glLayer, options) {\n  const functionCache = getFunctionCache(glStyle);\n  const glLayers = glStyle.layers;\n  const type = glLayer.type;\n\n  const id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n  const glSource = glStyle.sources[id];\n  let layer;\n  if (type == 'background') {\n    layer = setupBackgroundLayer(glLayer, options, functionCache);\n  } else if (glSource.type == 'vector') {\n    layer = setupVectorLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster') {\n    layer = setupRasterLayer(glSource, styleUrl, options);\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true,\n    );\n    layer.on('prerender', prerenderRasterLayer(glLayer, layer, functionCache));\n  } else if (glSource.type == 'geojson') {\n    layer = setupGeoJSONLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster-dem' && glLayer.type == 'hillshade') {\n    const hillshadeLayer = setupHillshadeLayer(glSource, styleUrl, options);\n    layer = hillshadeLayer;\n    hillshadeLayer.getSource().on('beforeoperations', function (event) {\n      const data = event.data;\n      data.resolution = getPointResolution(\n        options.projection || 'EPSG:3857',\n        event.resolution,\n        getCenter(event.extent),\n        'm',\n      );\n      const zoom = getZoomForResolution(\n        event.resolution,\n        options.resolutions || defaultResolutions,\n      );\n      data.encoding = glSource.encoding;\n      data.vert =\n        5 *\n        getValue(\n          glLayer,\n          'paint',\n          'hillshade-exaggeration',\n          zoom,\n          emptyObj,\n          functionCache,\n        );\n      data.sunAz = getValue(\n        glLayer,\n        'paint',\n        'hillshade-illumination-direction',\n        zoom,\n        emptyObj,\n        functionCache,\n      );\n      data.sunEl = 35;\n      data.opacity = 0.3;\n      data.highlightColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-highlight-color',\n        zoom,\n        emptyObj,\n        functionCache,\n      );\n      data.shadowColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-shadow-color',\n        zoom,\n        emptyObj,\n        functionCache,\n      );\n      data.accentColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-accent-color',\n        zoom,\n        emptyObj,\n        functionCache,\n      );\n    });\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true,\n    );\n  }\n  const glSourceId = id;\n  if (layer) {\n    layer.set('mapbox-source', glSourceId);\n  }\n  return layer;\n}\n\n/**\n * @param {*} glStyle Mapbox Style.\n * @param {Map|LayerGroup} mapOrGroup Map or layer group.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the style is loaded.\n */\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n  const promises = [];\n\n  let view = null;\n  if (mapOrGroup instanceof Map) {\n    view = mapOrGroup.getView();\n    if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n      const projection = options.projection\n        ? getProjection(options.projection)\n        : view.getProjection();\n      view = new View(\n        Object.assign(view.getProperties(), {\n          maxResolution:\n            defaultResolutions[0] / METERS_PER_UNIT[projection.getUnits()],\n          projection: options.projection || view.getProjection(),\n        }),\n      );\n      mapOrGroup.setView(view);\n    }\n\n    if ('center' in glStyle && !view.getCenter()) {\n      view.setCenter(fromLonLat(glStyle.center, view.getProjection()));\n    }\n    if ('zoom' in glStyle && view.getZoom() === undefined) {\n      view.setResolution(\n        defaultResolutions[0] /\n          METERS_PER_UNIT[view.getProjection().getUnits()] /\n          Math.pow(2, glStyle.zoom),\n      );\n    }\n    if (!view.getCenter() || view.getZoom() === undefined) {\n      view.fit(view.getProjection().getExtent(), {\n        nearest: true,\n        size: mapOrGroup.getSize(),\n      });\n    }\n  }\n  mapOrGroup.set('mapbox-style', glStyle);\n  mapOrGroup.set('mapbox-metadata', {styleUrl, options});\n\n  const glLayers = glStyle.layers;\n  let layerIds = [];\n\n  let layer, glSourceId, id;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    const type = glLayer.type;\n    if (type == 'heatmap') {\n      //FIXME Unsupported layer type\n      // eslint-disable-next-line no-console\n      console.debug(`layers[${i}].type \"${type}\" not supported`);\n      continue;\n    } else {\n      id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n      // this technique assumes gl layers will be in a particular order\n      if (!id || id != glSourceId) {\n        if (layerIds.length) {\n          promises.push(\n            finalizeLayer(\n              layer,\n              layerIds,\n              glStyle,\n              styleUrl,\n              mapOrGroup,\n              options,\n            ),\n          );\n          layerIds = [];\n        }\n\n        layer = setupLayer(glStyle, styleUrl, glLayer, options);\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          layerIds = [];\n        }\n        glSourceId = layer.get('mapbox-source');\n      }\n      layerIds.push(glLayer.id);\n    }\n  }\n  promises.push(\n    finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options),\n  );\n  return Promise.all(promises);\n}\n\n/**\n * Loads and applies a Mapbox Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroupOrElement Either an existing\n * OpenLayers Map instance, or a HTML element, or the id of a HTML element that will be\n * the target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox Style document). When passed\n * as style url, layers will be added to the map when the Mapbox Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nexport function apply(mapOrGroupOrElement, style, options = {}) {\n  let promise;\n  /** @type {Map|LayerGroup} */\n  let mapOrGroup;\n  if (\n    typeof mapOrGroupOrElement === 'string' ||\n    mapOrGroupOrElement instanceof HTMLElement\n  ) {\n    mapOrGroup = new Map({\n      target: mapOrGroupOrElement,\n    });\n  } else {\n    mapOrGroup = mapOrGroupOrElement;\n  }\n\n  if (typeof style === 'string') {\n    const styleUrl = style.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(style, options.accessToken);\n    options = completeOptions(styleUrl, options);\n\n    promise = new Promise(function (resolve, reject) {\n      getGlStyle(style, options)\n        .then(function (glStyle) {\n          processStyle(glStyle, mapOrGroup, styleUrl, options)\n            .then(function () {\n              resolve(mapOrGroup);\n            })\n            .catch(reject);\n        })\n        .catch(function (err) {\n          reject(new Error(`Could not load ${style}: ${err.message}`));\n        });\n    });\n  } else {\n    promise = new Promise(function (resolve, reject) {\n      processStyle(\n        style,\n        mapOrGroup,\n        !options.styleUrl || options.styleUrl.startsWith('data:')\n          ? location.href\n          : normalizeStyleUrl(options.styleUrl, options.accessToken),\n        options,\n      )\n        .then(function () {\n          resolve(mapOrGroup);\n        })\n        .catch(reject);\n    });\n  }\n\n  return promise;\n}\n\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n */\nexport function finalizeLayer(\n  layer,\n  layerIds,\n  glStyle,\n  styleUrl,\n  mapOrGroup,\n  options = {},\n) {\n  let minZoom = 24;\n  let maxZoom = 0;\n  const glLayers = glStyle.layers;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    if (layerIds.indexOf(glLayer.id) !== -1) {\n      minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n      maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n    }\n  }\n  return new Promise(function (resolve, reject) {\n    const setStyle = function () {\n      const source = layer.getSource();\n      if (!source || source.getState() === 'error') {\n        reject(\n          new Error(\n            'Error accessing data for source ' + layer.get('mapbox-source'),\n          ),\n        );\n        return;\n      }\n      if ('getTileGrid' in source) {\n        const tileGrid =\n          /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */ (\n            source\n          ).getTileGrid();\n        if (tileGrid) {\n          const sourceMinZoom = tileGrid.getMinZoom();\n          if (minZoom > 0 || sourceMinZoom > 0) {\n            layer.setMaxResolution(\n              Math.min(\n                getResolutionForZoom(\n                  Math.max(0, minZoom - 1e-12),\n                  defaultResolutions,\n                ),\n                getResolutionForZoom(\n                  Math.max(0, sourceMinZoom - 1e-12),\n                  tileGrid.getResolutions(),\n                ),\n              ),\n            );\n          }\n          if (maxZoom < 24) {\n            layer.setMinResolution(\n              getResolutionForZoom(maxZoom, defaultResolutions),\n            );\n          }\n        }\n      } else {\n        if (minZoom > 0) {\n          layer.setMaxResolution(\n            getResolutionForZoom(\n              Math.max(0, minZoom - 1e-12),\n              defaultResolutions,\n            ),\n          );\n        }\n      }\n      if (\n        source instanceof VectorSource ||\n        source instanceof VectorTileSource\n      ) {\n        applyStyle(\n          /** @type {import(\"ol/layer/Vector\").default|import(\"ol/layer/VectorTile\").default} */ (\n            layer\n          ),\n          glStyle,\n          layerIds,\n          Object.assign({styleUrl: styleUrl}, options),\n        )\n          .then(function () {\n            manageVisibility(layer, mapOrGroup);\n            resolve();\n          })\n          .catch(reject);\n      } else {\n        resolve();\n      }\n    };\n\n    layer.set('mapbox-layers', layerIds);\n    const layers = mapOrGroup.getLayers();\n    if (layers.getArray().indexOf(layer) === -1) {\n      layers.push(layer);\n    }\n\n    if (layer.getSource()) {\n      setStyle();\n    } else {\n      layer.once('change:source', setStyle);\n    }\n  });\n}\n\n/**\n * Get the Mapbox Layer object for the provided `layerId`.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {string} layerId Mapbox Layer id.\n * @return {Object} Mapbox Layer object.\n */\nexport function getMapboxLayer(mapOrGroup, layerId) {\n  const style = mapOrGroup.get('mapbox-style');\n  const layerStyle = style.layers.find(function (layer) {\n    return layer.id === layerId;\n  });\n  return layerStyle;\n}\n\n/**\n * Add a new Mapbox Layer object to the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Mapbox Layer object.\n * @param {string} [beforeLayerId] Optional id of the Mapbox Layer before the new layer that will be added.\n * @return {Promise<void>} Resolves when the added layer is available.\n */\nexport function addMapboxLayer(mapOrGroup, mapboxLayer, beforeLayerId) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  let spliceIndex;\n  let sourceIndex = -1;\n  if (beforeLayerId !== undefined) {\n    const beforeMapboxLayer = getMapboxLayer(mapOrGroup, beforeLayerId);\n    if (beforeMapboxLayer === undefined) {\n      throw new Error(`Layer with id \"${beforeLayerId}\" not found.`);\n    }\n    spliceIndex = mapboxLayers.indexOf(beforeMapboxLayer);\n  } else {\n    spliceIndex = mapboxLayers.length;\n  }\n  let sourceOffset;\n  if (\n    spliceIndex > 0 &&\n    mapboxLayers[spliceIndex - 1].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex - 1;\n    sourceOffset = -1;\n  } else if (\n    spliceIndex < mapboxLayers.length &&\n    mapboxLayers[spliceIndex].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex;\n    sourceOffset = 0;\n  }\n  if (sourceIndex === -1) {\n    const {options, styleUrl} = mapOrGroup.get('mapbox-metadata');\n    const layer = setupLayer(glStyle, styleUrl, mapboxLayer, options);\n    if (beforeLayerId) {\n      const beforeLayer = getLayer(mapOrGroup, beforeLayerId);\n      const beforeLayerIndex = mapOrGroup\n        .getLayers()\n        .getArray()\n        .indexOf(beforeLayer);\n      mapOrGroup.getLayers().insertAt(beforeLayerIndex, layer);\n    }\n    mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n    return finalizeLayer(\n      layer,\n      [mapboxLayer.id],\n      glStyle,\n      styleUrl,\n      mapOrGroup,\n      options,\n    );\n  }\n\n  if (mapboxLayers.some((layer) => layer.id === mapboxLayer.id)) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" already exists.`);\n  }\n  const sourceLayerId = mapboxLayers[sourceIndex].id;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, sourceLayerId),\n      )\n    ];\n  mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      const layerIndex = sourceOrLayers.indexOf(sourceLayerId) + sourceOffset;\n      sourceOrLayers.splice(layerIndex, 0, mapboxLayer.id);\n    }\n    applyStylefunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayers[sourceIndex].id).changed();\n  }\n  return Promise.resolve();\n}\n\n/**\n * Update a Mapbox Layer object in the style. The map will be re-rendered with the new style.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Updated Mapbox Layer object.\n */\nexport function updateMapboxLayer(mapOrGroup, mapboxLayer) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  const index = mapboxLayers.findIndex(function (layer) {\n    return layer.id === mapboxLayer.id;\n  });\n  if (index === -1) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" not found.`);\n  }\n  const oldLayer = mapboxLayers[index];\n  if (oldLayer.source !== mapboxLayer.source) {\n    throw new Error(\n      'Updated layer and previous version must use the same source.',\n    );\n  }\n  delete getFunctionCache(glStyle)[mapboxLayer.id];\n  delete getFilterCache(glStyle)[mapboxLayer.id];\n  mapboxLayers[index] = mapboxLayer;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, mapboxLayer.id),\n      )\n    ];\n  if (args) {\n    applyStylefunction.apply(undefined, args);\n  } else {\n    getLayer(mapOrGroup, mapboxLayer.id).changed();\n  }\n}\n\n/**\n * Updates a Mapbox source object in the style. The according OpenLayers source will be replaced\n * and the map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string} id Key of the source in the `sources` object literal.\n * @param {Object} mapboxSource Mapbox source object.\n * @return {Promise<Source>} Promise that resolves when the source has been updated.\n */\nexport function updateMapboxSource(mapOrGroup, id, mapboxSource) {\n  const currentSource = getSource(mapOrGroup, id);\n  const layers = /** @type {Array<VectorLayer|TileLayer|VectorTileLayer>} */ (\n    mapOrGroup\n      .getLayers()\n      .getArray()\n      .filter(function (layer) {\n        return (\n          (layer instanceof VectorLayer ||\n            layer instanceof TileLayer ||\n            layer instanceof VectorTileLayer) &&\n          layer.getSource() === currentSource\n        );\n      })\n  );\n  const metadata = mapOrGroup.get('mapbox-metadata');\n  let newSourcePromise;\n  switch (mapboxSource.type) {\n    case 'vector':\n      newSourcePromise = setupVectorSource(\n        mapboxSource,\n        metadata.styleUrl,\n        metadata.options,\n      );\n      break;\n    case 'geojson':\n      newSourcePromise = Promise.resolve(\n        setupGeoJSONSource(mapboxSource, metadata.styleUrl, metadata.options),\n      );\n      break;\n    case 'raster':\n    case 'raster-dem':\n      newSourcePromise = setupRasterSource(\n        mapboxSource,\n        metadata.styleUrl,\n        metadata.options,\n      );\n      break;\n    default:\n      return Promise.reject(\n        new Error('Unsupported source type ' + mapboxSource.type),\n      );\n  }\n  newSourcePromise.then(function (newSource) {\n    layers.forEach(function (layer) {\n      layer.setSource(newSource);\n    });\n  });\n  return newSourcePromise;\n}\n\n/**\n * Remove a Mapbox Layer object from the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string|Object} mapboxLayerIdOrLayer Mapbox Layer id or Mapbox Layer object.\n */\nexport function removeMapboxLayer(mapOrGroup, mapboxLayerIdOrLayer) {\n  const mapboxLayerId =\n    typeof mapboxLayerIdOrLayer === 'string'\n      ? mapboxLayerIdOrLayer\n      : mapboxLayerIdOrLayer.id;\n  const layer = getLayer(mapOrGroup, mapboxLayerId);\n  /** @type {Array<Object>} */\n  const layerMapboxLayers = layer.get('mapbox-layers');\n  if (layerMapboxLayers.length === 1) {\n    throw new Error(\n      'Cannot remove last Mapbox layer from an OpenLayers layer.',\n    );\n  }\n  layerMapboxLayers.splice(layerMapboxLayers.indexOf(mapboxLayerId), 1);\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const layers = glStyle.layers;\n  layers.splice(\n    layers.findIndex((layer) => layer.id === mapboxLayerId),\n    1,\n  );\n  const args = styleFunctionArgs[getStyleFunctionKey(glStyle, layer)];\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      sourceOrLayers.splice(\n        sourceOrLayers.findIndex((layer) => layer === mapboxLayerId),\n        1,\n      );\n    }\n    applyStylefunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayerId).changed();\n  }\n}\n\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox Style\n * `layer`. Note that multiple Mapbox Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} layerId Mapbox Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nexport function getLayer(map, layerId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const mapboxLayers = layers[i].get('mapbox-layers');\n    if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n      return /** @type {Layer} */ (layers[i]);\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get the OpenLayers layer instances for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nexport function getLayers(map, sourceId) {\n  const result = [];\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    if (layers[i].get('mapbox-source') === sourceId) {\n      result.push(/** @type {Layer} */ (layers[i]));\n    }\n  }\n  return result;\n}\n\n/**\n * Get the OpenLayers source instance for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Source} OpenLayers source instance.\n */\nexport function getSource(map, sourceId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const source = /** @type {Layer} */ (layers[i]).getSource();\n    if (layers[i].get('mapbox-source') === sourceId) {\n      return source;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nexport function setFeatureState(mapOrLayer, feature, state) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState) {\n      if (state) {\n        featureState[feature.id] = state;\n      } else {\n        delete featureState[feature.id];\n      }\n      layers[i].changed();\n    } else {\n      throw new Error(`Map or layer for source \"${feature.source}\" not found.`);\n    }\n  }\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nexport function getFeatureState(mapOrLayer, feature) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState && featureState[feature.id]) {\n      return featureState[feature.id];\n    }\n  }\n  return undefined;\n}\n","import BaseEvent from 'ol/events/Event.js';\nimport EventType from 'ol/events/EventType.js';\nimport MVT from 'ol/format/MVT.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource from 'ol/source/VectorTile.js';\nimport {applyBackground, applyStyle} from './apply.js';\n\n/** @typedef {import(\"ol/Map.js\").default} Map */\n\n/**\n * @classdesc\n * Event emitted on configuration or loading error.\n */\nclass ErrorEvent extends BaseEvent {\n  /**\n   * @param {Error} error error object.\n   */\n  constructor(error) {\n    super(EventType.ERROR);\n\n    /**\n     * @type {Error}\n     */\n    this.error = error;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {string} styleUrl The URL of the Mapbox style object to use for this layer.  For a\n * style created with Mapbox Studio and hosted on Mapbox, this will look like\n * 'mapbox://styles/you/your-style'.\n * @property {string} [accessToken] The access token for your Mapbox style. This has to be provided\n * for `mapbox://` style urls. For `https://` and other urls, any access key must be the last query\n * parameter of the style url.\n * @property {string} [source] If your style uses more than one source, you need to use either the\n * `source` property or the `layers` property to limit rendering to a single vector source.  The\n * `source` property corresponds to the id of a vector source in your Mapbox style.\n * @property {Array<string>} [layers] Limit rendering to the list of included layers.  All layers\n * must share the same vector source.  If your style uses more than one source, you need to use\n * either the `source` property or the `layers` property to limit rendering to a single vector\n * source.\n * @property {boolean} [declutter=true] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"ol/layer/Base.js\").BackgroundColor|false} [background] Background color for the layer.\n * If not specified, the background from the Mapbox style object will be used. Set to `false` to prevent\n * the Mapbox style's background from being used.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"ol/extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `maxResolution` will\n * match the style source's `minzoom`.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `minZoom` will match\n * the style source's `minzoom`.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"ol/render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"ol/layer/VectorTile.js\").VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"ol/Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use `map.addLayer()`.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * ```js\n * import {MapboxVectorLayer} from 'ol-mapbox-style';\n * ```\n * A vector tile layer based on a Mapbox style that uses a single vector source.  Configure\n * the layer with the `styleUrl` and `accessToken` shown in Mapbox Studio's share panel.\n * If the style uses more than one source, use the `source` property to choose a single\n * vector source.  If you want to render a subset of the layers in the style, use the `layers`\n * property (all layers must share the same vector source).  See the constructor options for\n * more detail.\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new MapboxVectorLayer({\n *           styleUrl: 'mapbox://styles/mapbox/bright-v9',\n *           accessToken: 'your-mapbox-access-token-here',\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * On configuration or loading error, the layer will trigger an `'error'` event.  Listeners\n * will receive an object with an `error` property that can be used to diagnose the problem.\n *\n * **Note for users of the full build**: The `MapboxVectorLayer` requires the\n * [ol-mapbox-style](https://github.com/openlayers/ol-mapbox-style) library to be loaded as well.\n *\n * @param {Options} options Options.\n * @extends {VectorTileLayer<import(\"ol/render/Feature.js\").default>}\n * @fires module:ol/events/Event~BaseEvent#event:error\n * @api\n */\nexport default class MapboxVectorLayer extends VectorTileLayer {\n  /**\n   * @param {Options} options Layer options.  At a minimum, `styleUrl` and `accessToken`\n   * must be provided.\n   */\n  constructor(options) {\n    const declutter = 'declutter' in options ? options.declutter : true;\n    const source = new VectorTileSource({\n      state: 'loading',\n      format: new MVT(),\n    });\n\n    super({\n      source: source,\n      background: options.background === false ? null : options.background,\n      declutter: declutter,\n      className: options.className,\n      opacity: options.opacity,\n      visible: options.visible,\n      zIndex: options.zIndex,\n      minResolution: options.minResolution,\n      maxResolution: options.maxResolution,\n      minZoom: options.minZoom,\n      maxZoom: options.maxZoom,\n      renderOrder: options.renderOrder,\n      renderBuffer: options.renderBuffer,\n      renderMode: options.renderMode,\n      map: options.map,\n      updateWhileAnimating: options.updateWhileAnimating,\n      updateWhileInteracting: options.updateWhileInteracting,\n      preload: options.preload,\n      useInterimTilesOnError: options.useInterimTilesOnError,\n      properties: options.properties,\n    });\n\n    if (options.accessToken) {\n      this.accessToken = options.accessToken;\n    }\n    const url = options.styleUrl;\n    const promises = [\n      applyStyle(this, url, options.layers || options.source, {\n        accessToken: this.accessToken,\n      }),\n    ];\n    if (this.getBackground() === undefined) {\n      promises.push(\n        applyBackground(this, options.styleUrl, {\n          accessToken: this.accessToken,\n        }),\n      );\n    }\n    Promise.all(promises)\n      .then(() => {\n        source.setState('ready');\n      })\n      .catch((error) => {\n        this.dispatchEvent(new ErrorEvent(error));\n        const source = this.getSource();\n        source.setState('error');\n      });\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t76: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkol_mapbox_style\"] = self[\"webpackChunkol_mapbox_style\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));"],"names":["deferred","UnitBezier","p1x","p1y","p2x","p2y","this","cx","bx","ax","cy","by","ay","module","exports","prototype","sampleCurveX","t","sampleCurveY","sampleCurveDerivativeX","solveCurveX","x","epsilon","t0","t1","t2","x2","i","Math","abs","d2","solve","kCSSColorTable","clamp_css_byte","round","clamp_css_float","f","parse_css_int","str","length","parseFloat","parseInt","parse_css_float","css_hue_to_rgb","m1","m2","h","css_str","iv","replace","toLowerCase","slice","substr","op","indexOf","ep","fname","params","split","alpha","pop","s","l","e","read","buffer","offset","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","NaN","Infinity","pow","write","value","c","rt","isNaN","floor","log","LN2","fontWeights","thin","hairline","light","book","regular","normal","plain","roman","standard","medium","bold","heavy","black","fat","poster","sp","italicRE","fontCache","fonts","size","lineHeight","cssData","Array","isArray","haveWeight","haveStyle","weight","style","fontFamilies","ii","parts","maybeWeight","w","test","previousPart","startsWith","fontFamily","join","push","assert","err","AssertionError","Error","captureStackTrace","name","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","len","extraLen","realloc","writePackedVarint","arr","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","destroy","readFields","readField","result","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","readDouble","b","p","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","decode","subarray","readUtf8TextDecoder","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","min","set","finish","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","writeBytes","writeRawMessage","fn","obj","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","r","a","n","o","exp","u","sqrt","max","_maxEntries","_minEntries","ceil","clear","children","minX","minY","maxX","maxY","leaf","height","all","_all","data","search","toBBox","collides","load","insert","_build","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","Property","CollectionEvent","constructor","element","index","super","Collection","array","options","on","once","un","unique_","unique","array_","assertUnique_","updateLength_","getLength","extend","forEach","getArray","item","get","insertAt","elem","dispatchEvent","ADD","removeAt","prev","REMOVE","setAt","except","disposed","dispose","disposeInternal","Feature","geometryOrProperties","id_","undefined","geometryName_","style_","styleFunction_","geometryChangeKey_","addChangeListener","handleGeometryChanged_","geometry","setGeometry","properties","setProperties","clone","hasProperties","getProperties","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","changed","CHANGE","styles","createStyleFunction","setId","id","removeChangeListener","ImageWrapper","extent","resolution","pixelRatio","stateOrLoader","pixelRatio_","state","IDLE","image_","loader","getExtent","getImage","getPixelRatio","getResolution","getState","LOADING","requestResolution","then","image","HTMLImageElement","ImageBitmap","HTMLCanvasElement","HTMLVideoElement","LOADED","catch","error","ERROR","console","finally","setImage","setResolution","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","LOAD","src","decodeFallback","Promise","resolve","reject","complete","width","handleLoad","unlisten","handleError","removeEventListener","addEventListener","EMPTY","ImageTile","tileCoord","crossOrigin","tileLoadFunction","crossOrigin_","src_","key","Image","unlisten_","tileLoadFunction_","unlistenImage_","handleImageError_","ctx","fillStyle","fillRect","canvas","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","bind","MapRenderer","Disposable","map","map_","dispatchRenderEvent","frameState","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","rotation","center","forEachFeatureAtCoordinate","coordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","managed","feature","layer","call","projection","translatedCoordinate","offsets","canWrapX","projectionExtent","worldWidth","layerStates","layerStatesArray","numLayers","matches","tmpCoord","j","layerState","hasRenderer","layerRenderer","getRenderer","source","getSource","coordinates","getWrapX","order","distanceSq","some","hasFeatureAtCoordinate","getMap","renderFrame","scheduleExpireIconCache","canExpireCache","postRenderFunctions","expireIconCache","expire","Map","fontChangeListenerKey_","ObjectEventType","PROPERTYCHANGE","redrawText","element_","document","createElement","position","zIndex","className","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","hasListener","event","parentNode","removeChild","display","PRECOMPOSE","BaseVector","getDeclutter","declutter","renderedLayerStates","previousElement","layerIndex","sourceState","getSourceState","unrender","render","POSTCOMPOSE","renderDeclutter","renderDeferred","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","getCoordinateFromPixel","preventDefault","stopPropagation","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","TOUCHMOVE","passive","emulateClick_","pointerEvent","newEvent","clearTimeout","setTimeout","updateActivePointers_","pointerId","target","Object","values","handlePointerUp_","defaultPrevented","isMouseActionButton_","button","PointerEvent","defineProperty","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","Control","pointerEvents","target_","setTarget","setMap","getOverlayContainerStopEvent","appendChild","MapEventType","mapEvent","getElementById","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","getAttributions","getAttributionsCollapsible","setCollapsible","updateElement_","attributions","attribution","visible","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","compassClassName","add","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","resetNorth_","view","getView","getRotation","PI","animate","easing","setRotation","transform","contains","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","Interaction","handleEvent","setActive","getActive","mapBrowserEvent","active","zoomByDelta","anchor","newResolution","getResolutionForZoom","delta_","stopEvent","browserEvent","shiftKey","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","var_args","conditions","arguments","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","Pointer","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroid","update","adjustCenterInternal","begin","distance","getDistance","angle","getAngle","getCenterInternal","centerpx","getPixelFromCoordinateInternal","dest","getCoordinateFromPixelInternal","cos","sin","animateInternal","getConstrainedCenter","endInteraction","lastAngle_","getConstraints","getSize","theta","atan2","adjustRotationInternal","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","setPixels","createOrUpdateGeometry","setCoordinates","Polygon","DragBoxEventType","DragBoxEvent","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","out_","out","rotatedExtent","rotatedExtentForGeometry","getResolutionForExtentInternal","factor","scale","fitInternal","defaultCondition_","pixelDelta_","pixelDelta","KEYDOWN","keyEvent","Key","mapUnitsDelta","deltaX","deltaY","currentCenter","pan","platformModifierKey","KEYPRESS","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","y","Date","now","lastIndex","firstIndex","dx","dy","totalDelta_","lastDelta_","maxDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","WHEEL","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","getConstrainResolution","adjustZoom","timeLeft","handleWheelZoom_","setMouseAnchor","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","lastDistance_","lastScaleDelta_","scaleDelta","adjustResolutionInternal","direction","removeLayerMapProperty","Layer","setMapInternal","getLayers","setLayerMapProperty","layers","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","MapProperty","View","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotate","rotateOptions","attributionOptions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","overlays_","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","TileQueue","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","CollectionEventType","addOverlayInternal_","toString","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","viewportSize","scaleX","scaleY","eventPosition","changedTouches","getTarget","getProjection","getOverlayById","setLayers","group","collection","getLoadingOrNotReady","getLayerStatesArray","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","tile","tileSourceKey","tileCenter","tileResolution","handleMapBrowserEvent","eventType","rootNode","documentElement","interactionsArray","propagationStopped","handlePostRender","tileQueue","isEmpty","maxTotalLoading","maxNewLoads","hints","viewHints","ViewHint","ANIMATING","INTERACTING","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","RENDERCOMPLETE","resolveConstraints","CONTEXTMENU","unobserve","ShadowRoot","host","setSize","Composite","observe","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","Group","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","isDef","getHints","usedTiles","wantedTiles","mapId","renderTargets","nextCenter","nextResolution","nextRotation","nextExtent","getCount","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","offsetHeight","getClientRects","oldSize","setViewportSize","ObjectEvent","oldValue","BaseObject","values_","hasOwnProperty","getKeys","keys","assign","getPropertiesInternal","notify","listener","silent","applyProperties","unset","Observable","revision_","getRevision","onInternal","onceInternal","ol_key","unInternal","unByKey","Tile","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getKey","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","start","inTransition","endTransition","DROP","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","EventType","TileState","tileKey","newLoads","TileRange","containsXY","containsTileRange","tileRange","equals","getHeight","getWidth","intersects","createOrUpdate","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","cappedMaxRes","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","isGlobal","resolutions","capped","z","createSnapToResolutions","defaultMaxResolution","degrees","getMetersPerUnit","defaultMinResolution","defaultMaxZoom","power","tolerance","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createRotationConstraint","constraints_","setCenterInternal","oldPadding","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","args","animationCount","animationCallback","series","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","jj","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","currentResolution","getCenter","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","getViewStateAndExtent","nearest","baseLevel","fit","geometryOrExtent","getType","userProjection","cosAngle","sinAngle","coords","getFlatCoordinates","stride","getStride","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRot","centerX","centerY","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustResolution","adjustRotation","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","endInteractionInternal","targetZoom","targetRes","returnValue","binarySearch","haystack","needle","comparator","mid","cmp","ascending","found","linearFindNearest","candidate","reverseSubArray","tmp","extension","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","res","assertion","errorMessage","channel","alias","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","E","whitepoint","rgb","_xyz","white","g","arg","_u","_v","xn","yn","zn","luv","vn","yr","lchuv","hr","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","cstr","space","base","exec","dims","trim","shift","baseHues","endsWith","match","hsl","t3","asString","color","MAX_CACHE_SIZE","cache","cacheSize","withAlpha","output","rgbaToLcha","lchaToRgba","fromString","raw","Number","parsed","normalize","asArray","isStringColor","_","asColorLike","pattern","getPattern","cacheKey","canvasPattern","iconImage","getImageState","patternCanvasContext","drawImage","asCanvasPattern","levels","info","warn","level","coordinate1","coordinate2","wrapX","worldsAway","sourceExtentWidth","getWorldsAway","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","variant","families","family","createCanvasContext2D","canvasPool","settings","OffscreenCanvas","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","replaceNode","newNode","oldNode","parent","replaceChild","removeNode","node","removeChildren","lastChild","replaceChildren","oldChildren","childNodes","oldChild","newChild","easeIn","easeOut","inAndOut","linear","listen","originalListener","eventsKey","listenOnce","unlistenByKey","BLUR","CLEAR","DRAGENTER","DRAGOVER","FOCUS","RESIZE","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","includes","isString","evt","dispatching","pendingRemovals","propagate","pr","getListeners","boundingExtent","extendCoordinate","closestSquaredDistanceXY","containsCoordinate","containsExtent","extent1","extent2","coordinateRelationship","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","createEmpty","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","extendFlatCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getCorner","corner","getForViewAndSize","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","_boundingExtentXYs","wrapAndSliceX","isFinite","withCredentials","loadFeaturesXhr","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","GeometryCollection","Geometry","geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","cloneGeometries","closestPointXY","closestPoint","minSquaredDistance","computeExtent","getGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometries","simplified","simplifiedGeometry","intersectsExtent","sx","sy","setGeometries","setGeometriesArray","translate","defaultFeatureProjection","featureClass","supportedMediaTypes","getReadOptions","getUnits","setWorldExtent","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","transformed","fromProjection","toProjection","decimals","GeometryConstructor","Point","LineString","MultiPoint","MultiLineString","MultiPolygon","createRenderFeature","object","flat","geometryType","layout","ends","orient","orientFlatCoordinates","enableSimplifyTransformed","createGeometry","JSONFeature","readFeatureFromObject","getObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","JSON","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","readGeometryInternal","readPointGeometry","readLineStringGeometry","deflate","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","getCoordinates","writePointGeometry","writeLineStringGeometry","right","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","featureObject","geometryObject","crs","objects","TRUE","FALSE","VOID","memoizeOne","lastResult","lastArgs","lastThis","called","nextArgs","toPromise","getter","promiseGetter","tmpTransform","extent_","extentRevision_","simplifyTransformedInternal","revision","simplifyTransformed","coord","getClosestPoint","point","intersectsCoordinate","simplify","destination","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","flatMidpoint_","flatMidpointRevision_","maxDeltaRevision_","setFlatCoordinates","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","extrapolate","getCoordinateAt","getFlatMidpoint","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","setLayout","ends_","lineStrings","getLayout","appendLineString","multiLineString","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","simplifiedEnds","appendPoint","multiPoint","squaredDistance","getPoint","getPoints","points","endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","polygons","thisEndss","polygon","appendPolygon","newEndss","multiPolygon","getOrientedFlatCoordinates","getEndss","getFlatInteriorPoints","flatCenters","getInteriorPoints","simplifiedEndss","getPolygon","prevEnds","getPolygons","lastEnds","LinearRing","SimpleGeometry","inflate","flatInteriorPointRevision_","flatInteriorPoint_","appendLinearRing","linearRing","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","fromExtent","getFirstCoordinate","getLastCoordinate","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","twiceArea","linearRingss","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","getInteriorPointOfArray","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","interpolatePoint","dimension","cumulativeLengths","lineStringCoordinateAtM","lo","hi","m0","lineStringsCoordinateAtM","intersectsLineString","coordinatesExtent","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","lineStringLength","linearRingIsClockwise","edge","linearRingsAreOriented","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","inflateEnds","startOrientation","prevEndIndex","orientation","ret","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","snap","quantize","dx1","dy1","dx2","dy2","quantizeArray","quantizeMultiArray","transform2D","anchorX","anchorY","k","ua","navigator","userAgent","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","self","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","BaseLayer","background_","background","OPACITY","opacity","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","state_","getBackground","getClassName","getLayerState","getZIndex","getOpacity","getVisible","getLayersArray","states","EXTENT","setBackground","setExtent","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","numTypes","NoneType","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","names","namedType","specific","overlapsType","oneType","otherType","isType","expected","LiteralExpression","CallExpression","operator","newParsingContext","variables","featureId","encoded","typeHint","parser","parsers","parseCallExpression","Ops","Get","Var","Concat","GeometryType","Any","All","Not","Resolution","Zoom","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Coalesce","Case","In","Color","Id","Band","Palette","ToString","createParser","getTypeFromHint","withArgsCount","firstArg","parsedArgs","varName","withNoArgs","parseArgsOfType","narrowArgsType","outputType","withEvenArgs","argsCount","inputType","fallback","expectedInputType","interpolationType","interpolation","input","stop","operation","argCount","needleType","colors","parsedColors","minArgs","maxArgs","argType","expression","gotType","expectedType","sameType","returnType","argValidators","actualType","computeGeometryType","substring","buildExpression","actual","compileExpression","colorValue","compileAssertionExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","atan","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","declutterMode","optionalDeclutterMode","text","Text","setText","setFill","setBackgroundFill","setStroke","setBackgroundStroke","setFont","setMaxAngle","setOffsetX","setOffsetY","setOverflow","placement","setPlacement","setRepeat","setScale","setRotateWithView","textAlign","setTextAlign","justify","setJustify","textBaseline","setTextBaseline","setPadding","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","anchorXUnits","optionalIconAnchorUnits","anchorYUnits","property","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","icon","Icon","setDisplacement","setAnchor","buildIcon","pointsName","radiusName","requireNumber","radius","radius2","shape","RegularShape","buildShape","evaluateRadius","circle","Circle","setRadius","buildCircle","buildImage","evaluateZIndex","Style","empty","fill","stroke","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","Fill","setColor","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","Stroke","setWidth","lineCap","setLineCap","lineJoin","setLineJoin","setLineDash","setLineDashOffset","setMiterLimit","requireSize","BaseVectorLayer","baseOptions","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getFeatures","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","setRenderOrder","renderOrder","styleLike","toStyleLike","GroupEvent","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","currentLayers","ownLayerState","defaultZIndex","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","SOURCE","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","getData","isVisible","getMapInternal","find","layerExtent","inView","prepareFrame","MAP","arrayLayerState","createRenderer","PRELOAD","USE_INTERIM_TILES_ON_ERROR","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","clipped_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedPixelRatio_","renderedRenderOrder_","renderedFrameDeclutter_","replayGroup_","replayGroupChanged","clipping","targetContext_","opacity_","renderWorlds","executorGroup","declutterable","vectorSource","getLayer","snapToPixel","endWorld","world","getRenderTransform","execute","setDrawContext_","resetDrawContext_","globalAlpha","renderDeferredInternal","restore","prepareContainer","replayGroup","PRERENDER","POSTRENDER","preRender","clipUnrotated","postRender","transforms","featureCallback","lastIndexOf","executorGroups","renderIfReadyAndVisible","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","userTransform","userExtent","loadFeatures","styleFunction","dirty","renderFeature","getFeaturesInExtent","replayGroupInstructions","ExecutorGroup","getOverlaps","builderGroup","VectorLayer","IMAGE_REPLAYS","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","renderedLayerRevision_","renderedPixelToCoordinateTransform_","renderedOpacity_","tmpTransform_","tileClipContexts_","prepareTile","updateExecutorGroup_","tileImageNeedsRender_","getTile","hifi","wantedResolution","getRenderMode","renderTileImage_","isDrawableTile","hasContext","getTileImage","layerRevision","renderedTiles","builderState","getReplayState","renderedResolution","renderedRevision","renderedRenderOrder","sourceTileGrid","getTileGrid","tileExtent","getTileGridForProjection","getTileCoordExtent","wrappedTileCoord","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","tmpExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","tileGrid","hitExtent","declutteredFeatures","renderedProjection","getTileCoordForCoordAndResolution","loadingSourceTiles","tilePixel","reduce","accumulator","tileSize","getTileSize","getZForResolution","zDirection","getTileCoordCenter","tiles","getTileRenderTransform","acc","executorGroupZIndexContexts","getDeferredZIndexContexts","usedZIndices","executorGroupZindexContext","zIndexContexts","zIndexContext","getRenderedContext","tileClipContext","draw","worldOffset","inversePixelTransform","renderMode","replayTypes","tileSource","clips","clipZs","tileClipContexts","hasExecutors","currentZ","contextSaved","currentClip","getClipCoords","clipContext","ZIndexContext","clip","save","beginPath","moveTo","lineTo","replayState","renderedTileResolution","renderedTileRevision","renderPixelRatio","getTilePixelSize","renderScale","canvasTransform","setTransform","pixelScale","VectorTileLayer","preload","useInterimTilesOnError","renderMode_","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","bbox","clamp","squaredSegmentDistance","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","modulo","lerp","toFixed","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","EPSG3857Projection","Projection","code","units","global","worldExtent","getPointResolution","cosh","PROJECTIONS","METERS_PER_UNIT","EPSG4326Projection","axisOrientation","metersPerUnit","sourceCode","getCode","destinationCode","DEFAULT_RADIUS","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","projectionLike","pointResolution","getPointResolutionFunc","projUnits","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","fromLonLat","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","transformExtent","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceMetersPerUnit","userMetersPerUnit","projections2","forwardTransform","inverseTransform","code_","units_","worldExtent_","axisOrientation_","global_","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getAxisOrientation","setGlobal","getDefaultTileGrid","setDefaultTileGrid","setGetPointResolution","RenderEvent","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","squaredTolerance_","stride_","simplifiedGeometry_","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","interval","referenceWidth","isAvailable","fontStyle","fontWeight","available","referenceFont","measureTextWidth","check","done","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","body","measureAndCacheTextWidth","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","contextInstructions","executeLabelInstructions","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CUSTOM","endGeometry","BEGIN_GEOMETRY","reverseHitDetectionInstructions","reverse","instruction","END_GEOMETRY","fillStyleColor","getColor","fillPatternScale","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","lineDash","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","createFill","fillInstruction","SET_FILL_STYLE","applyStroke","createStroke","SET_STROKE_STYLE","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","rotateWithView_","scale_","width_","declutterMode_","declutterImageWithText_","myBegin","DRAW_IMAGE","filteredFlatCoordinates","sharedData","getAnchor","origin","getOrigin","getHitDetectionImage","getRotateWithView","getScaleArray","getDeclutterMode","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","MOVE_TO_LINE_TO","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","CIRCLE","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","maxAngle","segmentM","advance","beginX","beginY","startOffset","startLength","endM","singleSegment","previousAngle","iStart","charLength","chars","p1","p2","p3","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","line","overlaps","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","fillStates","strokeStates","textStates","widths_","labels_","zIndexContext_","getZIndexContext","createLabel","textKey","fillKey","strokeKey","strokeState","fillState","textState","textIsArray","strokeWidth","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","strokeInstruction","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","dimensions","box","strokePadding","alignAndScale","repeatSize","drawLabelWithPointPlacement_","baseline","execute_","declutterTree","pixelCoordinates","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","BEGIN_PATH","arc","CLOSE_PATH","closePath","rotateWithView","labelWithAnchor","textOffsetX","textOffsetY","geometryWidths","backgroundFill","backgroundStroke","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","DRAW_CHARS","measurePixelRatio","pixelRatioScale","textScale","cachedWidths","pathLength","textLength","drawChars","cc","part","FILL","STROKE","executeHitDetection","ALL","DECLUTTER","NON_DECLUTTER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","executors","instructionByZindex","candidates","contextSize","newContext","willReadFrequently","indexes","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","imageData","getImageData","idx","zs","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","pushFunction","deferredZIndexContexts","Instruction","beginPathInstruction","closePathInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","CanvasTextBuilder","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","textStrokeState_","textState_","textKey_","fillKey_","strokeKey_","beg","keep","saveTextStates_","p0","repeat","flatOffset","oo","chunk","chunkBegin","range","drawChars_","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getRepeat","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","getOffsetX","getOffsetY","textRotateWithView","textRotation","getText","instructions_","offset_","context_","Proxy","pushMethodArgs_","instructionsAtIndex","instructionAtIndex","CanvasImmediateRenderer","VectorContext","transform_","transformRotation_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","getGeometryFunction","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","getImageSize","imgContext","getScale","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","createLoadedTileFinder","forEachLoadedTile","ImageState","loadImage","imageState","pixelContext","tempTransform","pixelTransform","deferredContext_","containerReused","pixelContext_","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","getRenderContext","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedPixelRatio","newTiles_","tmpTileRange_","tileState","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","getGutterForProjection","viewResolution","viewCenter","sourceRevision","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","getInterpolate","getOpaque","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","alphaChanged","postRenderFunction","expireCache","tileCallback","tileCount","useTile","updateCacheSize","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","hasText","imageReplay","textReplay","lineStringReplay","polygonReplay","hasImage","declutterBuilderGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","loadingPromises","renderGeometry","renderFeatureInternal","getHitDetectionRenderer","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","renderEdges","drawSingle","clipExtent","pixelRound","globalCompositeOperation","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","step","ReprojTile","targetTileGrid","getTileFunction","errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","clipExtent_","maxTargetExtent","maxSourceExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","calculateSourceExtent","sourceRange","srcX","srcY","reproject_","leftToLoad","sourceListenKey","unlistenSources_","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","ERROR_THRESHOLD","createSnapToN","createSnapToZero","hasArea","toSize","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","attributionLike","maxEntries","rbush_","items_","extents","items","getAll","getInExtent","forEach_","forEachInExtent","rbush","VectorSourceEvent","Event","VectorSource","loader_","format_","url_","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removeFeatures","removedFeatures","removedFeature","featureChangeKeys","idString","removed","setLoader","setUrl","CircleStyle","displacement","getRadius","getDisplacement","radius_","patternImage_","color_","patternImage","calculateScale","wantedWidth","wantedHeight","normalizedAnchor_","anchorOrigin_","anchorXUnits_","anchorYUnits_","iconImage_","offsetOrigin_","origin_","size_","initialOptions_","unlistenImageChange","listenImageChange","getSrc","iconImageSize","taintedTestContext","IconImage","imageState_","tainted_","ready_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","onChange","getCacheKey","shared","cache_","patternCache_","cacheSize_","maxCacheSize_","createPattern","maxCacheSize","ImageStyle","scaleArray_","displacement_","canvases_","hitDetectionCanvas_","radius2_","stroke_","renderOptions_","getRadius2","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","r1","r2","miterRatio","bevelAdd","aa","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","startAngle","angle0","radiusC","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","toFunction","defaultStyles","createDefaultStyle","font_","textAlign_","justify_","repeat_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","tmp_","create","reset","multiply","transform1","transform2","a1","d1","e1","f1","a2","e2","f2","setFromArray","compose","makeInverse","det","matrixPrecision","abstract","uidCounter_","getUid","ol_uid","rgba","toArray","toArray01","toArray01PremultipliedAlpha","transparent","convertLiteral","getInterpolateOperator","parameters","colorSpace","getFallback","propertySpec","defaultValue","default","convertPropertyFunction","getFunctionType","appendStopPair","fixupDegenerateStepCurve","curve","isStep","interpolated","convertTokenString","re","literal","ParsingError","message","Scope","bindings","has","NullType","kind","ObjectType","ValueType","CollatorType","FormattedType","ResolvedImageType","itemType","N","valueMemberTypes","checkSubtype","memberType","isValidType","provided","allowedTypes","isValidNativeType","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","lhs","rhs","resolvedLocale","resolvedOptions","FormattedSection","fontStack","textColor","sections","unformatted","section","factory","serialize","serialized","validateRGBA","isValue","mixed","typeOf","Literal","evaluate","eachChild","outputDefined","types","string","number","boolean","Assertion","FormatExpression","nextTokenMayBeObject","lastExpression","content","evaluatedContent","ImageExpression","evaluatedImageName","availableImages","Coercion","parseColor","child","geometryTypes","globals","featureState","formattedSection","_parseColorCache","canonical","featureTileCoord","featureDistanceData","canonicalID","distanceFromCenter","dX","dY","bearing","cached","CompoundExpression","_evaluate","definition","definitions","availableOverloads","overloads","signature","signatureContext","registry","path","scope","argParseFailed","errors","signatures","stringifySignature","actualTypes","register","CollatorExpression","updateBBox","boxWithinBox","bbox1","bbox2","getTileCoordinates","lat","tilesAtZoom","onBoundary","pointWithinPolygon","rings","inside","ring","len2","pointWithinPolygons","twoSided","q1","q2","det1","det2","lineIntersectLine","vectorP","lineIntersectPolygon","lineStringWithinPolygon","lineStringWithinPolygons","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","getTilePoints","pointBBox","shifts","tilePoints","getTileLines","lineBBox","tileLines","tileLine","Within","geojson","tilePolygon","tilePolygons","pointsWithinPolygons","linesWithinPolygons","isStateConstant","isGlobalPropertyConstant","boundExpression","ParsingContext","expr","_parse","annotate","typeAnnotation","Expr","isConstant","ec","isTypeAnnotation","childrenConstant","currentValue","nextValue","lowerIndex","upperIndex","currentIndex","Step","labels","outputs","labelKey","valueKey","stopCount","to","Xn","Zn","deg2rad","rad2deg","xyz2lab","lab2xyz","xyz2rgb","rgb2xyz","rgbToLab","rgbColor","labToRgb","labColor","interpolateHue","lab","forward","hcl","hclColor","interpolationFactor","lower","upper","exponentialInterpolation","controlPoints","rest","outputLower","outputUpper","lowerValue","upperValue","difference","needsAnnotation","firstImage","Let","binding","At","IndexOf","fromIndex","cases","otherwise","labelContext","MAX_SAFE_INTEGER","sortedLabels","groupedByOutput","outputLookup","outputIndex","coerceLabel","branches","Slice","beginIndex","endIndex","isComparableType","eqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","hasUntypedArgument","lt","Equals","NotEquals","LessThanOrEqual","GreaterThanOrEqual","NumberFormat","currency","unit","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","Length","expressions","varargs","pitch","heatmapDensity","lineProgress","skyRadialProgress","accumulated","LN10","asin","isSupportedScript","toUpperCase","StyleExpression","spec","_warningHistory","_evaluator","_defaultValue","_enumValues","evaluateWithoutErrorHandling","createExpression","enum","formatted","resolvedImage","getExpectedType","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","zoomStops","createPropertyExpression","isFeatureConstant","isZoomConstant","zoomCurve","findZoomCurve","childResult","deepUnbundle","unbundledValue","valueOf","unbundle","layerType","needGeometry","needFeature","isExpressionFilter","convertFilter","filterExp","staticFilter","isDynamicFilter","unionDynamicBranches","collapseDynamicBooleanExpressions","extractStaticFilter","filterSpec","latest","compiledStaticFilter","filterFunc","globalProperties","dynamicFilterFunc","compiledDynamicFilter","dynamicFilter","geometryNeeded","dynamicConditionExpressions","collapsedExpression","subExpression","isBranchingDynamically","convertComparisonOp","convertNegation","filters","convertInOp","convertHasOp","deref","derefLayers","ref","VectorTile","features_","onLoad","setFeatures","onError","getKeyZXY","fromKey","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","expandUrl","urls","startCharCode","stopCharCode","charCode","mapboxBaseUrl","getMapboxPath","normalizeStyleUrl","token","mapboxPath","decodeURI","URL","location","href","normalizeSourceUrl","tokenParam","styleUrl","urlObject","searchParams","functionCacheByStyleId","filterCacheByStyleId","styleId","getStyleId","glStyle","functionCache","defaultResolutions","createCanvas","pendingRequests","fetchResource","resourceType","metadata","request","transformedRequest","transformRequest","pendingRequest","Request","headers","fetch","response","ok","json","getGlStyle","glStyleOrUrl","accessToken","tilejsonCache","getTileJson","glSource","promise","arrayBuffer","blob","createObjectURL","revokeObjectURL","normalizedSourceUrl","accessTokenParam","tileJson","tileUrl","scheme","drawIconHalo","spriteImage","spriteImageData","haloWidth","haloColor","imageCanvas","imageContext","smoothstep","drawSDF","gamma","putImageData","hairSpacePool","applyLetterSpacing","letterSpacing","textWithLetterSpacing","lines","joinSpaceString","ll","getMeasureContext","measureCache","wrapText","em","hardLines","wrappedText","words","maxWidth","word","testLine","prevWidth","nextWidth","next","lineWords","lastWord","fontFamilyRegEx","stripQuotesRegEx","loadedFontFamilies","hasFontFamily","styleSheets","styleSheet","cssRules","cssRule","cssText","processedFontFamilies","expressionData","rawExpression","compiledExpression","emptyObj","zoomObj","renderFeatureCoordinates","getValue","layoutOrPaint","layerId","functions","isExpr","convertIdentityFunction","zoomAndFeatureDependent","featureDependent","zoomDependent","tokens","featureFunctionParameters","featureFunctionStops","convertZoomAndPropertyFunction","convertZoomFunction","convertFunction","evaluateFilter","filterCache","renderTransparentEnabled","colorWithOpacity","templateRegEx","fromTemplate","recordLayer","stylefunction","olLayer","sourceOrLayers","spriteData","spriteImageUrl","getFonts","version","spriteImageSize","spriteImageUnSDFed","blobUrl","worker","postMessage","action","allLayers","layersBySourceLayer","mapboxLayers","iconImageCache","patternCache","mapboxSource","sourceLayer","textHalo","onlyLayer","featureBelongsToLayer","stylesLength","layerData","paint","visibility","minzoom","maxzoom","strokeColor","fillIcon","icon_cache_key","iconImg","skipLabel","textLineHeight","textSize","maxTextWidth","placementAngle","styleGeom","imageElement","iconRotationAlignment","geom","iconSize","iconColor","iconCacheKey","iconOptions","sdf","circleRadius","circleStrokeColor","circleTranslate","circleColor","circleStrokeWidth","cache_key","fontArray","textField","chunkFont","textTransform","wrappedLabel","textAnchor","symbolSpacing","textHaloWidth","textOffset","textTranslate","vOffset","hOffset","textRotationAlignment","textJustify","halfTextSize","textPadding","BaseImageLayer","CanvasImageLayerRenderer","imageLayer","imageSource","imageExtent","imageMapWidth","imageMapHeight","imageResolution","imageResolutionX","imageResolutionY","clipped","dw","dh","BaseImage","MVT","layerName_","layerName","layers_","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","ctor","pbfLayers","layersPBFReader","pbfLayer","readRawFeature","layerPBFReader","featurePBFReader","ImageCanvas","error_","getError","handleLoad_","fromResolutionLike","ReprojImage","getImageFunction","Triangulation","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","wantedExtent_","wantedResolution_","static_","wantedProjection_","setResolutions","findNearestResolution","getImageInternal","requestExtent","requestWidth","requestHeight","getRequestExtent","handleImageChange","BaseTileLayer","BaseTile","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","pruneExceptNewestZ","tmpTileCoord","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","opt_direction","fullTileRanges","getForProjection","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","createXYZ","xyzOptions","gridOptions","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileCoordForTileUrlFunction","withinExtentAndZ","TileSourceEvent","hasImageData","ImageData","createMinion","workerHasImageData","newWorkerImageData","buffers","meta","imageOps","numBuffers","numBytes","byteLength","images","Uint8ClampedArray","arrays","pixels","createWorker","config","onMessage","lib","Worker","Blob","Buffer","Processor","threads","_imageOps","workers","_onWorkerMessage","minion","terminated","terminate","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","_enqueue","_dispatch","job","slices","_resolveJob","createImageData","newImageData","RasterSourceEvent","RasterSource","processor_","operationType_","operationType","threads_","createLayer","createLayers","useResolutions_","processSources_","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","attributionGetter","sourceAttribution","setOperation","updateFrameState_","allSourcesReady_","imageDatas","onWorkerComplete_","sharedContext","layerOrSource","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","setTileLoadFunction","setTileUrlFunction","defaultTileLoadFunction","imageTile","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","tileJSON_","jsonp","errback","callbackParam","script","cleanup","async","timer","head","handleTileJSONResponse","handleTileJSONError","client","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","gridExtent","attributionExtent","VectorRenderTile","replayState_","errorTileKeys","renderedTileZ","defaultLoadFunction","sourceTileCache","tileGrids_","tileFeatures","usedSourceTiles","getCacheKeyForTileKey","sourceZ","sourceTileState","listenChange","sourceTileKey","coordKey","hillshade","elevationImage","elevationData","shadeData","dp","twoPi","halfPi","sunEl","sunAz","cosSunEl","sinSunEl","highlightColor","shadowColor","accentColor","encoding","pixelX","pixelY","z0","z1","dzdx","dzdy","aspect","accent","scaled","shade","scaledAccentColor","compositeShadeColor","slopeScaleBase","scaledSlope","cosIncidence","calculateElevation","vert","getTileResolutions","completeOptions","applyStyle","sourceOrLayersOrOptions","optionsOrPath","sourceId","updateSource","Vector","assignSource","setupVectorSource","targetSource","setupGeoJSONSource","spriteScale","sprite","templateUrl","webfonts","fontsKey","fontDescriptions","cssFont","fontDescription","fontUrl","querySelector","markup","rel","normalizeSpriteUrl","sizeFactor","spriteUrl","pathname","spritesJson","applyBackground","mapOrLayer","getBackgroundColor","setupBackgroundLayer","setFirstBackground","getSourceIdByRef","sourceOptionsFromTileJSON","tileJSONSource","tileJSONDoc","bounds","tr","extentFromTileJSON","sourceOptions","glLayer","bg","div","getBboxTemplate","setupRasterLayer","getTileUrl","bboxTemplate","setupRasterSource","geoJsonFormat","GeoJSON","geoJsonUrl","extentUrl","setupLayer","glLayers","setupVectorLayer","updateRasterLayerProperties","prerenderRasterLayer","setupGeoJSONLayer","hillshadeLayer","Raster","setupHillshadeLayer","glSourceId","processStyle","mapOrGroup","promises","layerIds","finalizeLayer","debug","mapOrGroupOrElement","HTMLElement","sourceMinZoom","layerMapboxLayerids","mapboxLayer","manageVisibility","setFeatureState","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","O","chunkIds","notFulfilled","fulfilled","enumerable","prop","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal"],"sourceRoot":""}