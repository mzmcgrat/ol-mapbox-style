{"version":3,"file":"common.js","mappings":"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,KAAkB+1E,OAClBH,EACAC,EACAxiE,EACAw7D,GAAwBr6C,EACxB,OAEF,MACF,IAAK,UACL,IAAK,kBACHihD,EAAc,GACdziC,EACU,WAARlyC,EAC2D,EAErD4hD,6BACFrvC,EAASk1B,qBACfjsC,EAAS5D,KAAK88E,uBACZxiC,EACA,EACuG,EAErGgO,UACFxY,EACAitC,GAEF/8E,KAAK47E,aAAat0E,KAAK,CACrB,KAAkB+1E,OAClBH,EACAH,EACApiE,EACAmhB,EACA,OAEF97B,KAAK87E,yBAAyBx0E,KAAK,CACjC,KAAkB+1E,OAClBH,EACAH,EACApiE,EACAw7D,GAAwBr6C,EACxB,OAEF,MACF,IAAK,aACL,IAAK,SACHwe,EAAkB3/B,EAASk1B,qBAC3BmtC,EAAah9E,KAAKq8E,0BAChB/hC,EACA,EACAA,EAAgBr4C,OAChB6tC,GACA,GACA,GAEF9vC,KAAK47E,aAAat0E,KAAK,CACrB,KAAkB+1E,OAClBH,EACAF,EACAriE,EACAmhB,EACA,OAEF97B,KAAK87E,yBAAyBx0E,KAAK,CACjC,KAAkB+1E,OAClBH,EACAF,EACAriE,EACAw7D,GAAwBr6C,EACxB,OAEF,MACF,IAAK,aACHwe,EAAkB3/B,EAASk1B,qBAC3BmtC,EAAah9E,KAAKk8E,2BAA2B5hC,EAAiBxK,GAE1DktC,EAAaE,IACfl9E,KAAK47E,aAAat0E,KAAK,CACrB,KAAkB+1E,OAClBH,EACAF,EACAriE,EACAmhB,EACA,OAEF97B,KAAK87E,yBAAyBx0E,KAAK,CACjC,KAAkB+1E,OAClBH,EACAF,EACAriE,EACAw7D,GAAwBr6C,EACxB,QAGJ,MACF,IAAK,QACHwe,EAAkB3/B,EAASk1B,qBAC3B7vC,KAAK+b,YAAYzU,KAAKgzC,EAAgB,GAAIA,EAAgB,IAC1D0iC,EAAah9E,KAAK+b,YAAY9Z,OAE9BjC,KAAK47E,aAAat0E,KAAK,CACrB,KAAkB+1E,OAClBH,EACAF,EACAriE,EACAmhB,IAEF97B,KAAK87E,yBAAyBx0E,KAAK,CACjC,KAAkB+1E,OAClBH,EACAF,EACAriE,E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","sources":["webpack://ol-mapbox-style/webpack/runtime/chunk loaded","webpack://ol-mapbox-style/./node_modules/@mapbox/unitbezier/index.js","webpack://ol-mapbox-style/./node_modules/csscolorparser/csscolorparser.js","webpack://ol-mapbox-style/./node_modules/ieee754/index.js","webpack://ol-mapbox-style/./node_modules/mapbox-to-css-font/index.js","webpack://ol-mapbox-style/./node_modules/nanoassert/index.js","webpack://ol-mapbox-style/./node_modules/pbf/index.js","webpack://ol-mapbox-style/./node_modules/rbush/rbush.min.js","webpack://ol-mapbox-style/./node_modules/ol/Collection.js","webpack://ol-mapbox-style/./node_modules/ol/CollectionEventType.js","webpack://ol-mapbox-style/./node_modules/ol/Disposable.js","webpack://ol-mapbox-style/./node_modules/ol/Image.js","webpack://ol-mapbox-style/./node_modules/ol/ImageState.js","webpack://ol-mapbox-style/./node_modules/ol/ImageTile.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Map.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Composite.js","webpack://ol-mapbox-style/./node_modules/ol/MapEvent.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEvent.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEventType.js","webpack://ol-mapbox-style/./node_modules/ol/pointer/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEventHandler.js","webpack://ol-mapbox-style/./node_modules/ol/MapEventType.js","webpack://ol-mapbox-style/./node_modules/ol/MapProperty.js","webpack://ol-mapbox-style/./node_modules/ol/control/Control.js","webpack://ol-mapbox-style/./node_modules/ol/control/Attribution.js","webpack://ol-mapbox-style/./node_modules/ol/control/Rotate.js","webpack://ol-mapbox-style/./node_modules/ol/control/Zoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Property.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Interaction.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Pointer.js","webpack://ol-mapbox-style/./node_modules/ol/events/condition.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragPan.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragRotate.js","webpack://ol-mapbox-style/./node_modules/ol/render/Box.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragBox.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragZoom.js","webpack://ol-mapbox-style/./node_modules/ol/events/Key.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/KeyboardPan.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/KeyboardZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/PinchRotate.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/PinchZoom.js","webpack://ol-mapbox-style/./node_modules/ol/Map.js","webpack://ol-mapbox-style/./node_modules/ol/control/defaults.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/defaults.js","webpack://ol-mapbox-style/./node_modules/ol/Kinetic.js","webpack://ol-mapbox-style/./node_modules/ol/Object.js","webpack://ol-mapbox-style/./node_modules/ol/ObjectEventType.js","webpack://ol-mapbox-style/./node_modules/ol/Observable.js","webpack://ol-mapbox-style/./node_modules/ol/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/structs/PriorityQueue.js","webpack://ol-mapbox-style/./node_modules/ol/TileQueue.js","webpack://ol-mapbox-style/./node_modules/ol/TileRange.js","webpack://ol-mapbox-style/./node_modules/ol/TileState.js","webpack://ol-mapbox-style/./node_modules/ol/ViewProperty.js","webpack://ol-mapbox-style/./node_modules/ol/centerconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/resolutionconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/View.js","webpack://ol-mapbox-style/./node_modules/ol/ViewHint.js","webpack://ol-mapbox-style/./node_modules/ol/array.js","webpack://ol-mapbox-style/./node_modules/ol/asserts.js","webpack://ol-mapbox-style/./node_modules/ol/color.js","webpack://ol-mapbox-style/./node_modules/ol/colorlike.js","webpack://ol-mapbox-style/./node_modules/ol/console.js","webpack://ol-mapbox-style/./node_modules/ol/coordinate.js","webpack://ol-mapbox-style/./node_modules/ol/css.js","webpack://ol-mapbox-style/./node_modules/ol/dom.js","webpack://ol-mapbox-style/./node_modules/ol/easing.js","webpack://ol-mapbox-style/./node_modules/ol/events.js","webpack://ol-mapbox-style/./node_modules/ol/events/Event.js","webpack://ol-mapbox-style/./node_modules/ol/events/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/events/Target.js","webpack://ol-mapbox-style/./node_modules/ol/extent.js","webpack://ol-mapbox-style/./node_modules/ol/extent/Relationship.js","webpack://ol-mapbox-style/./node_modules/ol/featureloader.js","webpack://ol-mapbox-style/./node_modules/ol/format/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/geom/GeometryCollection.js","webpack://ol-mapbox-style/./node_modules/ol/format/JSONFeature.js","webpack://ol-mapbox-style/./node_modules/ol/format/GeoJSON.js","webpack://ol-mapbox-style/./node_modules/ol/functions.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Geometry.js","webpack://ol-mapbox-style/./node_modules/ol/geom/LineString.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiLineString.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiPoint.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiPolygon.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Point.js","webpack://ol-mapbox-style/./node_modules/ol/geom/LinearRing.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Polygon.js","webpack://ol-mapbox-style/./node_modules/ol/geom/SimpleGeometry.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/area.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/center.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/closest.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/contains.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/deflate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/inflate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/interiorpoint.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/interpolate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/intersectsextent.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/length.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/reverse.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/orient.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/segments.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/simplify.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/transform.js","webpack://ol-mapbox-style/./node_modules/ol/has.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Base.js","webpack://ol-mapbox-style/./node_modules/ol/expr/expression.js","webpack://ol-mapbox-style/./node_modules/ol/expr/cpu.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/style.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseVector.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Group.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Property.js","webpack://ol-mapbox-style/./node_modules/ol/layer/TileProperty.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Vector.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/VectorTile.js","webpack://ol-mapbox-style/./node_modules/ol/loadingstrategy.js","webpack://ol-mapbox-style/./node_modules/ol/math.js","webpack://ol-mapbox-style/./node_modules/ol/obj.js","webpack://ol-mapbox-style/./node_modules/ol/proj/epsg3857.js","webpack://ol-mapbox-style/./node_modules/ol/proj/epsg4326.js","webpack://ol-mapbox-style/./node_modules/ol/proj/projections.js","webpack://ol-mapbox-style/./node_modules/ol/proj/transforms.js","webpack://ol-mapbox-style/./node_modules/ol/sphere.js","webpack://ol-mapbox-style/./node_modules/ol/proj.js","webpack://ol-mapbox-style/./node_modules/ol/proj/Projection.js","webpack://ol-mapbox-style/./node_modules/ol/proj/Units.js","webpack://ol-mapbox-style/./node_modules/ol/render/Event.js","webpack://ol-mapbox-style/./node_modules/ol/render/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/render/VectorContext.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Builder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/textpath.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Executor.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Instruction.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/linechunk.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/straightchunk.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/TextBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Immediate.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/hitdetect.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/vector.js","webpack://ol-mapbox-style/./node_modules/ol/reproj.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Triangulation.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/common.js","webpack://ol-mapbox-style/./node_modules/ol/rotationconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/size.js","webpack://ol-mapbox-style/./node_modules/ol/source/Source.js","webpack://ol-mapbox-style/./node_modules/ol/structs/RBush.js","webpack://ol-mapbox-style/./node_modules/ol/source/VectorEventType.js","webpack://ol-mapbox-style/./node_modules/ol/source/Vector.js","webpack://ol-mapbox-style/./node_modules/ol/style/Circle.js","webpack://ol-mapbox-style/./node_modules/ol/style/Fill.js","webpack://ol-mapbox-style/./node_modules/ol/style/IconImage.js","webpack://ol-mapbox-style/./node_modules/ol/style/Icon.js","webpack://ol-mapbox-style/./node_modules/ol/style/IconImageCache.js","webpack://ol-mapbox-style/./node_modules/ol/style/Image.js","webpack://ol-mapbox-style/./node_modules/ol/style/RegularShape.js","webpack://ol-mapbox-style/./node_modules/ol/style/Stroke.js","webpack://ol-mapbox-style/./node_modules/ol/style/Style.js","webpack://ol-mapbox-style/./node_modules/ol/style/Text.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid/common.js","webpack://ol-mapbox-style/./node_modules/ol/transform.js","webpack://ol-mapbox-style/./node_modules/ol/util.js","webpack://ol-mapbox-style/./node_modules/ol/render/Feature.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/color.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/function/convert.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/parsing_error.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/scope.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/collator.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/formatted.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/resolved_image.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/values.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/literal.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/runtime_error.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/assertion.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/format.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/image.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/coercion.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/evaluation_context.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/compound_expression.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/collator.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/within.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/is_constant.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/var.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/parsing_context.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/stops.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/step.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/interpolate.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/color_spaces.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/interpolate.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/coalesce.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/let.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/at.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/in.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/index_of.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/match.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/case.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/slice.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/comparison.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/number_format.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/length.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/result.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/function/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/properties.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/unbundle_jsonlint.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/reference/latest.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/feature_filter/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/ref_properties.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/deref.js","webpack://ol-mapbox-style/./node_modules/ol/VectorTile.js","webpack://ol-mapbox-style/./node_modules/ol/tilecoord.js","webpack://ol-mapbox-style/./node_modules/ol/tileurlfunction.js","webpack://ol-mapbox-style/./src/mapbox.js","webpack://ol-mapbox-style/./src/util.js","webpack://ol-mapbox-style/./src/text.js","webpack://ol-mapbox-style/./src/stylefunction.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseImage.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/ImageLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Image.js","webpack://ol-mapbox-style/./node_modules/ol/format/MVT.js","webpack://ol-mapbox-style/./node_modules/ol/ImageCanvas.js","webpack://ol-mapbox-style/./node_modules/ol/resolution.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Image.js","webpack://ol-mapbox-style/./node_modules/ol/source/Image.js","webpack://ol-mapbox-style/./node_modules/ol/source/common.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseTile.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/structs/LRUCache.js","webpack://ol-mapbox-style/./node_modules/ol/TileCache.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid/TileGrid.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid.js","webpack://ol-mapbox-style/./node_modules/ol/source/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/source/Raster.js","webpack://ol-mapbox-style/./node_modules/ol/source/UrlTile.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileEventType.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileImage.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileJSON.js","webpack://ol-mapbox-style/./node_modules/ol/net.js","webpack://ol-mapbox-style/./node_modules/ol/VectorRenderTile.js","webpack://ol-mapbox-style/./node_modules/ol/source/VectorTile.js","webpack://ol-mapbox-style/./src/shaders.js","webpack://ol-mapbox-style/./src/apply.js","webpack://ol-mapbox-style/webpack/bootstrap","webpack://ol-mapbox-style/webpack/runtime/define property getters","webpack://ol-mapbox-style/webpack/runtime/hasOwnProperty shorthand","webpack://ol-mapbox-style/webpack/runtime/make namespace object","webpack://ol-mapbox-style/webpack/runtime/jsonp chunk loading"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nmodule.exports = UnitBezier;\n\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3.0 * p1x;\n    this.bx = 3.0 * (p2x - p1x) - this.cx;\n    this.ax = 1.0 - this.cx - this.bx;\n\n    this.cy = 3.0 * p1y;\n    this.by = 3.0 * (p2y - p1y) - this.cy;\n    this.ay = 1.0 - this.cy - this.by;\n\n    this.p1x = p1x;\n    this.p1y = p2y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\n\nUnitBezier.prototype.sampleCurveX = function(t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\n\nUnitBezier.prototype.sampleCurveY = function(t) {\n    return ((this.ay * t + this.by) * t + this.cy) * t;\n};\n\nUnitBezier.prototype.sampleCurveDerivativeX = function(t) {\n    return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n};\n\nUnitBezier.prototype.solveCurveX = function(x, epsilon) {\n    if (typeof epsilon === 'undefined') epsilon = 1e-6;\n\n    var t0, t1, t2, x2, i;\n\n    // First try a few iterations of Newton's method -- normally very fast.\n    for (t2 = x, i = 0; i < 8; i++) {\n\n        x2 = this.sampleCurveX(t2) - x;\n        if (Math.abs(x2) < epsilon) return t2;\n\n        var d2 = this.sampleCurveDerivativeX(t2);\n        if (Math.abs(d2) < 1e-6) break;\n\n        t2 = t2 - x2 / d2;\n    }\n\n    // Fall back to the bisection method for reliability.\n    t0 = 0.0;\n    t1 = 1.0;\n    t2 = x;\n\n    if (t2 < t0) return t0;\n    if (t2 > t1) return t1;\n\n    while (t0 < t1) {\n\n        x2 = this.sampleCurveX(t2);\n        if (Math.abs(x2 - x) < epsilon) return t2;\n\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n\n        t2 = (t1 - t0) * 0.5 + t0;\n    }\n\n    // Failure.\n    return t2;\n};\n\nUnitBezier.prototype.solve = function(x, epsilon) {\n    return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\n","// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n  \"transparent\": [0,0,0,0], \"aliceblue\": [240,248,255,1],\n  \"antiquewhite\": [250,235,215,1], \"aqua\": [0,255,255,1],\n  \"aquamarine\": [127,255,212,1], \"azure\": [240,255,255,1],\n  \"beige\": [245,245,220,1], \"bisque\": [255,228,196,1],\n  \"black\": [0,0,0,1], \"blanchedalmond\": [255,235,205,1],\n  \"blue\": [0,0,255,1], \"blueviolet\": [138,43,226,1],\n  \"brown\": [165,42,42,1], \"burlywood\": [222,184,135,1],\n  \"cadetblue\": [95,158,160,1], \"chartreuse\": [127,255,0,1],\n  \"chocolate\": [210,105,30,1], \"coral\": [255,127,80,1],\n  \"cornflowerblue\": [100,149,237,1], \"cornsilk\": [255,248,220,1],\n  \"crimson\": [220,20,60,1], \"cyan\": [0,255,255,1],\n  \"darkblue\": [0,0,139,1], \"darkcyan\": [0,139,139,1],\n  \"darkgoldenrod\": [184,134,11,1], \"darkgray\": [169,169,169,1],\n  \"darkgreen\": [0,100,0,1], \"darkgrey\": [169,169,169,1],\n  \"darkkhaki\": [189,183,107,1], \"darkmagenta\": [139,0,139,1],\n  \"darkolivegreen\": [85,107,47,1], \"darkorange\": [255,140,0,1],\n  \"darkorchid\": [153,50,204,1], \"darkred\": [139,0,0,1],\n  \"darksalmon\": [233,150,122,1], \"darkseagreen\": [143,188,143,1],\n  \"darkslateblue\": [72,61,139,1], \"darkslategray\": [47,79,79,1],\n  \"darkslategrey\": [47,79,79,1], \"darkturquoise\": [0,206,209,1],\n  \"darkviolet\": [148,0,211,1], \"deeppink\": [255,20,147,1],\n  \"deepskyblue\": [0,191,255,1], \"dimgray\": [105,105,105,1],\n  \"dimgrey\": [105,105,105,1], \"dodgerblue\": [30,144,255,1],\n  \"firebrick\": [178,34,34,1], \"floralwhite\": [255,250,240,1],\n  \"forestgreen\": [34,139,34,1], \"fuchsia\": [255,0,255,1],\n  \"gainsboro\": [220,220,220,1], \"ghostwhite\": [248,248,255,1],\n  \"gold\": [255,215,0,1], \"goldenrod\": [218,165,32,1],\n  \"gray\": [128,128,128,1], \"green\": [0,128,0,1],\n  \"greenyellow\": [173,255,47,1], \"grey\": [128,128,128,1],\n  \"honeydew\": [240,255,240,1], \"hotpink\": [255,105,180,1],\n  \"indianred\": [205,92,92,1], \"indigo\": [75,0,130,1],\n  \"ivory\": [255,255,240,1], \"khaki\": [240,230,140,1],\n  \"lavender\": [230,230,250,1], \"lavenderblush\": [255,240,245,1],\n  \"lawngreen\": [124,252,0,1], \"lemonchiffon\": [255,250,205,1],\n  \"lightblue\": [173,216,230,1], \"lightcoral\": [240,128,128,1],\n  \"lightcyan\": [224,255,255,1], \"lightgoldenrodyellow\": [250,250,210,1],\n  \"lightgray\": [211,211,211,1], \"lightgreen\": [144,238,144,1],\n  \"lightgrey\": [211,211,211,1], \"lightpink\": [255,182,193,1],\n  \"lightsalmon\": [255,160,122,1], \"lightseagreen\": [32,178,170,1],\n  \"lightskyblue\": [135,206,250,1], \"lightslategray\": [119,136,153,1],\n  \"lightslategrey\": [119,136,153,1], \"lightsteelblue\": [176,196,222,1],\n  \"lightyellow\": [255,255,224,1], \"lime\": [0,255,0,1],\n  \"limegreen\": [50,205,50,1], \"linen\": [250,240,230,1],\n  \"magenta\": [255,0,255,1], \"maroon\": [128,0,0,1],\n  \"mediumaquamarine\": [102,205,170,1], \"mediumblue\": [0,0,205,1],\n  \"mediumorchid\": [186,85,211,1], \"mediumpurple\": [147,112,219,1],\n  \"mediumseagreen\": [60,179,113,1], \"mediumslateblue\": [123,104,238,1],\n  \"mediumspringgreen\": [0,250,154,1], \"mediumturquoise\": [72,209,204,1],\n  \"mediumvioletred\": [199,21,133,1], \"midnightblue\": [25,25,112,1],\n  \"mintcream\": [245,255,250,1], \"mistyrose\": [255,228,225,1],\n  \"moccasin\": [255,228,181,1], \"navajowhite\": [255,222,173,1],\n  \"navy\": [0,0,128,1], \"oldlace\": [253,245,230,1],\n  \"olive\": [128,128,0,1], \"olivedrab\": [107,142,35,1],\n  \"orange\": [255,165,0,1], \"orangered\": [255,69,0,1],\n  \"orchid\": [218,112,214,1], \"palegoldenrod\": [238,232,170,1],\n  \"palegreen\": [152,251,152,1], \"paleturquoise\": [175,238,238,1],\n  \"palevioletred\": [219,112,147,1], \"papayawhip\": [255,239,213,1],\n  \"peachpuff\": [255,218,185,1], \"peru\": [205,133,63,1],\n  \"pink\": [255,192,203,1], \"plum\": [221,160,221,1],\n  \"powderblue\": [176,224,230,1], \"purple\": [128,0,128,1],\n  \"rebeccapurple\": [102,51,153,1],\n  \"red\": [255,0,0,1], \"rosybrown\": [188,143,143,1],\n  \"royalblue\": [65,105,225,1], \"saddlebrown\": [139,69,19,1],\n  \"salmon\": [250,128,114,1], \"sandybrown\": [244,164,96,1],\n  \"seagreen\": [46,139,87,1], \"seashell\": [255,245,238,1],\n  \"sienna\": [160,82,45,1], \"silver\": [192,192,192,1],\n  \"skyblue\": [135,206,235,1], \"slateblue\": [106,90,205,1],\n  \"slategray\": [112,128,144,1], \"slategrey\": [112,128,144,1],\n  \"snow\": [255,250,250,1], \"springgreen\": [0,255,127,1],\n  \"steelblue\": [70,130,180,1], \"tan\": [210,180,140,1],\n  \"teal\": [0,128,128,1], \"thistle\": [216,191,216,1],\n  \"tomato\": [255,99,71,1], \"turquoise\": [64,224,208,1],\n  \"violet\": [238,130,238,1], \"wheat\": [245,222,179,1],\n  \"white\": [255,255,255,1], \"whitesmoke\": [245,245,245,1],\n  \"yellow\": [255,255,0,1], \"yellowgreen\": [154,205,50,1]}\n\nfunction clamp_css_byte(i) {  // Clamp to integer 0 .. 255.\n  i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clamp_css_float(f) {  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parse_css_int(str) {  // int or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_byte(parseFloat(str) / 100 * 255);\n  return clamp_css_byte(parseInt(str));\n}\n\nfunction parse_css_float(str) {  // float or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_float(parseFloat(str) / 100);\n  return clamp_css_float(parseFloat(str));\n}\n\nfunction css_hue_to_rgb(m1, m2, h) {\n  if (h < 0) h += 1;\n  else if (h > 1) h -= 1;\n\n  if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n  if (h * 2 < 1) return m2;\n  if (h * 3 < 2) return m1 + (m2 - m1) * (2/3 - h) * 6;\n  return m1;\n}\n\nfunction parseCSSColor(css_str) {\n  // Remove all whitespace, not compliant, but should just be more accepting.\n  var str = css_str.replace(/ /g, '').toLowerCase();\n\n  // Color keywords (and transparent) lookup.\n  if (str in kCSSColorTable) return kCSSColorTable[str].slice();  // dup.\n\n  // #abc and #abc123 syntax.\n  if (str[0] === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xfff)) return null;  // Covers NaN.\n      return [((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n              (iv & 0xf0) | ((iv & 0xf0) >> 4),\n              (iv & 0xf) | ((iv & 0xf) << 4),\n              1];\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xffffff)) return null;  // Covers NaN.\n      return [(iv & 0xff0000) >> 16,\n              (iv & 0xff00) >> 8,\n              iv & 0xff,\n              1];\n    }\n\n    return null;\n  }\n\n  var op = str.indexOf('('), ep = str.indexOf(')');\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op+1, ep-(op+1)).split(',');\n    var alpha = 1;  // To allow case fallthrough.\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'rgb':\n        if (params.length !== 3) return null;\n        return [parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha];\n      case 'hsla':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'hsl':\n        if (params.length !== 3) return null;\n        var h = (((parseFloat(params[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parse_css_float(params[1]);\n        var l = parse_css_float(params[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n        return [clamp_css_byte(css_hue_to_rgb(m1, m2, h+1/3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h-1/3) * 255),\n                alpha];\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\ntry { exports.parseCSSColor = parseCSSColor } catch(e) { }\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var fontWeights = {\n  thin: 100,\n  hairline: 100,\n  'ultra-light': 100,\n  'extra-light': 100,\n  light: 200,\n  book: 300,\n  regular: 400,\n  normal: 400,\n  plain: 400,\n  roman: 400,\n  standard: 400,\n  medium: 500,\n  'semi-bold': 600,\n  'demi-bold': 600,\n  bold: 700,\n  heavy: 800,\n  black: 800,\n  'extra-bold': 800,\n  'ultra-black': 900,\n  'extra-black': 900,\n  'ultra-bold': 900,\n  'heavy-black': 900,\n  fat: 900,\n  poster: 900\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\n\nvar fontCache = {};\n\nmodule.exports = function(fonts, size, lineHeight) {\n  var cssData = fontCache[fonts];\n  if (!cssData) {\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    var weight = 400;\n    var style = 'normal';\n    var fontFamilies = [];\n    var haveWeight, haveStyle;\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n      var font = fonts[i];\n      var parts = font.split(' ');\n      var maybeWeight = parts[parts.length - 1].toLowerCase();\n      if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n        style = haveStyle ? style : maybeWeight;\n        parts.pop();\n        maybeWeight = parts[parts.length - 1].toLowerCase();\n      } else if (italicRE.test(maybeWeight)) {\n        maybeWeight = maybeWeight.replace(italicRE, '');\n        style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n      }\n      for (var w in fontWeights) {\n        var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n        if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n          weight = haveWeight ? weight : fontWeights[w];\n          parts.pop();\n          if (previousPart && w.startsWith(previousPart)) {\n            parts.pop();\n          }\n          break;\n        }\n      }\n      if (!haveWeight && typeof maybeWeight == 'number') {\n        weight = maybeWeight;\n      }\n      var fontFamily = parts.join(sp)\n        .replace('Klokantech Noto Sans', 'Noto Sans');\n      if (fontFamily.indexOf(sp) !== -1) {\n        fontFamily = '\"' + fontFamily + '\"';\n      }\n      fontFamilies.push(fontFamily);\n    }\n    // CSS font property: font-style font-weight font-size/line-height font-family\n    cssData = fontCache[fonts] = [style, weight, fontFamilies];\n  }\n  return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n};\n","module.exports = assert\n\nclass AssertionError extends Error {}\nAssertionError.prototype.name = 'AssertionError'\n\n/**\n * Minimal assert function\n * @param  {any} t Value to check if falsy\n * @param  {string=} m Optional assertion error message\n * @throws {AssertionError}\n */\nfunction assert (t, m) {\n  if (!t) {\n    var err = new AssertionError(m)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, assert)\n    throw err\n  }\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image.decode().then(() => resolve(image), reject)\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image.decode().then(() => createImageBitmap(image))\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`'\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`'\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`'\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue'\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`'\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`'\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/color\n */\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    throw new Error('Invalid color');\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`'\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), options);\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number'\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/expr/expression\n */\n\nimport {ascending} from '../array.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Number: 'number',\n  String: 'string',\n  Get: 'get',\n  Var: 'var',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Expression} Parser\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Number]: createParser(withArgs(1, Infinity, AnyType), NumberType),\n  [Ops.String]: createParser(withArgs(1, Infinity, AnyType), StringType),\n  [Ops.Get]: createParser(withGetArgs, AnyType),\n  [Ops.Var]: createParser(withVarArgs, AnyType),\n  [Ops.Resolution]: createParser(withNoArgs, NumberType),\n  [Ops.Any]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.All]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.Not]: createParser(withArgs(1, 1, BooleanType), BooleanType),\n  [Ops.Equal]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.NotEqual]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    withArgs(2, 2, AnyType),\n    BooleanType\n  ),\n  [Ops.LessThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.LessThanOrEqualTo]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.Multiply]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Divide]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Add]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Subtract]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Clamp]: createParser(withArgs(3, 3, NumberType), NumberType),\n  [Ops.Mod]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Pow]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Abs]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Floor]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Ceil]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Round]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Sin]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Cos]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Atan]: createParser(withArgs(1, 2, NumberType), NumberType),\n  [Ops.Sqrt]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Match]: createParser(\n    withArgs(4, Infinity, StringType | NumberType),\n    AnyType\n  ),\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Array<Expression>} ArgValidator\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for get operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for var operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for var operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.variables.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgs(minArgs, maxArgs, argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for operation ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      throw new Error(\n        `Expected ${minArgs} to ${maxArgs} arguments for operation ${operation}, got ${argCount}`\n      );\n    }\n\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            ` : got ${gotType} but expected ${expectedType}`\n        );\n      }\n      args[i] = expression;\n    }\n\n    return args;\n  };\n}\n\n/**\n * @param {ArgValidator} argValidator The argument validator.\n * @param {number} returnType The return type.\n * @return {Parser} The parser.\n */\nfunction createParser(argValidator, returnType) {\n  return function (encoded, context) {\n    const operator = encoded[0];\n    const args = argValidator(encoded, context);\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context);\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = expression.args[0];\n  if (!(nameExpression instanceof LiteralExpression)) {\n    throw new Error('Expected literal name');\n  }\n  const name = nameExpression.value;\n  if (typeof name !== 'string') {\n    throw new Error('Expected string name');\n  }\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    for (let i = 0; i < length; ++i) {\n      styles[i] = evaluators[i](evaluationContext);\n    }\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`'\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.'\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    if (declutter) {\n      tile.declutterExecutorGroups[layerUid] = [];\n    }\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        builderExtent,\n        resolution,\n        pixelRatio\n      );\n      const declutterBuilderGroup = declutter\n        ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n        : undefined;\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutterBuilderGroup\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer()\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n      if (declutterBuilderGroup) {\n        const declutterExecutorGroup = new CanvasExecutorGroup(\n          null,\n          resolution,\n          pixelRatio,\n          source.getOverlaps(),\n          declutterBuilderGroup.finish(),\n          layer.getRenderBuffer()\n        );\n        tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n      }\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n      if (declutterExecutorGroups) {\n        executorGroups.push(declutterExecutorGroups);\n      }\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures =\n          executorGroups === declutterExecutorGroups\n            ? frameState.declutterTree.all().map((item) => item.value)\n            : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice()\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile\n        .getSourceTiles()\n        .reduce(function (accumulator, sourceTile) {\n          return accumulator.concat(sourceTile.getFeatures());\n        }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection)\n          )\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.getLayer().getOpacity();\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const declutterExecutorGroups =\n        tile.declutterExecutorGroups[getUid(this.getLayer())];\n      if (declutterExecutorGroups) {\n        for (let j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n          declutterExecutorGroups[j].execute(\n            this.context,\n            1,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            undefined,\n            frameState.declutterTree\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset\n      )\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layer.getOpacity();\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes)\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      if (currentClip) {\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]]\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          1,\n          transform,\n          rotation,\n          hifi,\n          replayTypes\n        );\n      }\n      if (contextSaved) {\n        context.restore();\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder group for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio)\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        renderScale,\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()]\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [options] Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Object} */ (Object.assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(\n      /** @type {import(\"./BaseVector.js\").Options<import(\"../source/VectorTile.js\").default>} */ (\n        baseOptions\n      )\n    );\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    assert(\n      renderMode == 'hybrid' || renderMode == 'vector',\n      \"`renderMode` must be `'hybrid'` or `'vector'`\"\n    );\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source'\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n * @param {string} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time'\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided'\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`'\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`'\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '8.1.0';\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|Array<Array<number>>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return 2;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {import(\"../geom/Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n  /**\n   * @return {Array<number>|Array<Array<number>>} Ends or endss.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n}\n\nRenderFeature.prototype.getEndss = RenderFeature.prototype.getEnds;\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","//      \n\nimport {parseCSSColor} from 'csscolorparser';\n\n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n              \n              \n              \n              \n\n    constructor(r        , g        , b        , a         = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n                        \n                        \n                              \n                      \n                       \n\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input                        )               {\n        if (!input) {\n            return undefined;\n        }\n\n        if (input instanceof Color) {\n            return input;\n        }\n\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n\n        const rgba = parseCSSColor(input);\n        if (!rgba) {\n            return undefined;\n        }\n\n        return new Color(\n            rgba[0] / 255 * rgba[3],\n            rgba[1] / 255 * rgba[3],\n            rgba[2] / 255 * rgba[3],\n            rgba[3]\n        );\n    }\n\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString()         {\n        const [r, g, b, a] = this.toArray();\n        return `rgba(${Math.round(r)},${Math.round(g)},${Math.round(b)},${a})`;\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 255].\n     */\n    toArray()                                   {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r * 255 / a,\n            g * 255 / a,\n            b * 255 / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns a RGBA array of float values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01()                                   {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r / a,\n            g / a,\n            b / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, premultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01PremultipliedAlpha()                                   {\n        const {r, g, b, a} = this;\n        return [\n            r,\n            g,\n            b,\n            a\n        ];\n    }\n}\n\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\n\nexport default Color;\n","//      \n\nimport assert from 'assert';\n\n                                                                 \n                                                         \n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\n\nexport default function convertFunction(parameters     , propertySpec                            )                          {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\n\nfunction convertIdentityFunction(parameters, propertySpec)               {\n    const get = ['get', parameters.property];\n\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\n\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl': return 'interpolate-hcl';\n    case 'lab': return 'interpolate-lab';\n    default: return 'interpolate';\n    }\n}\n\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n\n        return expression;\n    } else {\n        const expression = ['step', ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n\n        fixupDegenerateStepCurve(expression);\n\n        return expression;\n    }\n}\n\nfunction coalesce(a, b) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n}\n\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\n\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        assert(parameters.stops.length > 0 && parameters.stops.length <= 2);\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? [\"linear\"] : [\"exponential\", base],\n            [\"number\", get]\n        ];\n\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\n\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? [\"linear\"] : [\"exponential\", base], input];\n\n    } else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n\n    fixupDegenerateStepCurve(expression);\n\n    return expression;\n}\n\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\n\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\n\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        assert(propertySpec.expression);\n        return (propertySpec.expression     ).interpolated ? 'exponential' : 'interval';\n    }\n}\n\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nexport function convertTokenString(s        )                                   {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0) result.push(literal);\n        result.push(['get', match[1]]);\n    }\n\n    if (result.length === 1) {\n        return s;\n    }\n\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n\n    return result;\n}\n\n","//      \n\nclass ParsingError extends Error {\n                \n                    \n    constructor(key        , message        ) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\nexport default ParsingError;\n","//      \n\n                                                \n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n                   \n                                        \n    constructor(parent        , bindings                              = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n\n    concat(bindings                             )        {\n        return new Scope(this, bindings);\n    }\n\n    get(name        )             {\n        if (this.bindings[name]) { return this.bindings[name]; }\n        if (this.parent) { return this.parent.get(name); }\n        throw new Error(`${name} not found in scope.`);\n    }\n\n    has(name        )          {\n        if (this.bindings[name]) return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nexport default Scope;\n","//      \n\n                                         \n                                             \n                                             \n                                               \n                                           \n                                             \n                                           \n                                           \n                                                 \n                                                   \n                                                           \n\n                                                                            \n\n                  \n               \n                 \n                 \n                  \n                \n                 \n                \n                                                           \n                \n                   \n                    \n                      \n\n                         \n                  \n                   \n              \n \n\n                                                                                      \n\nexport const NullType = {kind: 'null'};\nexport const NumberType = {kind: 'number'};\nexport const StringType = {kind: 'string'};\nexport const BooleanType = {kind: 'boolean'};\nexport const ColorType = {kind: 'color'};\nexport const ObjectType = {kind: 'object'};\nexport const ValueType = {kind: 'value'};\nexport const ErrorType = {kind: 'error'};\nexport const CollatorType = {kind: 'collator'};\nexport const FormattedType = {kind: 'formatted'};\nexport const ResolvedImageType = {kind: 'resolvedImage'};\n\nexport function array(itemType      , N         )            {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\n\nexport function toString(type      )         {\n    if (type.kind === 'array') {\n        const itemType = toString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    } else {\n        return type.kind;\n    }\n}\n\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    ResolvedImageType\n];\n\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nexport function checkSubtype(expected      , t      )          {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n\n    return `Expected ${toString(expected)} but found ${toString(t)} instead.`;\n}\n\nexport function isValidType(provided      , allowedTypes             )          {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\n\nexport function isValidNativeType(provided     , allowedTypes                   )          {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n","//      \n\n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\n\n                   \n                                  \n  \n\n                             \n                 \n                                    \n                                 \n                     \n\n            \n                                    \n                                 \n                     \n\n                                           \n\n                           \n \n\n                        \n                                          \n                              \n                                                         \n                                \n                      \n                                           \n \n\nexport default class Collator {\n                          \n                                                        \n                            \n\n    constructor(caseSensitive         , diacriticSensitive         , locale               ) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [],\n            {sensitivity: this.sensitivity, usage: 'search'});\n    }\n\n    compare(lhs        , rhs        )         {\n        return this.collator.compare(lhs, rhs);\n    }\n\n    resolvedLocale()         {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n","//      \n                                             \n                                                            \n\nexport class FormattedSection {\n                 \n                                \n                         \n                             \n                            \n\n    constructor(text        , image                      , scale               , fontStack               , textColor              ) {\n        // combine characters so that diacritic marks are not separate code points\n        this.text = text.normalize ? text.normalize() : text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\n\nexport default class Formatted {\n                                      \n\n    constructor(sections                         ) {\n        this.sections = sections;\n    }\n\n    static fromString(unformatted        )            {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n\n    isEmpty()          {\n        if (this.sections.length === 0) return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n                                             (section.image && section.image.name.length !== 0));\n    }\n\n    static factory(text                    )            {\n        if (text instanceof Formatted) {\n            return text;\n        } else {\n            return Formatted.fromString(text);\n        }\n    }\n\n    toString()         {\n        if (this.sections.length === 0) return '';\n        return this.sections.map(section => section.text).join('');\n    }\n\n    serialize()               {\n        const serialized               = [\"format\"];\n        for (const section of this.sections) {\n            if (section.image) {\n                serialized.push([\"image\", section.image.name]);\n                continue;\n            }\n            serialized.push(section.text);\n            const options                           = {};\n            if (section.fontStack) {\n                options[\"text-font\"] = [\"literal\", section.fontStack.split(',')];\n            }\n            if (section.scale) {\n                options[\"font-scale\"] = section.scale;\n            }\n            if (section.textColor) {\n                options[\"text-color\"] = ([\"rgba\"]              ).concat(section.textColor.toArray());\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","//      \n\n                                    \n                 \n                      \n  \n\nexport default class ResolvedImage {\n                 \n                       \n\n    constructor(options                      ) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n\n    toString()         {\n        return this.name;\n    }\n\n    static fromString(name        )                       {\n        if (!name) return null; // treat empty values as no image\n        return new ResolvedImage({name, available: false});\n    }\n\n    serialize()                {\n        return [\"image\", this.name];\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport Color from '../util/color.js';\nimport Collator from './types/collator.js';\nimport Formatted from './types/formatted.js';\nimport ResolvedImage from './types/resolved_image.js';\nimport {NullType, NumberType, StringType, BooleanType, ColorType, ObjectType, ValueType, CollatorType, FormattedType, ResolvedImageType, array} from './types.js';\n\n                                     \n\nexport function validateRGBA(r       , g       , b       , a        )                {\n    if (!(\n        typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255\n    )) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n\n    if (!(\n        typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1)\n    )) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n\n    return null;\n}\n\n                                                                                                                                                  \n\nexport function isValue(mixed       )          {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color) {\n        return true;\n    } else if (mixed instanceof Collator) {\n        return true;\n    } else if (mixed instanceof Formatted) {\n        return true;\n    } else if (mixed instanceof ResolvedImage) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function typeOf(value       )       {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType                         ;\n\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n\n        return array(itemType || ValueType, length);\n    } else {\n        assert(typeof value === 'object');\n        return ObjectType;\n    }\n}\n\nexport function toString(value       )         {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color || value instanceof Formatted || value instanceof ResolvedImage) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nexport {Color, Collator};\n","//      \n\nimport assert from 'assert';\nimport {isValue, typeOf, Color} from '../values.js';\nimport Formatted from '../types/formatted.js';\n\n                                      \n                                         \n                                                                       \n                                                        \n\nclass Literal                       {\n               \n                 \n\n    constructor(type      , value       ) {\n        this.type = type;\n        this.value = value;\n    }\n\n    static parse(args                       , context                )                 {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n\n        if (!isValue(args[1]))\n            return context.error(`invalid value`);\n\n        const value = (args[1]     );\n        let type = typeOf(value);\n\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (\n            type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)\n        ) {\n            type = expected;\n        }\n\n        return new Literal(type, value);\n    }\n\n    evaluate()        {\n        return this.value;\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return [\"literal\", this.value];\n        } else if (this.value instanceof Color) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return [\"rgba\"].concat(this.value.toArray());\n        } else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        } else {\n            assert(this.value === null ||\n                typeof this.value === 'string' ||\n                typeof this.value === 'number' ||\n                typeof this.value === 'boolean');\n            return (this.value     );\n        }\n    }\n}\n\nexport default Literal;\n","//      \n\nclass RuntimeError {\n                 \n                    \n\n    constructor(message        ) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n\n    toJSON()         {\n        return this.message;\n    }\n}\n\nexport default RuntimeError;\n","//      \n\nimport assert from 'assert';\n\nimport {\n    ObjectType,\n    ValueType,\n    StringType,\n    NumberType,\n    BooleanType,\n    checkSubtype,\n    toString,\n    array\n} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nconst types = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\n\nclass Assertion                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        let i = 1;\n        let type;\n\n        const name         = (args[0]     );\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))\n                ) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n\n            type = array(itemType, N);\n        } else {\n            assert(types[name], name);\n            type = types[name];\n        }\n\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Assertion(type, parsed);\n    }\n\n    evaluate(ctx                   )             {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${toString(this.type)}, but found ${toString(typeOf(value))} instead.`);\n            }\n        }\n\n        assert(false);\n        return null;\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' ||\n                itemType.kind === 'number' ||\n                itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    serialized.push(N);\n                }\n            }\n        }\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\n\nexport default Assertion;\n","//      \n\nimport {NumberType, ValueType, FormattedType, array, StringType, ColorType, ResolvedImageType} from '../types.js';\nimport Formatted, {FormattedSection} from '../types/formatted.js';\nimport {toString, typeOf} from '../values.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\n                                   \n                                                            \n                                                        \n                        \n                             \n                            \n                                 \n \n\nexport default class FormatExpression                       {\n               \n                                                \n\n    constructor(sections                                   ) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2) {\n            return context.error(`Expected at least one argument.`);\n        }\n\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object')  {\n            return context.error(`First argument must be an image or text section.`);\n        }\n\n        const sections                                    = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = (args[i]     );\n\n            if (nextTokenMayBeObject && typeof arg === \"object\" && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale) return null;\n                }\n\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font) return null;\n                }\n\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor) return null;\n                }\n\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n            } else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content) return null;\n\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error(`Formatted text type must be 'string', 'value', 'image' or 'null'.`);\n\n                nextTokenMayBeObject = true;\n                sections.push({content, scale: null, font: null, textColor: null});\n            }\n        }\n\n        return new FormatExpression(sections);\n    }\n\n    evaluate(ctx                   )            {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n\n            return new FormattedSection(\n                    toString(evaluatedContent),\n                    null,\n                    section.scale ? section.scale.evaluate(ctx) : null,\n                    section.font ? section.font.evaluate(ctx).join(',') : null,\n                    section.textColor ? section.textColor.evaluate(ctx) : null\n            );\n        };\n\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n\n    eachChild(fn                         ) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n\n    outputDefined()          {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n\n    serialize()                       {\n        const serialized = [\"format\"];\n        for (const section of this.sections) {\n            serialized.push(section.content.serialize());\n            const options = {};\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            if (section.textColor) {\n                options['text-color'] = section.textColor.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","//      \n\nimport {ResolvedImageType, StringType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\nexport default class ImageExpression                       {\n               \n                      \n\n    constructor(input            ) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 2) {\n            return context.error(`Expected two arguments.`);\n        }\n\n        const name = context.parse(args[1], 1, StringType);\n        if (!name) return context.error(`No image name provided.`);\n\n        return new ImageExpression(name);\n    }\n\n    evaluate(ctx                   )                       {\n        const evaluatedImageName = this.input.evaluate(ctx);\n\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages) value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n\n        return value;\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n\n    serialize()                       {\n        return [\"image\", this.input.serialize()];\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport {BooleanType, ColorType, NumberType, StringType, ValueType} from '../types.js';\nimport {Color, toString as valueToString, validateRGBA} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\nimport Formatted from '../types/formatted.js';\nimport FormatExpression from '../definitions/format.js';\nimport ImageExpression from '../definitions/image.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        const name         = (args[0]     );\n        assert(types[name], name);\n\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const type = types[name];\n\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Coercion(type, parsed);\n    }\n\n    evaluate(ctx                   )                                                                       {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        } else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color) {\n                    return input;\n                } else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c) return c;\n                } else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                    } else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        return new Color((input[0]     ) / 255, (input[1]     ) / 255, (input[2]     ) / 255, (input[3]     ));\n                    }\n                }\n            }\n            throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : String(JSON.stringify(input))}'`);\n        } else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                value = arg.evaluate(ctx);\n                if (value === null) return 0;\n                const num = Number(value);\n                if (isNaN(num)) continue;\n                return num;\n            }\n            throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n        } else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'resolvedImage') {\n            return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else {\n            return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{content: this.args[0], scale: null, font: null, textColor: null}]).serialize();\n        }\n\n        if (this.type.kind === 'resolvedImage') {\n            return new ImageExpression(this.args[0]).serialize();\n        }\n\n        const serialized = [`to-${this.type.kind}`];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coercion;\n","//      \n\nimport {Color} from './values.js';\n\n                                                \n                                                           \n                                                                        \n                                                             \n                                                                    \n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nclass EvaluationContext {\n                              \n                      \n                                \n                                        \n                                    \n                                      \n                             \n                                              \n\n                                            \n\n    constructor() {\n        this.globals = (null     );\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n        this.featureTileCoord = null;\n        this.featureDistanceData = null;\n    }\n\n    id()                {\n        return this.feature && this.feature.id !== undefined ? this.feature.id : null;\n    }\n\n    geometryType()                {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n\n    geometry()                       {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n\n    canonicalID()                         {\n        return this.canonical;\n    }\n\n    properties()                  {\n        return (this.feature && this.feature.properties) || {};\n    }\n\n    distanceFromCenter()         {\n        if (this.featureTileCoord && this.featureDistanceData) {\n\n            const c = this.featureDistanceData.center;\n            const scale = this.featureDistanceData.scale;\n            const {x, y} = this.featureTileCoord;\n\n            // Calculate the distance vector `d` (left handed)\n            const dX = x * scale - c[0];\n            const dY = y * scale - c[1];\n\n            // The bearing vector `b` (left handed)\n            const bX = this.featureDistanceData.bearing[0];\n            const bY = this.featureDistanceData.bearing[1];\n\n            // Distance is calculated as `dot(d, v)`\n            const dist = (bX * dX + bY * dY);\n            return dist;\n        }\n\n        return 0;\n    }\n\n    parseColor(input        )         {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input);\n        }\n        return cached;\n    }\n}\n\nexport default EvaluationContext;\n","//      \n\nimport {toString} from './types.js';\n\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport assert from 'assert';\n\n                                                                    \n                                     \n                                       \n\n                                       \n                                       \n                                                                \n                                               \n                                                            \n\nclass CompoundExpression                       {\n                 \n               \n                        \n                            \n\n                                                   \n\n    constructor(name        , type      , evaluate          , args                   ) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n\n    evaluate(ctx                   )        {\n        return this._evaluate(ctx, this.args);\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()               {\n        return [this.name].concat(this.args.map(arg => arg.serialize()));\n    }\n\n    static parse(args                       , context                )              {\n        const op         = (args[0]     );\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n\n        const overloads = availableOverloads.filter(([signature]) => (\n            !Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n\n        let signatureContext                 = (null     );\n\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, context.path, null, context.scope);\n\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs                    = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n\n        assert(!signatureContext || signatureContext.errors.length > 0);\n\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params))\n                .join(' | ');\n\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed) return null;\n                actualTypes.push(toString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n\n        return null;\n    }\n\n    static register(\n        registry                    ,\n        definitions                            \n    ) {\n        assert(!CompoundExpression.definitions);\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\n\nfunction stringifySignature(signature           )         {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(toString).join(', ')})`;\n    } else {\n        return `(${toString(signature.type)}...)`;\n    }\n}\n\nexport default CompoundExpression;\n","//      \n\nimport {StringType, BooleanType, CollatorType} from '../types.js';\nimport Collator from '../types/collator.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\nexport default class CollatorExpression                       {\n               \n                              \n                                   \n                              \n\n    constructor(caseSensitive            , diacriticSensitive            , locale                   ) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const options = (args[1]     );\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`Collator options argument must be an object.`);\n\n        const caseSensitive = context.parse(\n            options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive) return null;\n\n        const diacriticSensitive = context.parse(\n            options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive) return null;\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n\n    evaluate(ctx                   )           {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n\n    outputDefined()          {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n\n    serialize()                       {\n        const options = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return [\"collator\", options];\n    }\n}\n","//      \n\nimport {isValue} from '../values.js';\n                                      \nimport {BooleanType} from '../types.js';\n                                                                       \n                                                        \n                                                              \n                                                                                        \n                                                                \n\n                                                             \n\n// minX, minY, maxX, maxY\n                                             \nconst EXTENT = 8192;\n\nfunction updateBBox(bbox      , coord                  ) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\n\nfunction mercatorXfromLng(lng        ) {\n    return (180 + lng) / 360;\n}\n\nfunction mercatorYfromLat(lat        ) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\n\nfunction boxWithinBox(bbox1      , bbox2      ) {\n    if (bbox1[0] <= bbox2[0]) return false;\n    if (bbox1[2] >= bbox2[2]) return false;\n    if (bbox1[1] <= bbox2[1]) return false;\n    if (bbox1[3] >= bbox2[3]) return false;\n    return true;\n}\n\nfunction getTileCoordinates(p, canonical                 ) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\n\nfunction onBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\n\nfunction rayIntersect(p, p1, p2) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\n\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings) {\n    let inside = false;\n    for (let i = 0, len = rings.length; i < len; i++) {\n        const ring = rings[i];\n        for (let j = 0, len2 = ring.length; j < len2 - 1; j++) {\n            if (onBoundary(point, ring[j], ring[j + 1])) return false;\n            if (rayIntersect(point, ring[j], ring[j + 1])) inside = !inside;\n        }\n    }\n    return inside;\n}\n\nfunction pointWithinPolygons(point, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction perp(v1, v2) {\n    return (v1[0] * v2[1] - v1[1] * v2[0]);\n}\n\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction  twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = (x1 * y3 - x3 * y1);\n    const det2 =  (x2 * y3 - x3 * y2);\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0)) return true;\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction lineIntersectLine(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0) return false;\n\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b)) return true;\n    return false;\n}\n\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (lineIntersectLine(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (let i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction lineStringWithinPolygons(line, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction getTilePolygon(coordinates, bbox      , canonical                 ) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\n\nfunction getTilePolygons(coordinates, bbox, canonical                 ) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\n\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\n\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\n\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical                 ) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints = [];\n    if (!geometry) return tilePoints;\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\n\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical                 ) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines = [];\n    if (!geometry) return tileLines;\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\n\nfunction pointsWithinPolygons(ctx                   , polygonGeometry                 ) {\n    const pointBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons)) return false;\n        }\n    }\n\n    return true;\n}\n\nfunction linesWithinPolygons(ctx                   , polygonGeometry                 ) {\n    const lineBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons)) return false;\n        }\n    }\n    return true;\n}\n\nclass Within                       {\n               \n                    \n                                \n\n    constructor(geojson         , geometries                 ) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n\n    static parse(args                       , context                )          {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = (args[1]        );\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    const type = geojson.features[i].geometry.type;\n                    if (type === 'Polygon' || type === 'MultiPolygon') {\n                        return new Within(geojson, geojson.features[i].geometry);\n                    }\n                }\n            } else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            } else if (geojson.type  === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error(`'within' expression requires valid geojson object that contains polygon geometry type.`);\n    }\n\n    evaluate(ctx                   )          {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        return [\"within\", this.geojson];\n    }\n\n}\n\nexport default Within;\n","//      \n\nimport CompoundExpression from './compound_expression.js';\nimport Within from './definitions/within.js';\n                                                \n\nfunction isFeatureConstant(e            )          {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (\n            e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id'\n        ) {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n\n    if (e instanceof Within) {\n        return false;\n    }\n\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isStateConstant(e            )          {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isGlobalPropertyConstant(e            , properties               )          {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) { return false; }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) { result = false; }\n    });\n    return result;\n}\n\nexport {isFeatureConstant, isGlobalPropertyConstant, isStateConstant};\n","//      \n\n                                      \n                                                 \n                                                        \n                                                               \n\nclass Var                       {\n               \n                 \n                                \n\n    constructor(name        , boundExpression            ) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n\n    static parse(args                       , context                )             {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error(`'var' expression requires exactly one string literal argument.`);\n\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n\n        return new Var(name, context.scope.get(name));\n    }\n\n    evaluate(ctx                   )      {\n        return this.boundExpression.evaluate(ctx);\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                {\n        return [\"var\", this.name];\n    }\n}\n\nexport default Var;\n","//      \n\nimport Scope from './scope.js';\nimport {checkSubtype} from './types.js';\nimport ParsingError from './parsing_error.js';\nimport Literal from './definitions/literal.js';\nimport Assertion from './definitions/assertion.js';\nimport Coercion from './definitions/coercion.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport CollatorExpression from './definitions/collator.js';\nimport Within from './definitions/within.js';\nimport {isGlobalPropertyConstant, isFeatureConstant} from './is_constant.js';\nimport Var from './definitions/var.js';\n\n                                                                    \n                                     \n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n                                 \n                        \n                \n                 \n                                \n\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n                        \n\n    constructor(\n        registry                    ,\n        path                = [],\n        expectedType       ,\n        scope        = new Scope(),\n        errors                      = []\n    ) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n    }\n\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(\n        expr       ,\n        index         ,\n        expectedType        ,\n        bindings                              ,\n        options                                                  = {}\n    )              {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n\n    _parse(expr       , options                                                 )              {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n\n        function annotate(parsed, type, typeAnnotation                              ) {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n            }\n\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed) return null;\n\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n\n                return parsed;\n            }\n\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        } else if (typeof expr === 'undefined') {\n            return this.error(`'undefined' value invalid. Use null instead.`);\n        } else if (typeof expr === 'object') {\n            return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n        } else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index        , expectedType        , bindings                              )                 {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(\n            this.registry,\n            path,\n            expectedType || null,\n            scope,\n            this.errors\n        );\n    }\n\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error        , ...keys               ) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ParsingError(key, error));\n    }\n\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected      , t      )          {\n        const error = checkSubtype(expected, t);\n        if (error) this.error(error);\n        return error;\n    }\n}\n\nexport default ParsingContext;\n\nfunction isConstant(expression            ) {\n    if (expression instanceof Var) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    } else if (expression instanceof Within) {\n        return false;\n    }\n\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'line-progress', 'sky-radial-progress', 'accumulated', 'is-supported-script', 'pitch', 'distance-from-center']);\n}\n","//      \n\nimport RuntimeError from './runtime_error.js';\n\n                                                \n\n                                                \n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nexport function findStopLessThanOrEqualTo(stops               , input        )         {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n\n    return 0;\n}\n","//      \n\nimport {NumberType} from '../types.js';\n\nimport {findStopLessThanOrEqualTo} from '../stops.js';\n\n                                       \n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Step                       {\n               \n\n                      \n                          \n                               \n\n    constructor(type      , input            , stops       ) {\n        this.type = type;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static parse(args                       , context                )        {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input) return null;\n\n        const stops        = [];\n\n        let outputType       = (null     );\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n\n            const labelKey = i;\n            const valueKey = i + 1;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        return new Step(outputType, input, stops);\n    }\n\n    evaluate(ctx                   )      {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx)     )        );\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize()                       {\n        const serialized = [\"step\", this.input.serialize()];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n\nexport default Step;\n","//      \n\nimport Color from './color.js';\n\nexport function number(a        , b        , t        )         {\n    return (a * (1 - t)) + (b * t);\n}\n\nexport function color(from       , to       , t        )        {\n    return new Color(\n        number(from.r, to.r, t),\n        number(from.g, to.g, t),\n        number(from.b, to.b, t),\n        number(from.a, to.a, t)\n    );\n}\n\nexport function array(from               , to               , t        )                {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n","//      \n\nimport Color from './color.js';\n\nimport {number as interpolateNumber} from './interpolate.js';\n\n                 \n              \n              \n              \n                 \n  \n\n                 \n              \n              \n              \n                 \n  \n\n// Constants\nconst Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1,\n    deg2rad = Math.PI / 180,\n    rad2deg = 180 / Math.PI;\n\n// Utilities\nfunction xyz2lab(t        ) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t        ) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x        ) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x        ) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\n// LAB\nfunction rgbToLab(rgbColor       )           {\n    const b = rgb2xyz(rgbColor.r),\n        a = rgb2xyz(rgbColor.g),\n        l = rgb2xyz(rgbColor.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\n\nfunction labToRgb(labColor          )        {\n    let y = (labColor.l + 16) / 116,\n        x = isNaN(labColor.a) ? y : y + labColor.a / 500,\n        z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color(\n        xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        labColor.alpha\n    );\n}\n\nfunction interpolateLab(from          , to          , t        )           {\n    return {\n        l: interpolateNumber(from.l, to.l, t),\n        a: interpolateNumber(from.a, to.a, t),\n        b: interpolateNumber(from.b, to.b, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\n// HCL\nfunction rgbToHcl(rgbColor       )           {\n    const {l, a, b} = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\n\nfunction hclToRgb(hclColor          )        {\n    const h = hclColor.h * deg2rad,\n        c = hclColor.c,\n        l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\n\nfunction interpolateHue(a        , b        , t        ) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\n\nfunction interpolateHcl(from          , to          , t        )           {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: interpolateNumber(from.c, to.c, t),\n        l: interpolateNumber(from.l, to.l, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\nexport const lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\n\nexport const hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n","//      \n\nimport UnitBezier from '@mapbox/unitbezier';\n\nimport * as interpolate from '../../util/interpolate.js';\nimport {toString, NumberType, ColorType} from '../types.js';\nimport {findStopLessThanOrEqualTo} from '../stops.js';\nimport {hcl, lab} from '../../util/color_spaces.js';\nimport Color from '../../util/color.js';\n\n                                       \n                                                                       \n                                                        \n                                                              \n                                      \n\n                               \n                        \n                                           \n                                                                              \n\nclass Interpolate                       {\n               \n\n                                                                    \n                                     \n                      \n                          \n                               \n\n    constructor(type      , operator                                                       , interpolation                   , input            , stops       ) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static interpolationFactor(interpolation                   , input        , lower        , upper        )         {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n\n    static parse(args                       , context                )               {\n        let [operator, interpolation, input, ...rest] = args;\n\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error(`Expected an interpolation type expression.`, 1);\n        }\n\n        if (interpolation[0] === 'linear') {\n            interpolation = {name: 'linear'};\n        } else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (\n                controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)\n            ) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: (controlPoints     )\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        input = context.parse(input, 2, NumberType);\n        if (!input) return null;\n\n        const stops        = [];\n\n        let outputType       = (null     );\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        if (outputType.kind !== 'number' &&\n            outputType.kind !== 'color' &&\n            !(\n                outputType.kind === 'array' &&\n                outputType.itemType.kind === 'number' &&\n                typeof outputType.N === 'number'\n            )\n        ) {\n            return context.error(`Type ${toString(outputType)} is not interpolatable.`);\n        }\n\n        return new Interpolate(outputType, (operator     ), interpolation, input, stops);\n    }\n\n    evaluate(ctx                   )        {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx)     )        );\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n\n        if (this.operator === 'interpolate') {\n            return (interpolate[this.type.kind.toLowerCase()]     )(outputLower, outputUpper, t); // eslint-disable-line import/namespace\n        } else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        } else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize()                       {\n        let interpolation;\n        if (this.interpolation.name === 'linear') {\n            interpolation = [\"linear\"];\n        } else if (this.interpolation.name === 'exponential') {\n            if  (this.interpolation.base === 1) {\n                interpolation = [\"linear\"];\n            } else {\n                interpolation = [\"exponential\", this.interpolation.base];\n            }\n        } else {\n            interpolation = [\"cubic-bezier\" ].concat(this.interpolation.controlPoints);\n        }\n\n        const serialized = [this.operator, interpolation, this.input.serialize()];\n\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(\n                this.labels[i],\n                this.outputs[i].serialize()\n            );\n        }\n        return serialized;\n    }\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nexport default Interpolate;\n","//      \n\nimport assert from 'assert';\n\nimport {checkSubtype, ValueType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Coalesce                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )            {\n        if (args.length < 2) {\n            return context.error(\"Expectected at least one argument.\");\n        }\n        let outputType       = (null     );\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, {typeAnnotation: 'omit'});\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        assert(outputType);\n\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce((outputType     ), parsedArgs);\n    }\n\n    evaluate(ctx                   )             {\n        let result = null;\n        let argCount = 0;\n        let firstImage;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                // set to first image\n                if (!firstImage) {\n                    firstImage = result;\n                }\n                result = null;\n                // if we reach the end, return the first image\n                if (argCount === this.args.length) {\n                    return firstImage;\n                }\n            }\n\n            if (result !== null) break;\n        }\n        return result;\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        const serialized = [\"coalesce\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coalesce;\n","//      \n\n                                      \n                                                                       \n                                                        \n                                                               \n\nclass Let                       {\n               \n                                          \n                       \n\n    constructor(bindings                             , result            ) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n\n    evaluate(ctx                   )      {\n        return this.result.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n\n    static parse(args                       , context                )       {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n\n        const bindings                              = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n            }\n\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value) return null;\n\n            bindings.push([name, value]);\n        }\n\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result) return null;\n\n        return new Let(bindings, result);\n    }\n\n    outputDefined()          {\n        return this.result.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"let\"];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\n\nexport default Let;\n","//      \n\nimport {array, ValueType, NumberType} from '../types.js';\n\nimport RuntimeError from '../runtime_error.js';\n\n                                                                       \n                                                        \n                                                              \n                                                 \n                                        \n\nclass At                       {\n               \n                      \n                      \n\n    constructor(type      , index            , input            ) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )      {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n\n        if (!index || !input) return null;\n\n        const t            = (input.type     );\n        return new At(t.itemType, index, input);\n    }\n\n    evaluate(ctx                   )        {\n        const index = ((this.index.evaluate(ctx)     )        );\n        const array = ((this.input.evaluate(ctx)     )              );\n\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n\n        return array[index];\n    }\n\n    eachChild(fn                         ) {\n        fn(this.index);\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        return [\"at\", this.index.serialize(), this.input.serialize()];\n    }\n}\n\nexport default At;\n","//      \n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass In                       {\n               \n                       \n                         \n\n    constructor(needle            , haystack            ) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n\n    static parse(args                       , context                )      {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        return new In(needle, haystack);\n    }\n\n    evaluate(ctx                   )          {\n        const needle = (this.needle.evaluate(ctx)     );\n        const haystack = (this.haystack.evaluate(ctx)     );\n\n        if (haystack == null) return false;\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        return haystack.indexOf(needle) >= 0;\n    }\n\n    eachChild(fn                         ) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        return [\"in\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default In;\n","//      \n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass IndexOf                       {\n               \n                       \n                         \n                           \n\n    constructor(needle            , haystack            , fromIndex             ) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n\n    static parse(args                       , context                )           {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex) return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        } else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n\n    evaluate(ctx                   )      {\n        const needle = (this.needle.evaluate(ctx)     );\n        const haystack = (this.haystack.evaluate(ctx)     );\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        if (this.fromIndex) {\n            const fromIndex = (this.fromIndex.evaluate(ctx)        );\n            return haystack.indexOf(needle, fromIndex);\n        }\n\n        return haystack.indexOf(needle);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        if (this.fromIndex != null && this.fromIndex !== undefined) {\n            const fromIndex = this.fromIndex.serialize();\n            return [\"index-of\", this.needle.serialize(), this.haystack.serialize(), fromIndex];\n        }\n        return [\"index-of\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default IndexOf;\n","//      \n\nimport assert from 'assert';\n\nimport {typeOf} from '../values.js';\nimport {ValueType,          } from '../types.js';\n\n                                                                       \n                                                        \n                                                              \n\n// Map input label values to output expression index\n                                         \n\nclass Match                       {\n               \n                    \n\n                      \n                 \n                               \n                          \n\n    constructor(inputType      , outputType      , input            , cases       , outputs                   , otherwise            ) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args                       , context                )         {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error(`Expected an even number of arguments.`);\n\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error(`Branch labels must be numbers or strings.`);\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error(`Numeric branch labels must be integer values.`);\n\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n\n                cases[String(label)] = outputs.length;\n            }\n\n            const result = context.parse(value, i, outputType);\n            if (!result) return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input) return null;\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(inputType && outputType);\n\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype((inputType     ), input.type)) {\n            return null;\n        }\n\n        return new Match((inputType     ), (outputType     ), input, cases, outputs, otherwise);\n    }\n\n    evaluate(ctx                   )      {\n        const input = (this.input.evaluate(ctx)     );\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"match\", this.input.serialize()];\n\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput                                          = [];\n        const outputLookup                            = {}; // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([this.cases[label], [label]]);\n            } else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n\n        const coerceLabel = (label) => this.inputType.kind === 'number' ? Number(label) : label;\n\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            } else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\n\nexport default Match;\n","//      \n\nimport assert from 'assert';\n\nimport {BooleanType} from '../types.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\n                                                \n\nclass Case                       {\n               \n\n                       \n                          \n\n    constructor(type      , branches          , otherwise            ) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args                       , context                )        {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error(`Expected an odd number of arguments.`);\n\n        let outputType       ;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test) return null;\n\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result) return null;\n\n            branches.push([test, result]);\n\n            outputType = outputType || result.type;\n        }\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(outputType);\n        return new Case((outputType     ), branches, otherwise);\n    }\n\n    evaluate(ctx                   )      {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n\n    outputDefined()          {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"case\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Case;\n","//      \n\nimport {ValueType, NumberType, StringType, array, toString, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Slice                       {\n               \n                      \n                           \n                          \n\n    constructor(type      , input            , beginIndex            , endIndex             ) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n\n    }\n\n    static parse(args                       , context                )         {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n\n        if (!input || !beginIndex) return null;\n\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${toString(input.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex) return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        } else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n\n    evaluate(ctx                   )      {\n        const input = (this.input.evaluate(ctx)     );\n        const beginIndex = (this.beginIndex.evaluate(ctx)        );\n\n        if (!isValidNativeType(input, ['string', 'array'])) {\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${toString(typeOf(input))} instead.`);\n        }\n\n        if (this.endIndex) {\n            const endIndex = (this.endIndex.evaluate(ctx)        );\n            return input.slice(beginIndex, endIndex);\n        }\n\n        return input.slice(beginIndex);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        if (this.endIndex != null && this.endIndex !== undefined) {\n            const endIndex = this.endIndex.serialize();\n            return [\"slice\", this.input.serialize(), this.beginIndex.serialize(), endIndex];\n        }\n        return [\"slice\", this.input.serialize(), this.beginIndex.serialize()];\n    }\n}\n\nexport default Slice;\n","//      \n\nimport {toString, ValueType, BooleanType, CollatorType} from '../types.js';\nimport Assertion from './assertion.js';\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\n                                                                                               \n                                                              \n                                                        \n                                      \n\n                                                                 \n\nfunction isComparableType(op                    , type      ) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\n\nfunction eq(ctx                   , a     , b     )          { return a === b; }\nfunction neq(ctx                   , a     , b     )          { return a !== b; }\nfunction lt(ctx                   , a     , b     )          { return a < b; }\nfunction gt(ctx                   , a     , b     )          { return a > b; }\nfunction lteq(ctx                   , a     , b     )          { return a <= b; }\nfunction gteq(ctx                   , a     , b     )          { return a >= b; }\n\nfunction eqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx                   , a     , b     , c     )          { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) >= 0; }\n\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op                    , compareBasic                                          , compareWithCollator                                               )                         {\n    const isOrderComparison = op !== '==' && op !== '!=';\n\n    return class Comparison                       {\n                   \n                        \n                        \n                              \n                                    \n\n        constructor(lhs            , rhs            , collator             ) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n\n        static parse(args                       , context                )              {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error(`Expected two or three arguments.`);\n\n            const op                     = (args[0]     );\n\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs) return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${toString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs) return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${toString(rhs.type)}'.`);\n            }\n\n            if (\n                lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value'\n            ) {\n                return context.error(`Cannot compare types '${toString(lhs.type)}' and '${toString(rhs.type)}'.`);\n            }\n\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n\n            let collator = null;\n            if (args.length === 4) {\n                if (\n                    lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value'\n                ) {\n                    return context.error(`Cannot use collator to compare non-string types.`);\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator) return null;\n            }\n\n            return new Comparison(lhs, rhs, collator);\n        }\n\n        evaluate(ctx                   )          {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n\n        eachChild(fn                         ) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n\n        outputDefined()          {\n            return true;\n        }\n\n        serialize()                       {\n            const serialized = [op];\n            this.eachChild(child => { serialized.push(child.serialize()); });\n            return serialized;\n        }\n    };\n}\n\nexport const Equals                                                                  = makeComparison('==', eq, eqCollate);\nexport const NotEquals                                                                    = makeComparison('!=', neq, neqCollate);\nexport const LessThan                                                                 = makeComparison('<', lt, ltCollate);\nexport const GreaterThan                                                                 = makeComparison('>', gt, gtCollate);\nexport const LessThanOrEqual                                                                      = makeComparison('<=', lteq, lteqCollate);\nexport const GreaterThanOrEqual                                                                      = makeComparison('>=', gteq, gteqCollate);\n","//      \n\nimport {StringType, NumberType} from '../types.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\n                   \n                                          \n  \n\n                                 \n                 \n                                    \n                                     \n                         \n\n            \n                                    \n                                     \n                         \n\n                              \n\n                           \n \n\n                            \n                                                        \n                             \n                         \n                                          \n                                          \n  \n\nexport default class NumberFormat                       {\n               \n                       \n                                 // BCP 47 language tag\n                                 // ISO 4217 currency code, required if style=currency\n                                 // Simple units sanctioned for use in ECMAScript, required if style=unit. https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier\n                                          // Default 0\n                                          // Default 3\n\n    constructor(number            ,\n                locale                   ,\n                currency                   ,\n                unit                   ,\n                minFractionDigits                   ,\n                maxFractionDigits                   ) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.unit = unit;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 3)\n            return context.error(`Expected two arguments.`);\n\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number) return null;\n\n        const options = (args[2]     );\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`NumberFormat options argument must be an object.`);\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency) return null;\n        }\n\n        let unit = null;\n        if (options['unit']) {\n            unit = context.parse(options['unit'], 1, StringType);\n            if (!unit) return null;\n        }\n\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits) return null;\n        }\n\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits) return null;\n        }\n\n        return new NumberFormat(number, locale, currency, unit, minFractionDigits, maxFractionDigits);\n    }\n\n    evaluate(ctx                   )         {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [],\n            {\n                style:\n                    (this.currency && \"currency\") ||\n                    (this.unit && \"unit\") ||\n                    \"decimal\",\n                currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n                unit: this.unit ? this.unit.evaluate(ctx) : undefined,\n                minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n                maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n            }).format(this.number.evaluate(ctx));\n    }\n\n    eachChild(fn                         ) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.unit) {\n            fn(this.unit);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        const options = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.unit) {\n            options['unit'] = this.unit.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return [\"number-format\", this.number.serialize(), options];\n    }\n}\n","//      \n\nimport {NumberType, toString} from '../types.js';\n\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Length                       {\n               \n                      \n\n    constructor(input            ) {\n        this.type = NumberType;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )          {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n\n        const input = context.parse(args[1], 1);\n        if (!input) return null;\n\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${toString(input.type)} instead.`);\n\n        return new Length(input);\n    }\n\n    evaluate(ctx                   )               {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${toString(typeOf(input))} instead.`);\n        }\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        const serialized = [\"length\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Length;\n","//      \n\nimport {\n              \n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ObjectType,\n    ValueType,\n    ErrorType,\n    CollatorType,\n    array,\n    toString as typeToString\n} from '../types.js';\n\nimport {typeOf, Color, validateRGBA, toString as valueToString} from '../values.js';\nimport CompoundExpression from '../compound_expression.js';\nimport RuntimeError from '../runtime_error.js';\nimport Let from './let.js';\nimport Var from './var.js';\nimport Literal from './literal.js';\nimport Assertion from './assertion.js';\nimport Coercion from './coercion.js';\nimport At from './at.js';\nimport In from './in.js';\nimport IndexOf from './index_of.js';\nimport Match from './match.js';\nimport Case from './case.js';\nimport Slice from './slice.js';\nimport Step from './step.js';\nimport Interpolate from './interpolate.js';\nimport Coalesce from './coalesce.js';\nimport {\n    Equals,\n    NotEquals,\n    LessThan,\n    GreaterThan,\n    LessThanOrEqual,\n    GreaterThanOrEqual\n} from './comparison.js';\nimport CollatorExpression from './collator.js';\nimport NumberFormat from './number_format.js';\nimport FormatExpression from './format.js';\nimport ImageExpression from './image.js';\nimport Length from './length.js';\nimport Within from './within.js';\n\n                                                       \n                                                         \n\nconst expressions                     = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'index-of': IndexOf,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'slice': Slice,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var,\n    'within': Within\n};\n\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error) throw new RuntimeError(error);\n    return new Color(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\n\nfunction has(key, obj) {\n    return key in obj;\n}\n\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\n\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\n\nfunction varargs(type      )          {\n    return {type};\n}\n\nCompoundExpression.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'pitch': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.pitch || 0\n    ],\n    'distance-from-center': [\n        NumberType,\n        [],\n        (ctx) => ctx.distanceFromCenter()\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'sky-radial-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.skyRadialProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[(k     ).value] === (v     ).value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === (v     ).value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === (v     ).value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => (k     ).value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => (v     ).value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => (v     ).value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => (v     ).value.indexOf(ctx.properties()[(k     ).value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[(k     ).value], (v     ).value, 0, (v     ).value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\n\nexport default expressions;\n","//      \n\n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\n                          \n                                       \n                                      \n\nexport function success      (value   )               {\n    return {result: 'success', value};\n}\n\nexport function error      (value   )               {\n    return {result: 'error', value};\n}\n","\nimport * as colorSpaces from '../util/color_spaces.js';\nimport Color from '../util/color.js';\nimport extend from '../util/extend.js';\nimport getType from '../util/get_type.js';\nimport * as interpolate from '../util/interpolate.js';\nimport Interpolate from '../expression/definitions/interpolate.js';\nimport Formatted from '../expression/types/formatted.js';\nimport ResolvedImage from '../expression/types/resolved_image.js';\nimport {supportsInterpolation} from '../util/properties.js';\nimport {findStopLessThanOrEqualTo} from '../expression/stops.js';\n\nexport function isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nfunction identityFunction(x) {\n    return x;\n}\n\nexport function createFunction(parameters, propertySpec) {\n    const isColor = propertySpec.type === 'color';\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n\n    if (isColor) {\n        parameters = extend({}, parameters);\n\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], Color.parse(stop[1])];\n            });\n        }\n\n        if (parameters.default) {\n            parameters.default = Color.parse(parameters.default);\n        } else {\n            parameters.default = Color.parse(propertySpec.default);\n        }\n    }\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb' && !colorSpaces[parameters.colorSpace]) { // eslint-disable-line import/namespace\n        throw new Error(`Unknown color space: ${parameters.colorSpace}`);\n    }\n\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    } else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    } else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n\n    } else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    } else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n\n        const interpolationType = {name: 'linear'};\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({zoom}, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    } else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            {name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1} : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({zoom}) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    } else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\n\nfunction coalesce(a, b, c) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n    if (c !== undefined) return c;\n}\n\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce(evaluated, parameters.default, propertySpec.default);\n}\n\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n\n    return parameters.stops[index][1];\n}\n\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(\n        input, base,\n        parameters.stops[index][0],\n        parameters.stops[index + 1][0]);\n\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    let interp = interpolate[propertySpec.type] || identityFunction; // eslint-disable-line import/namespace\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb') {\n        const colorspace = colorSpaces[parameters.colorSpace]; // eslint-disable-line import/namespace\n        interp = (a, b) => colorspace.reverse(colorspace.interpolate(colorspace.forward(a), colorspace.forward(b), t));\n    }\n\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t);\n            }\n        };\n    }\n\n    return interp(outputLower, outputUpper, t);\n}\n\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    if (propertySpec.type === 'color') {\n        input = Color.parse(input);\n    } else if (propertySpec.type === 'formatted') {\n        input = Formatted.fromString(input.toString());\n    } else if (propertySpec.type === 'resolvedImage') {\n        input = ResolvedImage.fromString(input.toString());\n    } else if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n        input = undefined;\n    }\n    return coalesce(input, parameters.default, propertySpec.default);\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport extend from '../util/extend.js';\nimport ParsingError from './parsing_error.js';\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport Step from './definitions/step.js';\nimport Interpolate from './definitions/interpolate.js';\nimport Coalesce from './definitions/coalesce.js';\nimport Let from './definitions/let.js';\nimport definitions from './definitions/index.js';\nimport * as isConstant from './is_constant.js';\nimport RuntimeError from './runtime_error.js';\nimport {success, error} from '../util/result.js';\nimport {supportsPropertyExpression, supportsZoomExpression, supportsInterpolation} from '../util/properties.js';\n\n                                                     \n                                       \n                                                \n                                                                 \n                                              \n                                                                    \n                                                            \n                                                           \n                                                \n                                                             \n                                                                    \n\n                       \n                                                                      \n                        \n                                    \n                                      \n                                   \n  \n\n                                              \n\n                                          \n                 \n                   \n                            \n                          \n                               \n                                               \n                       \n   \n\nexport class StyleExpression {\n                           \n\n                                  \n                         \n                                              \n                                     \n\n    constructor(expression            , propertySpec                             ) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   , featureTileCoord        , featureDistanceData                      )      {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        return this.expression.evaluate(this._evaluator);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   , featureTileCoord        , featureDistanceData                      )      {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        } catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\n\nexport function isExpression(expression       )          {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in definitions;\n}\n\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nexport function createExpression(expression       , propertySpec                             )                                               {\n    const parser = new ParsingContext(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined,\n        propertySpec && propertySpec.type === 'string' ? {typeAnnotation: 'coerce'} : undefined);\n\n    if (!parsed) {\n        assert(parser.errors.length > 0);\n        return error(parser.errors);\n    }\n\n    return success(new StyleExpression(parsed, propertySpec));\n}\n\nexport class ZoomConstantExpression                       {\n               \n                              \n                                      \n\n    constructor(kind      , expression                 ) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('constant'                ) && !isConstant.isStateConstant(expression.expression);\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\n\nexport class ZoomDependentExpression                       {\n               \n                             \n                              \n\n                                      \n                                          \n\n    constructor(kind      , expression                 , zoomStops               , interpolationType                    ) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('camera'                ) && !isConstant.isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    interpolationFactor(input        , lower        , upper        )         {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\n\n                                  \n                     \n                                                                                                                                                                \n \n\n                                \n                   \n                              \n                                                                                                                                                                                                     \n  \n\n                                \n                   \n                                                                                                                                                                \n                                                                                  \n                             \n                                         \n  \n\n                                   \n                      \n                              \n                                                                                                                                                                                                     \n                                                                                  \n                             \n                                         \n  \n\n                                     \n                        \n                      \n                      \n                          \n\nexport function createPropertyExpression(expression       , propertySpec                            )                                                       {\n    expression = createExpression(expression, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n\n    const parsed = expression.value.expression;\n\n    const isFeatureConstant = isConstant.isFeatureConstant(parsed);\n    if (!isFeatureConstant && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError('', 'data expressions not supported')]);\n    }\n\n    const isZoomConstant = isConstant.isGlobalPropertyConstant(parsed, ['zoom', 'pitch', 'distance-from-center']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError('', 'zoom expressions not supported')]);\n    }\n\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ParsingError) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n\n    if (!zoomCurve) {\n        return success(isFeatureConstant ?\n            (new ZoomConstantExpression('constant', expression.value)                    ) :\n            (new ZoomConstantExpression('source', expression.value)                  ));\n    }\n\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n\n    return success(isFeatureConstant ?\n        (new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType)                  ) :\n        (new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType)                     ));\n}\n\nimport {isFunction, createFunction} from '../function/index.js';\nimport {Color} from './values.js';\n\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nexport class StylePropertyFunction    {\n                                               \n                                               \n\n                         \n                                                                    \n                                                                                  \n                              \n\n    constructor(parameters                               , specification                            ) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extend(this, createFunction(this._parameters, this._specification));\n    }\n\n    static deserialize(serialized                                                                                          )                           {\n        return new StylePropertyFunction(serialized._parameters, serialized._specification);\n    }\n\n    static serialize(input                          )                                                                                           {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\n\nexport function normalizePropertyExpression   (value                               , specification                            )                          {\n    if (isFunction(value)) {\n        return (new StylePropertyFunction(value, specification)     );\n\n    } else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n\n    } else {\n        let constant      = value;\n        if (typeof value === 'string' && specification.type === 'color') {\n            constant = Color.parse(value);\n        }\n        return {\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression            )                                           {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n\n    } else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n\n    } else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n\n        result = expression;\n    }\n\n    if (result instanceof ParsingError) {\n        return result;\n    }\n\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n\n    return result;\n}\n\nimport {ColorType, StringType, NumberType, BooleanType, ValueType, FormattedType, ResolvedImageType, array} from './types.js';\n\nfunction getExpectedType(spec                            )       {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n\n    return types[spec.type];\n}\n\nfunction getDefaultValue(spec                            )        {\n    if (spec.type === 'color' && (isFunction(spec.default) || Array.isArray(spec.default))) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n","//      \n\n                                                                 \n\nexport function supportsPropertyExpression(spec                            )          {\n    return spec['property-type'] === 'data-driven';\n}\n\nexport function supportsZoomExpression(spec                            )          {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\n\nexport function supportsInterpolation(spec                            )          {\n    return !!spec.expression && spec.expression.interpolated;\n}\n","//      \n\n// Turn jsonlint-lines-primitives objects into primitive objects\nexport function unbundle(value       )        {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\n\nexport function deepUnbundle(value       )        {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue                           = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n\n    return unbundle(value);\n}\n","//      \n\nimport spec from './v8.json';\n\n                                         \n\nexport default spec;\n","//      \n\nimport {createExpression} from '../expression/index.js';\nimport {isFeatureConstant} from '../expression/is_constant.js';\nimport {deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport latest from '../reference/latest.js';\n                                                                      \n                                                             \n                                                \n\n                                                                                                       \n                                                                                                                                                                                                   \n                                                                                                                                      \n\nexport default createFilter;\nexport {isExpressionFilter, isDynamicFilter, extractStaticFilter};\n\nfunction isExpressionFilter(filter     )          {\n    if (filter === true || filter === false) {\n        return true;\n    }\n\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n\n    case 'in':\n        return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n\n    case 'any':\n    case 'all':\n        for (const f of filter.slice(1)) {\n            if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n\n    default:\n        return true;\n    }\n}\n\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @param {string} layerType the type of the layer this filter will be applied to.\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter     , layerType          = 'fill')                {\n    if (filter === null || filter === undefined) {\n        return {filter: () => true, needGeometry: false, needFeature: false};\n    }\n\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n    const filterExp = ((filter     )                             );\n\n    let staticFilter = true;\n    try {\n        staticFilter = extractStaticFilter(filterExp);\n    } catch (e) {\n        console.warn(\n`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\nand paste the contents of this message in the report.\nThank you!\nFilter Expression:\n${JSON.stringify(filterExp, null, 2)}\n        `);\n    }\n\n    // Compile the static component of the filter\n    const filterSpec = latest[`filter_${layerType}`];\n    const compiledStaticFilter = createExpression(staticFilter, filterSpec);\n\n    let filterFunc = null;\n    if (compiledStaticFilter.result === 'error') {\n        throw new Error(compiledStaticFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    } else {\n        filterFunc = (globalProperties                  , feature         , canonical                  ) => compiledStaticFilter.value.evaluate(globalProperties, feature, {}, canonical);\n    }\n\n    // If the static component is not equal to the entire filter then we have a dynamic component\n    // Compile the dynamic component separately\n    let dynamicFilterFunc = null;\n    let needFeature = null;\n    if (staticFilter !== filterExp) {\n        const compiledDynamicFilter = createExpression(filterExp, filterSpec);\n\n        if (compiledDynamicFilter.result === 'error') {\n            throw new Error(compiledDynamicFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        } else {\n            dynamicFilterFunc = (globalProperties                  , feature         , canonical                  , featureTileCoord        , featureDistanceData                      ) => compiledDynamicFilter.value.evaluate(globalProperties, feature, {}, canonical, undefined, undefined, featureTileCoord, featureDistanceData);\n            needFeature = !isFeatureConstant(compiledDynamicFilter.value.expression);\n        }\n    }\n\n    filterFunc = ((filterFunc     )                  );\n    const needGeometry = geometryNeeded(staticFilter);\n\n    return {\n        filter: filterFunc,\n        dynamicFilter: dynamicFilterFunc ? dynamicFilterFunc : undefined,\n        needGeometry,\n        needFeature: !!needFeature\n    };\n}\n\nfunction extractStaticFilter(filter     )      {\n    if (!isDynamicFilter(filter)) {\n        return filter;\n    }\n\n    // Shallow copy so we can replace expressions in-place\n    let result = deepUnbundle(filter);\n\n    // 1. Union branches\n    unionDynamicBranches(result);\n\n    // 2. Collapse dynamic conditions to  `true`\n    result = collapseDynamicBooleanExpressions(result);\n\n    return result;\n}\n\nfunction collapseDynamicBooleanExpressions(expression     )      {\n    if (!Array.isArray(expression)) {\n        return expression;\n    }\n\n    const collapsed = collapsedExpression(expression);\n    if (collapsed === true) {\n        return collapsed;\n    } else {\n        return collapsed.map((subExpression) => collapseDynamicBooleanExpressions(subExpression));\n    }\n}\n\n/**\n * Traverses the expression and replaces all instances of branching on a\n * `dynamic` conditional (such as `['pitch']` or `['distance-from-center']`)\n * into an `any` expression.\n * This ensures that all possible outcomes of a `dynamic` branch are considered\n * when evaluating the expression upfront during filtering.\n *\n * @param {Array<any>} filter the filter expression mutated in-place.\n */\nfunction unionDynamicBranches(filter     ) {\n    let isBranchingDynamically = false;\n    const branches = [];\n\n    if (filter[0] === 'case') {\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[i]);\n            branches.push(filter[i + 1]);\n        }\n\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'match') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 2; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'step') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n    }\n\n    if (isBranchingDynamically) {\n        filter.length = 0;\n        filter.push('any', ...branches);\n    }\n\n    // traverse and recurse into children\n    for (let i = 1; i < filter.length; i++) {\n        unionDynamicBranches(filter[i]);\n    }\n}\n\nfunction isDynamicFilter(filter     )          {\n    // Base Cases\n    if (!Array.isArray(filter)) {\n        return false;\n    }\n    if (isRootExpressionDynamic(filter[0])) {\n        return true;\n    }\n\n    for (let i = 1; i < filter.length; i++) {\n        const child = filter[i];\n        if (isDynamicFilter(child)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isRootExpressionDynamic(expression        )          {\n    return expression === 'pitch' ||\n        expression === 'distance-from-center';\n}\n\nconst dynamicConditionExpressions = new Set([\n    'in',\n    '==',\n    '!=',\n    '>',\n    '>=',\n    '<',\n    '<=',\n    'to-boolean'\n]);\n\nfunction collapsedExpression(expression     )      {\n    if (dynamicConditionExpressions.has(expression[0])) {\n\n        for (let i = 1; i < expression.length; i++) {\n            const param = expression[i];\n            if (isDynamicFilter(param)) {\n                return true;\n            }\n        }\n    }\n    return expression;\n}\n\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter)) return false;\n    if (filter[0] === 'within') return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index])) return true;\n    }\n    return false;\n}\n\nfunction convertFilter(filter             )        {\n    if (!filter) return true;\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n    const converted =\n        op === '==' ? convertComparisonOp(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) :\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>=' ? convertComparisonOp(filter[1], filter[2], op) :\n        op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n        op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) :\n        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) :\n        op === 'in' ? convertInOp(filter[1], filter.slice(2)) :\n        op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) :\n        op === 'has' ? convertHasOp(filter[1]) :\n        op === '!has' ? convertNegation(convertHasOp(filter[1])) :\n        op === 'within' ? filter :\n        true;\n    return converted;\n}\n\nfunction convertComparisonOp(property        , value     , op        ) {\n    switch (property) {\n    case '$type':\n        return [`filter-type-${op}`, value];\n    case '$id':\n        return [`filter-id-${op}`, value];\n    default:\n        return [`filter-${op}`, property, value];\n    }\n}\n\nfunction convertDisjunctionOp(filters                   ) {\n    return ['any'].concat(filters.map(convertFilter));\n}\n\nfunction convertInOp(property        , values            ) {\n    if (values.length === 0) { return false; }\n    switch (property) {\n    case '$type':\n        return [`filter-type-in`, ['literal', values]];\n    case '$id':\n        return [`filter-id-in`, ['literal', values]];\n    default:\n        if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n            return ['filter-in-large', property, ['literal', values.sort(compare)]];\n        } else {\n            return ['filter-in-small', property, ['literal', values]];\n        }\n    }\n}\n\nfunction convertHasOp(property        ) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [`filter-has-id`];\n    default:\n        return [`filter-has`, property];\n    }\n}\n\nfunction convertNegation(filter       ) {\n    return ['!', filter];\n}\n","//      \nexport default ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n","//      \n\nimport refProperties from './util/ref_properties.js';\n\n                                                   \n\nfunction deref(layer                    , parent                    )                     {\n    const result = {};\n\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            result[k] = (parent     )[k];\n        }\n    });\n\n    return ((result     )                    );\n}\n\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nexport default function derefLayers(layers                           )                            {\n    layers = layers.slice();\n\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[(layers[i]     ).ref]);\n        }\n    }\n\n    return layers;\n}\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(\n            range,\n            'The {-y} placeholder requires a tile grid with extent'\n          );\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","const mapboxBaseUrl = 'https://api.mapbox.com';\n\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nexport function getMapboxPath(url) {\n  const startsWith = 'mapbox://';\n  if (url.indexOf(startsWith) !== 0) {\n    return '';\n  }\n  return url.slice(startsWith.length);\n}\n\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeSpriteUrl(url, token, styleUrl) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, styleUrl).href);\n  }\n  const startsWith = 'sprites/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected sprites url: ${url}`);\n  }\n  const sprite = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${sprite}/sprite?access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeStyleUrl(url, token) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, location.href).href);\n  }\n  const startsWith = 'styles/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected style url: ${url}`);\n  }\n  const style = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${style}?&access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {string} A vector tile template.\n * @private\n */\nexport function normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n  const urlObject = new URL(url, styleUrl);\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    if (!token) {\n      return decodeURI(urlObject.href);\n    }\n    urlObject.searchParams.set(tokenParam, token);\n    return decodeURI(urlObject.href);\n  }\n\n  if (mapboxPath === 'mapbox.satellite') {\n    const sizeFactor = window.devicePixelRatio >= 1.5 ? '@2x' : '';\n    return `https://api.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}${sizeFactor}.webp?access_token=${token}`;\n  }\n  return `https://{a-d}.tiles.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}.vector.pbf?access_token=${token}`;\n}\n","import TileState from 'ol/TileState.js';\nimport {VectorTile} from 'ol';\nimport {expandUrl} from 'ol/tileurlfunction.js';\nimport {getUid} from 'ol/util.js';\nimport {normalizeSourceUrl, normalizeStyleUrl} from './mapbox.js';\n\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n\n/** @typedef {import(\"ol\").Map} Map */\n/** @typedef {import(\"ol/layer\").Layer} Layer */\n/** @typedef {import(\"ol/layer\").Group} LayerGroup */\n/** @typedef {import(\"ol/layer\").Vector} VectorLayer */\n/** @typedef {import(\"ol/layer\").VectorTile} VectorTileLayer */\n/** @typedef {import(\"ol/source\").Source} Source */\n\nconst functionCacheByStyleId = {};\nconst filterCacheByStyleId = {};\n\nlet styleId = 0;\nexport function getStyleId(glStyle) {\n  if (!glStyle.id) {\n    glStyle.id = styleId++;\n  }\n  return glStyle.id;\n}\n\nexport function getStyleFunctionKey(glStyle, olLayer) {\n  return getStyleId(glStyle) + '.' + getUid(olLayer);\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nexport function getFunctionCache(glStyle) {\n  let functionCache = functionCacheByStyleId[glStyle.id];\n  if (!functionCache) {\n    functionCache = {};\n    functionCacheByStyleId[getStyleId(glStyle)] = functionCache;\n  }\n  return functionCache;\n}\n\nexport function clearFunctionCache() {\n  for (const key in functionCacheByStyleId) {\n    delete functionCacheByStyleId[key];\n  }\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nexport function getFilterCache(glStyle) {\n  let filterCache = filterCacheByStyleId[glStyle.id];\n  if (!filterCache) {\n    filterCache = {};\n    filterCacheByStyleId[getStyleId(glStyle)] = filterCache;\n  }\n  return filterCache;\n}\n\nexport function deg2rad(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\nexport const defaultResolutions = (function () {\n  const resolutions = [];\n  for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n    resolutions.push(res);\n  }\n  return resolutions;\n})();\n\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nexport function createCanvas(width, height) {\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') { // eslint-disable-line\n    return /** @type {?} */ (new OffscreenCanvas(width, height));\n  }\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n\nexport function getZoomForResolution(resolution, resolutions) {\n  let i = 0;\n  const ii = resolutions.length;\n  for (; i < ii; ++i) {\n    const candidate = resolutions[i];\n    if (candidate < resolution && i + 1 < ii) {\n      const zoomFactor = resolutions[i] / resolutions[i + 1];\n      return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n    }\n  }\n  return ii - 1;\n}\n\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options={}] Options.\n * @param {{request?: Request}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nexport function fetchResource(resourceType, url, options = {}, metadata) {\n  if (url in pendingRequests) {\n    if (metadata) {\n      metadata.request = pendingRequests[url][0];\n    }\n    return pendingRequests[url][1];\n  }\n  let transformedRequest = options.transformRequest\n    ? options.transformRequest(url, resourceType) || url\n    : url;\n  if (!(transformedRequest instanceof Request)) {\n    transformedRequest = new Request(transformedRequest);\n  }\n  if (!transformedRequest.headers.get('Accept')) {\n    transformedRequest.headers.set('Accept', 'application/json');\n  }\n  if (metadata) {\n    metadata.request = transformedRequest;\n  }\n  const pendingRequest = fetch(transformedRequest)\n    .then(function (response) {\n      delete pendingRequests[url];\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Error fetching source ' + url));\n    })\n    .catch(function (error) {\n      delete pendingRequests[url];\n      return Promise.reject(new Error('Error fetching source ' + url));\n    });\n  pendingRequests[url] = [transformedRequest, pendingRequest];\n  return pendingRequest;\n}\n\nexport function getGlStyle(glStyleOrUrl, options) {\n  if (typeof glStyleOrUrl === 'string') {\n    if (glStyleOrUrl.trim().startsWith('{')) {\n      try {\n        const glStyle = JSON.parse(glStyleOrUrl);\n        return Promise.resolve(glStyle);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    } else {\n      glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n      return fetchResource('Style', glStyleOrUrl, options);\n    }\n  } else {\n    return Promise.resolve(glStyleOrUrl);\n  }\n}\n\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise<{tileJson: Object, tileLoadFunction: import('ol/Tile.js').LoadFunction}?>} TileJson and load function\n */\nexport function getTileJson(glSource, styleUrl, options = {}) {\n  const cacheKey = [styleUrl, JSON.stringify(glSource)].toString();\n  let promise = tilejsonCache[cacheKey];\n  if (!promise || options.transformRequest) {\n    let tileLoadFunction;\n    if (options.transformRequest) {\n      tileLoadFunction = (tile, src) => {\n        const transformedRequest = options.transformRequest\n          ? options.transformRequest(src, 'Tiles') || src\n          : src;\n        if (tile instanceof VectorTile) {\n          tile.setLoader((extent, resolution, projection) => {\n            fetch(transformedRequest)\n              .then((response) => response.arrayBuffer())\n              .then((data) => {\n                const format = tile.getFormat();\n                const features = format.readFeatures(data, {\n                  extent: extent,\n                  featureProjection: projection,\n                });\n                // @ts-ignore\n                tile.setFeatures(features);\n              })\n              .catch((e) => tile.setState(TileState.ERROR));\n          });\n        } else {\n          const img = tile.getImage();\n          if (transformedRequest instanceof Request) {\n            fetch(transformedRequest)\n              .then((response) => response.blob())\n              .then((blob) => {\n                const url = URL.createObjectURL(blob);\n                img.addEventListener('load', () => URL.revokeObjectURL(url));\n                img.addEventListener('error', () => URL.revokeObjectURL(url));\n                img.src = url;\n              })\n              .catch((e) => tile.setState(TileState.ERROR));\n          } else {\n            img.src = transformedRequest;\n          }\n        }\n      };\n    }\n    const url = glSource.url;\n    if (url && !glSource.tiles) {\n      const normalizedSourceUrl = normalizeSourceUrl(\n        url,\n        options.accessToken,\n        options.accessTokenParam || 'access_token',\n        styleUrl || location.href\n      );\n      if (url.startsWith('mapbox://')) {\n        promise = Promise.resolve({\n          tileJson: Object.assign({}, glSource, {\n            url: undefined,\n            tiles: expandUrl(normalizedSourceUrl),\n          }),\n          tileLoadFunction,\n        });\n      } else {\n        const metadata = {};\n        promise = fetchResource(\n          'Source',\n          normalizedSourceUrl,\n          options,\n          metadata\n        ).then(function (tileJson) {\n          tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n            if (tileJson.scheme === 'tms') {\n              tileUrl = tileUrl.replace('{y}', '{-y}');\n            }\n            return normalizeSourceUrl(\n              tileUrl,\n              options.accessToken,\n              options.accessTokenParam || 'access_token',\n              metadata.request.url\n            );\n          });\n          return Promise.resolve({tileJson, tileLoadFunction});\n        });\n      }\n    } else {\n      glSource = Object.assign({}, glSource, {\n        tiles: glSource.tiles.map(function (tileUrl) {\n          if (glSource.scheme === 'tms') {\n            tileUrl = tileUrl.replace('{y}', '{-y}');\n          }\n          return normalizeSourceUrl(\n            tileUrl,\n            options.accessToken,\n            options.accessTokenParam || 'access_token',\n            styleUrl || location.href\n          );\n        }),\n      });\n      promise = Promise.resolve({\n        tileJson: Object.assign({}, glSource),\n        tileLoadFunction,\n      });\n    }\n    tilejsonCache[cacheKey] = promise;\n  }\n  return promise;\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nexport function drawIconHalo(\n  spriteImage,\n  spriteImageData,\n  haloWidth,\n  haloColor\n) {\n  const imageCanvas = document.createElement('canvas');\n  const imgSize = [\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width,\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height,\n  ];\n  imageCanvas.width = imgSize[0];\n  imageCanvas.height = imgSize[1];\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    spriteImage,\n    spriteImageData.x,\n    spriteImageData.y,\n    spriteImageData.width,\n    spriteImageData.height,\n    haloWidth * spriteImageData.pixelRatio,\n    haloWidth * spriteImageData.pixelRatio,\n    spriteImageData.width,\n    spriteImageData.height\n  );\n  const imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n  imageContext.globalCompositeOperation = 'destination-over';\n  imageContext.fillStyle = `rgba(${haloColor.r * 255},${haloColor.g * 255},${\n    haloColor.b * 255\n  },${haloColor.a})`;\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const alpha = data[index + 3];\n      if (alpha > 0) {\n        imageContext.arc(\n          i,\n          j,\n          haloWidth * spriteImageData.pixelRatio,\n          0,\n          2 * Math.PI\n        );\n      }\n    }\n  }\n  imageContext.fill();\n  return imageCanvas;\n}\n\nfunction smoothstep(min, max, value) {\n  const x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n  return x * x * (3 - 2 * x);\n}\n\n/**\n * @param {HTMLImageElement} image SDF image\n * @param {{x: number, y: number, width: number, height: number}} area Area to unSDF\n * @param {{r: number, g: number, b: number, a: number}} color Color to use\n * @return {HTMLCanvasElement} Regular image\n */\nexport function drawSDF(image, area, color) {\n  const imageCanvas = document.createElement('canvas');\n  imageCanvas.width = area.width;\n  imageCanvas.height = area.height;\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    image,\n    area.x,\n    area.y,\n    area.width,\n    area.height,\n    0,\n    0,\n    area.width,\n    area.height\n  );\n  const imageData = imageContext.getImageData(0, 0, area.width, area.height);\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const dist = data[index + 3] / 255;\n\n      const buffer = 0.75;\n      const gamma = 0.1;\n\n      const alpha = smoothstep(buffer - gamma, buffer + gamma, dist);\n      if (alpha > 0) {\n        data[index + 0] = Math.round(255 * color.r * alpha);\n        data[index + 1] = Math.round(255 * color.g * alpha);\n        data[index + 2] = Math.round(255 * color.b * alpha);\n        data[index + 3] = Math.round(255 * alpha);\n      } else {\n        data[index + 3] = 0;\n      }\n    }\n  }\n  imageContext.putImageData(imageData, 0, 0);\n  return imageCanvas;\n}\n\n/**\n * @typedef {import(\"./apply.js\").Options} Options\n * @private\n */\n","import mb2css from 'mapbox-to-css-font';\nimport {checkedFonts, registerFont} from 'ol/render/canvas.js';\nimport {createCanvas} from './util.js';\n\nconst hairSpacePool = Array(256).join('\\u200A');\nexport function applyLetterSpacing(text, letterSpacing) {\n  if (letterSpacing >= 0.05) {\n    let textWithLetterSpacing = '';\n    const lines = text.split('\\n');\n    const joinSpaceString = hairSpacePool.slice(\n      0,\n      Math.round(letterSpacing / 0.1)\n    );\n    for (let l = 0, ll = lines.length; l < ll; ++l) {\n      if (l > 0) {\n        textWithLetterSpacing += '\\n';\n      }\n      textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n    }\n    return textWithLetterSpacing;\n  }\n  return text;\n}\n\nlet measureContext;\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvas(1, 1).getContext('2d');\n  }\n  return measureContext;\n}\n\nfunction measureText(text, letterSpacing) {\n  return (\n    getMeasureContext().measureText(text).width +\n    (text.length - 1) * letterSpacing\n  );\n}\n\nconst measureCache = {};\nexport function wrapText(text, font, em, letterSpacing) {\n  if (text.indexOf('\\n') !== -1) {\n    const hardLines = text.split('\\n');\n    const lines = [];\n    for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n      lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n    }\n    return lines.join('\\n');\n  }\n  const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n  let wrappedText = measureCache[key];\n  if (!wrappedText) {\n    const words = text.split(' ');\n    if (words.length > 1) {\n      const ctx = getMeasureContext();\n      ctx.font = font;\n      const oneEm = ctx.measureText('M').width;\n      const maxWidth = oneEm * em;\n      let line = '';\n      const lines = [];\n      // Pass 1 - wrap lines to not exceed maxWidth\n      for (let i = 0, ii = words.length; i < ii; ++i) {\n        const word = words[i];\n        const testLine = line + (line ? ' ' : '') + word;\n        if (measureText(testLine, letterSpacing) <= maxWidth) {\n          line = testLine;\n        } else {\n          if (line) {\n            lines.push(line);\n          }\n          line = word;\n        }\n      }\n      if (line) {\n        lines.push(line);\n      }\n      // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n      for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n        const line = lines[i];\n        if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n          const prevWidth =\n            i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n          const nextWidth =\n            i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n          lines.splice(i, 1);\n          ii -= 1;\n          if (prevWidth < nextWidth) {\n            lines[i - 1] += ' ' + line;\n            i -= 1;\n          } else {\n            lines[i] = line + ' ' + lines[i];\n          }\n        }\n      }\n      // Pass 3 - try to fill 80% of maxWidth for each line\n      for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n        const line = lines[i];\n        const next = lines[i + 1];\n        if (\n          measureText(line, letterSpacing) > maxWidth * 0.7 &&\n          measureText(next, letterSpacing) < maxWidth * 0.6\n        ) {\n          const lineWords = line.split(' ');\n          const lastWord = lineWords.pop();\n          if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n            lines[i] = lineWords.join(' ');\n            lines[i + 1] = lastWord + ' ' + next;\n          }\n          ii -= 1;\n        }\n      }\n      wrappedText = lines.join('\\n');\n    } else {\n      wrappedText = text;\n    }\n    wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n    measureCache[key] = wrappedText;\n  }\n  return wrappedText;\n}\n\nconst fontFamilyRegEx = /font-family: ?([^;]*);/;\nconst stripQuotesRegEx = /(\"|')/g;\nlet loadedFontFamilies;\nfunction hasFontFamily(family) {\n  if (!loadedFontFamilies) {\n    loadedFontFamilies = {};\n    const styleSheets = document.styleSheets;\n    for (let i = 0, ii = styleSheets.length; i < ii; ++i) {\n      const styleSheet = /** @type {CSSStyleSheet} */ (styleSheets[i]);\n      try {\n        const cssRules = styleSheet.rules || styleSheet.cssRules;\n        if (cssRules) {\n          for (let j = 0, jj = cssRules.length; j < jj; ++j) {\n            const cssRule = cssRules[j];\n            if (cssRule.type == 5) {\n              const match = cssRule.cssText.match(fontFamilyRegEx);\n              loadedFontFamilies[match[1].replace(stripQuotesRegEx, '')] = true;\n            }\n          }\n        }\n      } catch (e) {\n        // empty catch block\n      }\n    }\n  }\n  return family in loadedFontFamilies;\n}\n\nconst processedFontFamilies = {};\n\n/**\n * @param {Array} fonts Fonts.\n * @param {string} [templateUrl] Template URL.\n * @return {Array} Processed fonts.\n * @private\n */\nexport function getFonts(\n  fonts,\n  templateUrl = 'https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css'\n) {\n  const fontsKey = fonts.toString();\n  if (fontsKey in processedFontFamilies) {\n    return processedFontFamilies[fontsKey];\n  }\n  const fontDescriptions = [];\n  for (let i = 0, ii = fonts.length; i < ii; ++i) {\n    fonts[i] = fonts[i].replace('Arial Unicode MS', 'Arial');\n    const font = fonts[i];\n    const cssFont = mb2css(font, 1);\n    registerFont(cssFont);\n    const parts = cssFont.split(' ');\n    fontDescriptions.push([\n      parts.slice(3).join(' ').replace(/\"/g, ''),\n      parts[1],\n      parts[0],\n    ]);\n  }\n  for (let i = 0, ii = fontDescriptions.length; i < ii; ++i) {\n    const fontDescription = fontDescriptions[i];\n    const family = fontDescription[0];\n    if (!hasFontFamily(family)) {\n      if (\n        checkedFonts.get(\n          `${fontDescription[2]}\\n${fontDescription[1]} \\n${family}`\n        ) !== 100\n      ) {\n        const fontUrl = templateUrl\n          .replace('{font-family}', family.replace(/ /g, '-').toLowerCase())\n          .replace('{Font+Family}', family.replace(/ /g, '+'))\n          .replace('{fontweight}', fontDescription[1])\n          .replace(\n            '{-fontstyle}',\n            fontDescription[2].replace('normal', '').replace(/(.+)/, '-$1')\n          )\n          .replace('{fontstyle}', fontDescription[2]);\n        if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n          const markup = document.createElement('link');\n          markup.href = fontUrl;\n          markup.rel = 'stylesheet';\n          document.head.appendChild(markup);\n        }\n      }\n    }\n  }\n  processedFontFamilies[fontsKey] = fonts;\n  return fonts;\n}\n","/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\n\nimport Color from '@mapbox/mapbox-gl-style-spec/util/color.js';\nimport convertFunction from '@mapbox/mapbox-gl-style-spec/function/convert.js';\nimport createFilter from '@mapbox/mapbox-gl-style-spec/feature_filter/index.js';\nimport derefLayers from '@mapbox/mapbox-gl-style-spec/deref.js';\nimport mb2css from 'mapbox-to-css-font';\nimport spec from '@mapbox/mapbox-gl-style-spec/reference/v8.json';\nimport {applyLetterSpacing, wrapText} from './text.js';\nimport {\n  clearFunctionCache,\n  createCanvas,\n  defaultResolutions,\n  deg2rad,\n  drawIconHalo,\n  drawSDF,\n  getFilterCache,\n  getFunctionCache,\n  getStyleFunctionKey,\n  getZoomForResolution,\n} from './util.js';\nimport {\n  createPropertyExpression,\n  isExpression,\n} from '@mapbox/mapbox-gl-style-spec/expression/index.js';\nimport {isFunction} from '@mapbox/mapbox-gl-style-spec/function/index.js';\n\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n * @typedef {import('./util.js').ResourceType} ResourceType\n */\n\nconst types = {\n  'Point': 1,\n  'MultiPoint': 1,\n  'LineString': 2,\n  'MultiLineString': 2,\n  'Polygon': 3,\n  'MultiPolygon': 3,\n};\nconst anchor = {\n  'center': [0.5, 0.5],\n  'left': [0, 0.5],\n  'right': [1, 0.5],\n  'top': [0.5, 0],\n  'bottom': [0.5, 1],\n  'top-left': [0, 0],\n  'top-right': [1, 0],\n  'bottom-left': [0, 1],\n  'bottom-right': [1, 1],\n};\n\nconst expressionData = function (rawExpression, propertySpec) {\n  const compiledExpression = createPropertyExpression(\n    rawExpression,\n    propertySpec\n  );\n  if (compiledExpression.result === 'error') {\n    throw new Error(\n      compiledExpression.value\n        .map((err) => `${err.key}: ${err.message}`)\n        .join(', ')\n    );\n  }\n  return compiledExpression.value;\n};\n\nconst emptyObj = {};\nconst zoomObj = {zoom: 0};\nlet renderFeatureCoordinates, renderFeature;\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nexport function getValue(\n  layer,\n  layoutOrPaint,\n  property,\n  zoom,\n  feature,\n  functionCache,\n  featureState\n) {\n  const layerId = layer.id;\n  if (!functionCache) {\n    functionCache = {};\n    console.warn('No functionCache provided to getValue()'); //eslint-disable-line no-console\n  }\n  if (!functionCache[layerId]) {\n    functionCache[layerId] = {};\n  }\n  const functions = functionCache[layerId];\n  if (!functions[property]) {\n    let value = (layer[layoutOrPaint] || emptyObj)[property];\n    const propertySpec = spec[`${layoutOrPaint}_${layer.type}`][property];\n    if (value === undefined) {\n      value = propertySpec.default;\n    }\n    let isExpr = isExpression(value);\n    if (!isExpr && isFunction(value)) {\n      value = convertFunction(value, propertySpec);\n      isExpr = true;\n    }\n    if (isExpr) {\n      const compiledExpression = expressionData(value, propertySpec);\n      functions[property] =\n        compiledExpression.evaluate.bind(compiledExpression);\n    } else {\n      if (propertySpec.type == 'color') {\n        value = Color.parse(value);\n      }\n      functions[property] = function () {\n        return value;\n      };\n    }\n  }\n  zoomObj.zoom = zoom;\n  return functions[property](zoomObj, feature, featureState);\n}\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getIconDeclutterMode(layer, zoom, feature, functionCache) {\n  const allowOverlap = getValue(\n    layer,\n    'layout',\n    'icon-allow-overlap',\n    zoom,\n    feature,\n    functionCache\n  );\n  if (!allowOverlap) {\n    return 'declutter';\n  }\n  const ignorePlacement = getValue(\n    layer,\n    'layout',\n    'icon-ignore-placement',\n    zoom,\n    feature,\n    functionCache\n  );\n  if (!ignorePlacement) {\n    return 'obstacle';\n  }\n  return 'none';\n}\n\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n  if (!filterCache) {\n    console.warn('No filterCache provided to evaluateFilter()'); //eslint-disable-line no-console\n  }\n  if (!(layerId in filterCache)) {\n    filterCache[layerId] = createFilter(filter).filter;\n  }\n  zoomObj.zoom = zoom;\n  return filterCache[layerId](zoomObj, feature);\n}\n\nlet renderTransparentEnabled = false;\n\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nexport function renderTransparent(enabled) {\n  if (enabled !== renderTransparentEnabled) {\n    clearFunctionCache();\n    renderTransparentEnabled = enabled;\n  }\n}\n\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n  if (color) {\n    if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n      return undefined;\n    }\n    const a = color.a;\n    opacity = opacity === undefined ? 1 : opacity;\n    return a === 0\n      ? 'transparent'\n      : 'rgba(' +\n          Math.round((color.r * 255) / a) +\n          ',' +\n          Math.round((color.g * 255) / a) +\n          ',' +\n          Math.round((color.b * 255) / a) +\n          ',' +\n          a * opacity +\n          ')';\n  }\n  return color;\n}\n\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n  return text.replace(templateRegEx, function (match) {\n    return properties[match.slice(1, -1)] || '';\n  });\n}\n\nlet recordLayer = false;\n\n/**\n * Turns recording of the Mapbox Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nexport function recordStyleLayer(record = false) {\n  recordLayer = record;\n}\n\nexport const styleFunctionArgs = {};\n\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox Style object.\n * @param {string|Request} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox Style object.\n * @param {function(Array<string>, string=):Array<string>} getFonts Function that\n * receives a font stack and the url template from the GL style's `metadata['ol:webfonts']`\n * property (if set) as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nexport function stylefunction(\n  olLayer,\n  glStyle,\n  sourceOrLayers,\n  resolutions = defaultResolutions,\n  spriteData = undefined,\n  spriteImageUrl = undefined,\n  getFonts = undefined,\n  getImage = undefined\n) {\n  if (typeof glStyle == 'string') {\n    glStyle = JSON.parse(glStyle);\n  }\n  if (glStyle.version != 8) {\n    throw new Error('glStyle version 8 required.');\n  }\n  styleFunctionArgs[getStyleFunctionKey(glStyle, olLayer)] =\n    Array.from(arguments);\n\n  let spriteImage, spriteImageSize;\n  let spriteImageUnSDFed;\n\n  if (spriteImageUrl) {\n    if (typeof Image !== 'undefined') {\n      const img = new Image();\n      let blobUrl;\n      if (spriteImageUrl instanceof Request) {\n        fetch(spriteImageUrl)\n          .then((response) => response.blob())\n          .then((blob) => {\n            blobUrl = URL.createObjectURL(blob);\n            img.src = blobUrl;\n          })\n          .catch(() => {});\n      } else {\n        img.crossOrigin = 'anonymous';\n        img.src = spriteImageUrl;\n        if (blobUrl) {\n          URL.revokeObjectURL(blobUrl);\n        }\n      }\n      img.onload = function () {\n        spriteImage = img;\n        spriteImageSize = [img.width, img.height];\n        olLayer.changed();\n        img.onload = null;\n      };\n    } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) { //eslint-disable-line\n      const worker = /** @type {*} */ (self);\n      // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n      worker.postMessage({\n        action: 'loadImage',\n        src: spriteImageUrl,\n      });\n      worker.addEventListener('message', function handler(event) {\n        if (\n          event.data.action === 'imageLoaded' &&\n          event.data.src === spriteImageUrl\n        ) {\n          spriteImage = event.data.image;\n          spriteImageSize = [spriteImage.width, spriteImage.height];\n        }\n      });\n    }\n  }\n\n  const allLayers = derefLayers(glStyle.layers);\n\n  const layersBySourceLayer = {};\n  const mapboxLayers = [];\n\n  const iconImageCache = {};\n  const patternCache = {};\n  const functionCache = getFunctionCache(glStyle);\n  const filterCache = getFilterCache(glStyle);\n\n  let mapboxSource;\n  for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n    const layer = allLayers[i];\n    const layerId = layer.id;\n    if (\n      (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers) ||\n      sourceOrLayers.indexOf(layerId) !== -1\n    ) {\n      const sourceLayer = layer['source-layer'];\n      if (!mapboxSource) {\n        mapboxSource = layer.source;\n        const source = glStyle.sources[mapboxSource];\n        if (!source) {\n          throw new Error(`Source \"${mapboxSource}\" is not defined`);\n        }\n        const type = source.type;\n        if (type !== 'vector' && type !== 'geojson') {\n          throw new Error(\n            `Source \"${mapboxSource}\" is not of type \"vector\" or \"geojson\", but \"${type}\"`\n          );\n        }\n      } else if (layer.source !== mapboxSource) {\n        throw new Error(\n          `Layer \"${layerId}\" does not use source \"${mapboxSource}`\n        );\n      }\n      let layers = layersBySourceLayer[sourceLayer];\n      if (!layers) {\n        layers = [];\n        layersBySourceLayer[sourceLayer] = layers;\n      }\n      layers.push({\n        layer: layer,\n        index: i,\n      });\n      mapboxLayers.push(layerId);\n    }\n  }\n\n  const textHalo = new Stroke();\n  const textColor = new Fill();\n\n  const styles = [];\n\n  /**\n   * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {string} [onlyLayer] Calculate style for this layer only.\n   * @return {Array<import(\"ol/style/Style\").default>} Style.\n   */\n  const styleFunction = function (feature, resolution, onlyLayer) {\n    const properties = feature.getProperties();\n    const layers = layersBySourceLayer[properties.layer];\n    if (!layers) {\n      return undefined;\n    }\n    let zoom = resolutions.indexOf(resolution);\n    if (zoom == -1) {\n      zoom = getZoomForResolution(resolution, resolutions);\n    }\n    const type = types[feature.getGeometry().getType()];\n    const f = {\n      id: feature.getId(),\n      properties: properties,\n      type: type,\n    };\n    const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n    let stylesLength = -1;\n    let featureBelongsToLayer;\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      const layerData = layers[i];\n      const layer = layerData.layer;\n      const layerId = layer.id;\n      if (onlyLayer !== undefined && onlyLayer !== layerId) {\n        continue;\n      }\n\n      const layout = layer.layout || emptyObj;\n      const paint = layer.paint || emptyObj;\n      if (\n        layout.visibility === 'none' ||\n        ('minzoom' in layer && zoom < layer.minzoom) ||\n        ('maxzoom' in layer && zoom >= layer.maxzoom)\n      ) {\n        continue;\n      }\n      const filter = layer.filter;\n      if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n        featureBelongsToLayer = layer;\n        let color, opacity, fill, stroke, strokeColor, style;\n        const index = layerData.index;\n        if (\n          type == 3 &&\n          (layer.type == 'fill' || layer.type == 'fill-extrusion')\n        ) {\n          opacity = getValue(\n            layer,\n            'paint',\n            layer.type + '-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (layer.type + '-pattern' in paint) {\n            const fillIcon = getValue(\n              layer,\n              'paint',\n              layer.type + '-pattern',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            if (fillIcon) {\n              const icon =\n                typeof fillIcon === 'string'\n                  ? fromTemplate(fillIcon, properties)\n                  : fillIcon.toString();\n              if (spriteImage && spriteData && spriteData[icon]) {\n                ++stylesLength;\n                style = styles[stylesLength];\n                if (\n                  !style ||\n                  !style.getFill() ||\n                  style.getStroke() ||\n                  style.getText()\n                ) {\n                  style = new Style({\n                    fill: new Fill(),\n                  });\n                  styles[stylesLength] = style;\n                }\n                fill = style.getFill();\n                style.setZIndex(index);\n                const icon_cache_key = icon + '.' + opacity;\n                let pattern = patternCache[icon_cache_key];\n                if (!pattern) {\n                  const spriteImageData = spriteData[icon];\n                  const canvas = createCanvas(\n                    spriteImageData.width,\n                    spriteImageData.height\n                  );\n                  const ctx = /** @type {CanvasRenderingContext2D} */ (\n                    canvas.getContext('2d')\n                  );\n                  ctx.globalAlpha = opacity;\n                  ctx.drawImage(\n                    spriteImage,\n                    spriteImageData.x,\n                    spriteImageData.y,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                    0,\n                    0,\n                    spriteImageData.width,\n                    spriteImageData.height\n                  );\n                  pattern = ctx.createPattern(canvas, 'repeat');\n                  patternCache[icon_cache_key] = pattern;\n                }\n                fill.setColor(pattern);\n              }\n            }\n          } else {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                layer.type + '-color',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              ),\n              opacity\n            );\n            if (layer.type + '-outline-color' in paint) {\n              strokeColor = colorWithOpacity(\n                getValue(\n                  layer,\n                  'paint',\n                  layer.type + '-outline-color',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                ),\n                opacity\n              );\n            }\n            if (!strokeColor) {\n              strokeColor = color;\n            }\n            if (color || strokeColor) {\n              ++stylesLength;\n              style = styles[stylesLength];\n              if (\n                !style ||\n                (color && !style.getFill()) ||\n                (!color && style.getFill()) ||\n                (strokeColor && !style.getStroke()) ||\n                (!strokeColor && style.getStroke()) ||\n                style.getText()\n              ) {\n                style = new Style({\n                  fill: color ? new Fill() : undefined,\n                  stroke: strokeColor ? new Stroke() : undefined,\n                });\n                styles[stylesLength] = style;\n              }\n              if (color) {\n                fill = style.getFill();\n                fill.setColor(color);\n              }\n              if (strokeColor) {\n                stroke = style.getStroke();\n                stroke.setColor(strokeColor);\n                stroke.setWidth(0.5);\n              }\n              style.setZIndex(index);\n            }\n          }\n        }\n        if (type != 1 && layer.type == 'line') {\n          color =\n            !('line-pattern' in paint) && 'line-color' in paint\n              ? colorWithOpacity(\n                  getValue(\n                    layer,\n                    'paint',\n                    'line-color',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  ),\n                  getValue(\n                    layer,\n                    'paint',\n                    'line-opacity',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  )\n                )\n              : undefined;\n          const width = getValue(\n            layer,\n            'paint',\n            'line-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (color && width > 0) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getStroke() ||\n              style.getFill() ||\n              style.getText()\n            ) {\n              style = new Style({\n                stroke: new Stroke(),\n              });\n              styles[stylesLength] = style;\n            }\n            stroke = style.getStroke();\n            stroke.setLineCap(\n              getValue(\n                layer,\n                'layout',\n                'line-cap',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setLineJoin(\n              getValue(\n                layer,\n                'layout',\n                'line-join',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setMiterLimit(\n              getValue(\n                layer,\n                'layout',\n                'line-miter-limit',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setColor(color);\n            stroke.setWidth(width);\n            stroke.setLineDash(\n              paint['line-dasharray']\n                ? getValue(\n                    layer,\n                    'paint',\n                    'line-dasharray',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  ).map(function (x) {\n                    return x * width;\n                  })\n                : null\n            );\n            style.setZIndex(index);\n          }\n        }\n\n        let hasImage = false;\n        let text = null;\n        let placementAngle = 0;\n        let icon, iconImg, skipLabel;\n        if ((type == 1 || type == 2) && 'icon-image' in layout) {\n          const iconImage = getValue(\n            layer,\n            'layout',\n            'icon-image',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (iconImage) {\n            icon =\n              typeof iconImage === 'string'\n                ? fromTemplate(iconImage, properties)\n                : iconImage.toString();\n            let styleGeom = undefined;\n            const imageElement = getImage ? getImage(olLayer, icon) : undefined;\n            if (\n              (spriteImage && spriteData && spriteData[icon]) ||\n              imageElement\n            ) {\n              const iconRotationAlignment = getValue(\n                layer,\n                'layout',\n                'icon-rotation-alignment',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              );\n              if (type == 2) {\n                const geom = /** @type {*} */ (feature.getGeometry());\n                // ol package and ol-debug.js only\n                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                  const extent = geom.getExtent();\n                  const size = Math.sqrt(\n                    Math.max(\n                      Math.pow((extent[2] - extent[0]) / resolution, 2),\n                      Math.pow((extent[3] - extent[1]) / resolution, 2)\n                    )\n                  );\n                  if (size > 150) {\n                    //FIXME Do not hard-code a size of 150\n                    const midpoint =\n                      geom.getType() === 'MultiLineString'\n                        ? geom.getFlatMidpoints()\n                        : geom.getFlatMidpoint();\n                    if (!renderFeature) {\n                      renderFeatureCoordinates = [NaN, NaN];\n                      renderFeature = new RenderFeature(\n                        'Point',\n                        renderFeatureCoordinates,\n                        [],\n                        {},\n                        null\n                      );\n                    }\n                    styleGeom = renderFeature;\n                    renderFeatureCoordinates[0] = midpoint[0];\n                    renderFeatureCoordinates[1] = midpoint[1];\n                    const placement = getValue(\n                      layer,\n                      'layout',\n                      'symbol-placement',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState\n                    );\n                    if (\n                      placement === 'line' &&\n                      iconRotationAlignment === 'map'\n                    ) {\n                      const stride = geom.getStride();\n                      const coordinates = geom.getFlatCoordinates();\n                      for (\n                        let i = 0, ii = coordinates.length - stride;\n                        i < ii;\n                        i += stride\n                      ) {\n                        const x1 = coordinates[i];\n                        const y1 = coordinates[i + 1];\n                        const x2 = coordinates[i + stride];\n                        const y2 = coordinates[i + stride + 1];\n                        const minX = Math.min(x1, x2);\n                        const minY = Math.min(y1, y2);\n                        const maxX = Math.max(x1, x2);\n                        const maxY = Math.max(y1, y2);\n                        if (\n                          midpoint[0] >= minX &&\n                          midpoint[0] <= maxX &&\n                          midpoint[1] >= minY &&\n                          midpoint[1] <= maxY\n                        ) {\n                          placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                          break;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              if (type !== 2 || styleGeom) {\n                const iconSize = getValue(\n                  layer,\n                  'layout',\n                  'icon-size',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                );\n                const iconColor =\n                  paint['icon-color'] !== undefined\n                    ? getValue(\n                        layer,\n                        'paint',\n                        'icon-color',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      )\n                    : null;\n                if (!iconColor || iconColor.a !== 0) {\n                  const haloColor = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-color',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  );\n                  const haloWidth = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-width',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  );\n                  let iconCacheKey = `${icon}.${iconSize}.${haloWidth}.${haloColor}`;\n                  if (iconColor !== null) {\n                    iconCacheKey += `.${iconColor}`;\n                  }\n                  iconImg = iconImageCache[iconCacheKey];\n                  if (!iconImg) {\n                    const declutterMode = getIconDeclutterMode(\n                      layer,\n                      zoom,\n                      f,\n                      functionCache\n                    );\n                    let displacement;\n                    if ('icon-offset' in layout) {\n                      displacement = getValue(\n                        layer,\n                        'layout',\n                        'icon-offset',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      ).slice(0);\n                      displacement[1] *= -1;\n                    }\n                    let color = iconColor\n                      ? [\n                          iconColor.r * 255,\n                          iconColor.g * 255,\n                          iconColor.b * 255,\n                          iconColor.a,\n                        ]\n                      : undefined;\n                    if (imageElement) {\n                      const iconOptions = {\n                        color: color,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      };\n                      if (typeof imageElement === 'string') {\n                        // it is a src URL\n                        iconOptions.src = imageElement;\n                      } else {\n                        iconOptions.img = imageElement;\n                        iconOptions.imgSize = [\n                          imageElement.width,\n                          imageElement.height,\n                        ];\n                      }\n                      iconImg = new Icon(iconOptions);\n                    } else {\n                      const spriteImageData = spriteData[icon];\n                      let img, size, offset;\n                      if (haloWidth) {\n                        if (spriteImageData.sdf) {\n                          img = drawIconHalo(\n                            drawSDF(spriteImage, spriteImageData, iconColor),\n                            {\n                              x: 0,\n                              y: 0,\n                              width: spriteImageData.width,\n                              height: spriteImageData.height,\n                              pixelRatio: spriteImageData.pixelRatio,\n                            },\n                            haloWidth,\n                            haloColor\n                          );\n                          color = undefined; // do not tint haloed icons\n                        } else {\n                          img = drawIconHalo(\n                            spriteImage,\n                            spriteImageData,\n                            haloWidth,\n                            haloColor\n                          );\n                        }\n                      } else {\n                        if (spriteImageData.sdf) {\n                          if (!spriteImageUnSDFed) {\n                            spriteImageUnSDFed = drawSDF(\n                              spriteImage,\n                              {\n                                x: 0,\n                                y: 0,\n                                width: spriteImageSize[0],\n                                height: spriteImageSize[1],\n                              },\n                              {r: 1, g: 1, b: 1, a: 1}\n                            );\n                          }\n                          img = spriteImageUnSDFed;\n                        } else {\n                          img = spriteImage;\n                        }\n                        size = [spriteImageData.width, spriteImageData.height];\n                        offset = [spriteImageData.x, spriteImageData.y];\n                      }\n                      iconImg = new Icon({\n                        color: color,\n                        img: img,\n                        // @ts-ignore\n                        imgSize: spriteImageSize,\n                        size: size,\n                        offset: offset,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        scale: iconSize / spriteImageData.pixelRatio,\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      });\n                    }\n                    iconImageCache[iconCacheKey] = iconImg;\n                  }\n                }\n                if (iconImg) {\n                  ++stylesLength;\n                  style = styles[stylesLength];\n                  if (\n                    !style ||\n                    !style.getImage() ||\n                    style.getFill() ||\n                    style.getStroke()\n                  ) {\n                    style = new Style();\n                    styles[stylesLength] = style;\n                  }\n                  style.setGeometry(styleGeom);\n                  iconImg.setRotation(\n                    placementAngle +\n                      deg2rad(\n                        getValue(\n                          layer,\n                          'layout',\n                          'icon-rotate',\n                          zoom,\n                          f,\n                          functionCache,\n                          featureState\n                        )\n                      )\n                  );\n                  iconImg.setOpacity(\n                    getValue(\n                      layer,\n                      'paint',\n                      'icon-opacity',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState\n                    )\n                  );\n                  iconImg.setAnchor(\n                    anchor[\n                      getValue(\n                        layer,\n                        'layout',\n                        'icon-anchor',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      )\n                    ]\n                  );\n                  style.setImage(iconImg);\n                  text = style.getText();\n                  style.setText(undefined);\n                  style.setZIndex(index);\n                  hasImage = true;\n                  skipLabel = false;\n                }\n              } else {\n                skipLabel = true;\n              }\n            }\n          }\n        }\n\n        if (type == 1 && layer.type === 'circle') {\n          ++stylesLength;\n          style = styles[stylesLength];\n          if (\n            !style ||\n            !style.getImage() ||\n            style.getFill() ||\n            style.getStroke()\n          ) {\n            style = new Style();\n            styles[stylesLength] = style;\n          }\n          const circleRadius =\n            'circle-radius' in paint\n              ? getValue(\n                  layer,\n                  'paint',\n                  'circle-radius',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                )\n              : 5;\n          const circleStrokeColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const circleColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const circleStrokeWidth = getValue(\n            layer,\n            'paint',\n            'circle-stroke-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const cache_key =\n            circleRadius +\n            '.' +\n            circleStrokeColor +\n            '.' +\n            circleColor +\n            '.' +\n            circleStrokeWidth;\n          iconImg = iconImageCache[cache_key];\n          if (!iconImg) {\n            iconImg = new Circle({\n              radius: circleRadius,\n              stroke:\n                circleStrokeColor && circleStrokeWidth > 0\n                  ? new Stroke({\n                      width: circleStrokeWidth,\n                      color: circleStrokeColor,\n                    })\n                  : undefined,\n              fill: circleColor\n                ? new Fill({\n                    color: circleColor,\n                  })\n                : undefined,\n              declutterMode: 'none',\n            });\n            iconImageCache[cache_key] = iconImg;\n          }\n          style.setImage(iconImg);\n          text = style.getText();\n          style.setText(undefined);\n          style.setGeometry(undefined);\n          style.setZIndex(index);\n          hasImage = true;\n        }\n\n        let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n        if ('text-field' in layout) {\n          textSize = Math.round(\n            getValue(\n              layer,\n              'layout',\n              'text-size',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const fontArray = getValue(\n            layer,\n            'layout',\n            'text-font',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          textLineHeight = getValue(\n            layer,\n            'layout',\n            'text-line-height',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          font = mb2css(\n            getFonts\n              ? getFonts(\n                  fontArray,\n                  glStyle.metadata ? glStyle.metadata['ol:webfonts'] : undefined\n                )\n              : fontArray,\n            textSize,\n            textLineHeight\n          );\n          if (!font.includes('sans-serif')) {\n            font += ',sans-serif';\n          }\n          letterSpacing = getValue(\n            layer,\n            'layout',\n            'text-letter-spacing',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          maxTextWidth = getValue(\n            layer,\n            'layout',\n            'text-max-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textField = getValue(\n            layer,\n            'layout',\n            'text-field',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (typeof textField === 'object' && textField.sections) {\n            if (textField.sections.length === 1) {\n              label = textField.toString();\n            } else {\n              label = textField.sections.reduce((acc, chunk, i) => {\n                const fonts = chunk.fontStack\n                  ? chunk.fontStack.split(',')\n                  : fontArray;\n                const chunkFont = mb2css(\n                  getFonts ? getFonts(fonts) : fonts,\n                  textSize * (chunk.scale || 1),\n                  textLineHeight\n                );\n                let text = chunk.text;\n                if (text === '\\n') {\n                  acc.push('\\n', '');\n                  return acc;\n                }\n                if (type == 2) {\n                  acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                  return;\n                }\n                text = wrapText(\n                  text,\n                  chunkFont,\n                  maxTextWidth,\n                  letterSpacing\n                ).split('\\n');\n                for (let i = 0, ii = text.length; i < ii; ++i) {\n                  if (i > 0) {\n                    acc.push('\\n', '');\n                  }\n                  acc.push(text[i], chunkFont);\n                }\n                return acc;\n              }, []);\n            }\n          } else {\n            label = fromTemplate(textField, properties).trim();\n          }\n          opacity = getValue(\n            layer,\n            'paint',\n            'text-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n        }\n        if (label && opacity && !skipLabel) {\n          if (!hasImage) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getText() ||\n              style.getFill() ||\n              style.getStroke()\n            ) {\n              style = new Style();\n              styles[stylesLength] = style;\n            }\n            style.setImage(undefined);\n            style.setGeometry(undefined);\n          }\n          if (!style.getText()) {\n            style.setText(\n              text ||\n                new Text({\n                  padding: [2, 2, 2, 2],\n                })\n            );\n          }\n          text = style.getText();\n          const textTransform = layout['text-transform'];\n          if (textTransform == 'uppercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toUpperCase()))\n              : label.toUpperCase();\n          } else if (textTransform == 'lowercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toLowerCase()))\n              : label.toLowerCase();\n          }\n          const wrappedLabel = Array.isArray(label)\n            ? label\n            : type == 2\n            ? applyLetterSpacing(label, letterSpacing)\n            : wrapText(label, font, maxTextWidth, letterSpacing);\n          text.setText(wrappedLabel);\n          text.setFont(font);\n          text.setRotation(\n            deg2rad(\n              getValue(\n                layer,\n                'layout',\n                'text-rotate',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            )\n          );\n          const textAnchor = getValue(\n            layer,\n            'layout',\n            'text-anchor',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const placement =\n            hasImage || type == 1\n              ? 'point'\n              : getValue(\n                  layer,\n                  'layout',\n                  'symbol-placement',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                );\n          let textAlign;\n          if (placement === 'line-center') {\n            text.setPlacement('line');\n            textAlign = 'center';\n          } else {\n            text.setPlacement(placement);\n          }\n          if (placement === 'line' && typeof text.setRepeat === 'function') {\n            const symbolSpacing = getValue(\n              layer,\n              'layout',\n              'symbol-spacing',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            text.setRepeat(symbolSpacing * 2);\n          }\n          text.setOverflow(placement === 'point');\n          let textHaloWidth = getValue(\n            layer,\n            'paint',\n            'text-halo-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textOffset = getValue(\n            layer,\n            'layout',\n            'text-offset',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textTranslate = getValue(\n            layer,\n            'paint',\n            'text-translate',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          // Text offset has to take halo width and line height into account\n          let vOffset = 0;\n          let hOffset = 0;\n          if (placement == 'point') {\n            textAlign = 'center';\n            if (textAnchor.indexOf('left') !== -1) {\n              textAlign = 'left';\n              hOffset = textHaloWidth;\n            } else if (textAnchor.indexOf('right') !== -1) {\n              textAlign = 'right';\n              hOffset = -textHaloWidth;\n            }\n            const textRotationAlignment = getValue(\n              layer,\n              'layout',\n              'text-rotation-alignment',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            text.setRotateWithView(textRotationAlignment == 'map');\n          } else {\n            text.setMaxAngle(\n              (deg2rad(\n                getValue(\n                  layer,\n                  'layout',\n                  'text-max-angle',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                )\n              ) *\n                label.length) /\n                wrappedLabel.length\n            );\n            text.setRotateWithView(false);\n          }\n          text.setTextAlign(textAlign);\n          let textBaseline = 'middle';\n          if (textAnchor.indexOf('bottom') == 0) {\n            textBaseline = 'bottom';\n            vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n          } else if (textAnchor.indexOf('top') == 0) {\n            textBaseline = 'top';\n            vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n          }\n          text.setTextBaseline(textBaseline);\n          const textJustify = getValue(\n            layer,\n            'layout',\n            'text-justify',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n          text.setOffsetX(\n            textOffset[0] * textSize + hOffset + textTranslate[0]\n          );\n          text.setOffsetY(\n            textOffset[1] * textSize + vOffset + textTranslate[1]\n          );\n          textColor.setColor(\n            colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'text-color',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              ),\n              opacity\n            )\n          );\n          text.setFill(textColor);\n          const haloColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'text-halo-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            opacity\n          );\n          if (haloColor) {\n            textHalo.setColor(haloColor);\n            // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n            // Halo width must be doubled because it is applied around the center of the text outline\n            textHaloWidth *= 2;\n            // 1/4 of text size (spec) x 2\n            const halfTextSize = 0.5 * textSize;\n            textHalo.setWidth(\n              textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize\n            );\n            text.setStroke(textHalo);\n          } else {\n            text.setStroke(undefined);\n          }\n          const textPadding = getValue(\n            layer,\n            'layout',\n            'text-padding',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const padding = text.getPadding();\n          if (textPadding !== padding[0]) {\n            padding[0] = textPadding;\n            padding[1] = textPadding;\n            padding[2] = textPadding;\n            padding[3] = textPadding;\n          }\n          style.setZIndex(index);\n        }\n      }\n    }\n\n    if (stylesLength > -1) {\n      styles.length = stylesLength + 1;\n      if (recordLayer) {\n        if ('set' in feature) {\n          // ol/Feature\n          feature.set('mapbox-layer', featureBelongsToLayer);\n        } else {\n          // ol/render/Feature\n          feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n        }\n      }\n      return styles;\n    }\n    return undefined;\n  };\n\n  olLayer.setStyle(styleFunction);\n  olLayer.set('mapbox-source', mapboxSource);\n  olLayer.set('mapbox-layers', mapboxLayers);\n  olLayer.set('mapbox-featurestate', olLayer.get('mapbox-featurestate') || {});\n  return styleFunction;\n}\n\n/**\n * Get the the style for a specific Mapbox layer only. This can be useful for creating a legend.\n * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature OpenLayers feature.\n * @param {number} resolution View resolution.\n * @param {import(\"ol/layer\").Vector|import(\"ol/layer\").VectorTile} olLayer OpenLayers layer.\n * @param {string} layerId Id of the Mapbox layer to get the style for\n * @return {Array<import(\"ol/style\").Style>} Styles for the provided Mapbox layer.\n */\nexport function getStyleForLayer(feature, resolution, olLayer, layerId) {\n  const evaluateStyle = olLayer.getStyleFunction();\n  if (evaluateStyle.length === 3) {\n    // @ts-ignore\n    return evaluateStyle(feature, resolution, layerId);\n  }\n  return undefined;\n}\n\nexport {\n  colorWithOpacity as _colorWithOpacity,\n  evaluateFilter as _evaluateFilter,\n  fromTemplate as _fromTemplate,\n  getValue as _getValue,\n};\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.image_.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth)\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight)\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    const extent = frameState.extent;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n            ? new LineString(flatCoordinates, 'XY')\n            : geometryType === 'MultiPoint'\n            ? new MultiPoint(flatCoordinates, 'XY')\n            : geometryType === 'MultiLineString'\n            ? new MultiLineString(flatCoordinates, 'XY', ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../geom/Geometry.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageState from './ImageState.js';\nimport ImageWrapper from './Image.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageWrapper {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/resolution\n */\n\n/**\n * @typedef {number|Array<number>} ResolutionLike\n */\n\n/**\n * @param {ResolutionLike} resolution Resolution.\n * @return {number} Resolution.\n */\nexport function fromResolutionLike(resolution) {\n  if (Array.isArray(resolution)) {\n    return Math.min(...resolution);\n  }\n  return resolution;\n}\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../Image.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageWrapper {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        fromResolutionLike(this.sourceImage_.getResolution()),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {DECIMALS} from './common.js';\nimport {ceil} from '../math.js';\nimport {\n  containsExtent,\n  equals,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../Image.js\").Loader} [loader] Loader. Can either be a custom loader, or one of the\n * loaders created with a `createLoader()` function ({@link module:ol/source/wms.createLoader wms},\n * {@link module:ol/source/arcgisRest.createLoader arcgisRest}, {@link module:ol/source/mapguide.createLoader mapguide},\n * {@link module:ol/source/static.createLoader static}).\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Base class for sources providing a single image.\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").Loader}\n     */\n    this.loader = options.loader || null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.wantedExtent_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.wantedResolution_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.static_ = options.loader ? options.loader.length === 0 : false;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate()\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.loader) {\n      const requestExtent = getRequestExtent(extent, resolution, pixelRatio, 1);\n      const requestResolution = this.findNearestResolution(resolution);\n      if (\n        this.image &&\n        (this.static_ ||\n          (((this.wantedExtent_ &&\n            containsExtent(this.wantedExtent_, requestExtent)) ||\n            containsExtent(this.image.getExtent(), requestExtent)) &&\n            ((this.wantedResolution_ &&\n              fromResolutionLike(this.wantedResolution_) ===\n                requestResolution) ||\n              fromResolutionLike(this.image.getResolution()) ===\n                requestResolution)))\n      ) {\n        return this.image;\n      }\n      this.wantedExtent_ = requestExtent;\n      this.wantedResolution_ = requestResolution;\n      this.image = new ImageWrapper(\n        requestExtent,\n        requestResolution,\n        pixelRatio,\n        this.loader\n      );\n      this.image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this)\n      );\n    }\n    return this.image;\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n/**\n * Adjusts the extent so it aligns with pixel boundaries.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Reolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} ratio Ratio between request size and view size.\n * @return {import(\"../extent.js\").Extent} Request extent.\n */\nexport function getRequestExtent(extent, resolution, pixelRatio, ratio) {\n  const imageResolution = resolution / pixelRatio;\n  const center = getCenter(extent);\n  const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n  const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n  const marginWidth = ceil(((ratio - 1) * viewWidth) / 2, DECIMALS);\n  const requestWidth = viewWidth + 2 * marginWidth;\n  const marginHeight = ceil(((ratio - 1) * viewHeight) / 2, DECIMALS);\n  const requestHeight = viewHeight + 2 * marginHeight;\n  return getForViewAndSize(center, imageResolution, 0, [\n    requestWidth,\n    requestHeight,\n  ]);\n}\n\nexport default ImageSource;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nexport const DECIMALS = 4;\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already'\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      '`resolutions` must be sorted in descending order'\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal'\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal'\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.'\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageLayer from '../layer/Image.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileLayer from '../layer/Tile.js';\nimport TileQueue from '../TileQueue.js';\nimport TileSource from './Tile.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {create as createTransform} from '../transform.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport {getUid} from '../util.js';\n\nlet hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet context;\n\n/**\n * @param {Uint8ClampedArray} data Image data.\n * @param {number} width Number of columns.\n * @param {number} height Number of rows.\n * @return {ImageData} Image data.\n */\nexport function newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  }\n\n  if (!context) {\n    context = document.createElement('canvas').getContext('2d');\n  }\n  const imageData = context.createImageData(width, height);\n  imageData.data.set(data);\n  return imageData;\n}\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  let workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    }\n    return {data: data, width: width, height: height};\n  }\n\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'}))\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    this._imageOps = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this._imageOps) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this._onWorkerMessage.bind(this, 0)\n      );\n    }\n    this._workers = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this._queue = [];\n\n    this._maxQueueLength = config.queue || Infinity;\n    this._running = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this._dataLookup = {};\n\n    /**\n     * @type {Job}\n     * @private\n     */\n    this._job = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this._enqueue({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this._dispatch();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  _enqueue(job) {\n    this._queue.push(job);\n    while (this._queue.length > this._maxQueueLength) {\n      this._queue.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  _dispatch() {\n    if (this._running || this._queue.length === 0) {\n      return;\n    }\n\n    const job = this._queue.shift();\n    this._job = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        buffers\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this._workers[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        slices\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  _onWorkerMessage(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this._dataLookup[index] = event.data;\n    --this._running;\n    if (this._running === 0) {\n      this._resolveJob();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  _resolveJob() {\n    const job = this._job;\n    const threads = this._workers.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n      meta = this._dataLookup[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this._dataLookup[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this._dataLookup[i]['meta'];\n      }\n    }\n    this._job = null;\n    this._dataLookup = {};\n    job.callback(\n      null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta\n    );\n    this._dispatch();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   */\n  disposeInternal() {\n    for (let i = 0; i < this._workers.length; ++i) {\n      this._workers[i].terminate();\n    }\n    this._workers.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /** @type {boolean} */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.processSources_.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutterTree: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      const attributions = [];\n      for (\n        let index = 0, iMax = options.sources.length;\n        index < iMax;\n        ++index\n      ) {\n        const sourceOrLayer = options.sources[index];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const attributionGetter = source.getAttributions();\n        if (typeof attributionGetter === 'function') {\n          const sourceAttribution = attributionGetter(frameState);\n          attributions.push.apply(attributions, sourceAttribution);\n        }\n      }\n      return attributions.length !== 0 ? attributions : null;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    this.tileQueue_.loadMoreTiles(16, 16);\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      frameState.renderTargets = {};\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data)\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState)\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    } else {\n      this.changed();\n    }\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data)\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      throw new Error('Either `url` or `tileJSON` options must be provided');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {fromKey, getCacheKeyForTileKey, getKeyZXY} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache = new TileCache(this.tileCache.highWaterMark);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.tileCache;\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const z = fromKey(tileCache.peekFirstKey())[0];\n    const tileGrid = this.tileGrid;\n    tileCache.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTileCache.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      const tile = tileCache.peek(cacheKey);\n      if (tile) {\n        const sourceTiles = tile.sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection\n        );\n        const sourceTile = this.sourceTileCache.containsKey(tileUrl)\n          ? this.sourceTileCache.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0]\n          );\n          this.sourceTileCache.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR\n          )\n            ? TileState.ERROR\n            : TileState.LOADED\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const coordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    let tile;\n    if (this.tileCache.containsKey(coordKey)) {\n      tile = this.tileCache.get(coordKey);\n      if (tile.key === key) {\n        return tile;\n      }\n    }\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        empty =\n          empty &&\n          !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      });\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection)\n    );\n\n    newTile.key = key;\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      this.tileCache.replace(coordKey, newTile);\n    } else {\n      this.tileCache.set(coordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    super.updateCacheSize(tileCount * 2, projection);\n    this.sourceTileCache.highWaterMark =\n      this.getTileCacheForProjection(projection).highWaterMark;\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile)\n      );\n    }\n  );\n}\n","/**\n * Generates a shaded relief image given elevation data.  Uses a 3x3\n * neighborhood for determining slope and aspect.\n * @param {Array<ImageData>} inputs Array of input images.\n * @param {Object} data Data added in the \"beforeoperations\" event.\n * @return {ImageData} Output image.\n */\nexport function hillshade(inputs, data) {\n  const elevationImage = inputs[0];\n  const width = elevationImage.width;\n  const height = elevationImage.height;\n  const elevationData = elevationImage.data;\n  const shadeData = new Uint8ClampedArray(elevationData.length);\n  const dp = data.resolution * 2;\n  const maxX = width - 1;\n  const maxY = height - 1;\n  const pixel = [0, 0, 0, 0];\n  const twoPi = 2 * Math.PI;\n  const halfPi = Math.PI / 2;\n  const sunEl = (Math.PI * data.sunEl) / 180;\n  const sunAz = (Math.PI * data.sunAz) / 180;\n  const cosSunEl = Math.cos(sunEl);\n  const sinSunEl = Math.sin(sunEl);\n  const highlightColor = data.highlightColor;\n  const shadowColor = data.shadowColor;\n  const accentColor = data.accentColor;\n  const encoding = data.encoding;\n\n  let pixelX,\n    pixelY,\n    x0,\n    x1,\n    y0,\n    y1,\n    offset,\n    z0,\n    z1,\n    dzdx,\n    dzdy,\n    slope,\n    aspect,\n    accent,\n    scaled,\n    shade,\n    scaledAccentColor,\n    compositeShadeColor,\n    clamp,\n    slopeScaleBase,\n    scaledSlope,\n    cosIncidence;\n\n  function calculateElevation(pixel, encoding = 'mapbox') {\n    // The method used to extract elevations from the DEM.\n    //\n    // The supported methods are the Mapbox format\n    // (red * 256 * 256 + green * 256 + blue) * 0.1 - 10000\n    // and the Terrarium format\n    // (red * 256 + green + blue / 256) - 32768\n    //\n    if (encoding === 'mapbox') {\n      return (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1 - 10000;\n    }\n    if (encoding === 'terrarium') {\n      return pixel[0] * 256 + pixel[1] + pixel[2] / 256 - 32768;\n    }\n  }\n  for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n    y0 = pixelY === 0 ? 0 : pixelY - 1;\n    y1 = pixelY === maxY ? maxY : pixelY + 1;\n    for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n      x0 = pixelX === 0 ? 0 : pixelX - 1;\n      x1 = pixelX === maxX ? maxX : pixelX + 1;\n\n      // determine elevation for (x0, pixelY)\n      offset = (pixelY * width + x0) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (x1, pixelY)\n      offset = (pixelY * width + x1) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdx = (z1 - z0) / dp;\n\n      // determine elevation for (pixelX, y0)\n      offset = (y0 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (pixelX, y1)\n      offset = (y1 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdy = (z1 - z0) / dp;\n\n      aspect = Math.atan2(dzdy, -dzdx);\n      if (aspect < 0) {\n        aspect = halfPi - aspect;\n      } else if (aspect > halfPi) {\n        aspect = twoPi - aspect + halfPi;\n      } else {\n        aspect = halfPi - aspect;\n      }\n\n      // Bootstrap slope and corresponding incident values\n      slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n      cosIncidence =\n        sinSunEl * Math.cos(slope) +\n        cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n      accent = Math.cos(slope);\n      // 255 for Hex colors\n      scaled = 255 * cosIncidence;\n\n      /*\n       * The following is heavily inspired\n       * by [Maplibre's equivalent WebGL shader](https://github.com/maplibre/maplibre-gl-js/blob/main/src/shaders/hillshade.fragment.glsl)\n       */\n\n      // Forces given value to stay between two given extremes\n      clamp = Math.min(Math.max(2 * data.sunEl, 0), 1);\n\n      // Intensity basis for hillshade opacity\n      slopeScaleBase = 1.875 - data.opacity * 1.75;\n      // Intensity interpolation so that higher intensity values create more opaque hillshading\n      scaledSlope =\n        data.opacity !== 0.5\n          ? halfPi *\n            ((Math.pow(slopeScaleBase, slope) - 1) /\n              (Math.pow(slopeScaleBase, halfPi) - 1))\n          : slope;\n\n      // Accent hillshade color with given accentColor to emphasize rougher terrain\n      scaledAccentColor = {\n        r: (1 - accent) * accentColor.r * clamp * 255,\n        g: (1 - accent) * accentColor.g * clamp * 255,\n        b: (1 - accent) * accentColor.b * clamp * 255,\n        a: (1 - accent) * accentColor.a * clamp * 255,\n      };\n\n      // Allows highlight vs shadow discrimination\n      shade = Math.abs((((aspect + sunAz) / Math.PI + 0.5) % 2) - 1);\n      // Creates a composite color mix between highlight & shadow colors to emphasize slopes\n      compositeShadeColor = {\n        r: (highlightColor.r * (1 - shade) + shadowColor.r * shade) * scaled,\n        g: (highlightColor.g * (1 - shade) + shadowColor.g * shade) * scaled,\n        b: (highlightColor.b * (1 - shade) + shadowColor.b * shade) * scaled,\n        a: (highlightColor.a * (1 - shade) + shadowColor.a * shade) * scaled,\n      };\n\n      // Fill in result color value\n      offset = (pixelY * width + pixelX) * 4;\n      shadeData[offset] =\n        scaledAccentColor.r * (1 - shade) + compositeShadeColor.r;\n      shadeData[offset + 1] =\n        scaledAccentColor.g * (1 - shade) + compositeShadeColor.g;\n      shadeData[offset + 2] =\n        scaledAccentColor.b * (1 - shade) + compositeShadeColor.b;\n      // Key opacity on the scaledSlope to improve legibility by increasing higher elevation rates' contrast\n      shadeData[offset + 3] =\n        elevationData[offset + 3] *\n        data.opacity *\n        clamp *\n        Math.sin(scaledSlope);\n    }\n  }\n\n  return new ImageData(shadeData, width, height);\n}\n","/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport Layer from 'ol/layer/Layer.js';\nimport LayerGroup from 'ol/layer/Group.js';\nimport MVT from 'ol/format/MVT.js';\nimport Map from 'ol/Map.js';\nimport Raster from 'ol/source/Raster.js';\nimport Source from 'ol/source/Source.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource, {defaultLoadFunction} from 'ol/source/VectorTile.js';\nimport View from 'ol/View.js';\nimport derefLayers from '@mapbox/mapbox-gl-style-spec/deref.js';\nimport {\n  METERS_PER_UNIT,\n  equivalent,\n  fromLonLat,\n  get as getProjection,\n  getUserProjection,\n} from 'ol/proj.js';\nimport {\n  _colorWithOpacity,\n  stylefunction as applyStyleFunction,\n  stylefunction as applyStylefunction,\n  getValue,\n  styleFunctionArgs,\n} from './stylefunction.js';\nimport {bbox as bboxStrategy} from 'ol/loadingstrategy.js';\nimport {createXYZ} from 'ol/tilegrid.js';\nimport {\n  defaultResolutions,\n  fetchResource,\n  getFilterCache,\n  getFunctionCache,\n  getGlStyle,\n  getStyleFunctionKey,\n  getTileJson,\n  getZoomForResolution,\n} from './util.js';\nimport {getFonts} from './text.js';\nimport {getTopLeft} from 'ol/extent.js';\nimport {hillshade} from './shaders.js';\nimport {\n  normalizeSourceUrl,\n  normalizeSpriteUrl,\n  normalizeStyleUrl,\n} from './mapbox.js';\n\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, import(\"./util.js\").ResourceType): (Request|string|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request` or a url `string`. Without a return value,\n * the original request will not be modified.\n * @property {string} [projection='EPSG:3857'] Only useful when working with non-standard projections.\n * Code of a projection registered with OpenLayers. All sources of the style must be provided in this\n * projection. The projection must also have a valid extent defined, which will be used to determine the\n * origin and resolutions of the tile grid for all tiled sources of the style. When provided, the bbox\n * placeholder in tile and geojson urls changes: the default is `{bbox-epsg-3857}`, when projection is e.g.\n * set to `EPSG:4326`, the bbox placeholder will be `{bbox-epsg-4326}`.\n * @property {Array<number>} [resolutions] Only useful when working with non-standard projections.\n * Resolutions for mapping resolution to the `zoom` used in the Mapbox style.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image for an icon name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function be used for icons not in the sprite or to override sprite icons.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n */\n\n/**\n * @typedef {Object} ApplyStyleOptions\n * @property {string} [source=''] Source. Default is `''`, which causes the first source in the\n * style to be used.\n * @property {Array<string>} [layers] Layers. If no source is provided, the layers with the\n * provided ids will be used from the style's `layers` array. All layers need to use the same source.\n * @property {boolean} [updateSource=true] Update or create vector (tile) layer source with parameters\n * specified for the source in the mapbox style definition.\n */\n\n/**\n * @param {import(\"ol/proj/Projection.js\").default} projection Projection.\n * @param {number} [tileSize=512] Tile size.\n * @return {Array<number>} Resolutions.\n */\nfunction getTileResolutions(projection, tileSize = 512) {\n  return projection.getExtent()\n    ? createXYZ({\n        extent: projection.getExtent(),\n        tileSize: tileSize,\n        maxZoom: 22,\n      }).getResolutions()\n    : defaultResolutions;\n}\n\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n  if (!options.accessToken) {\n    options = Object.assign({}, options);\n    const searchParams = new URL(styleUrl).searchParams;\n    // The last search parameter is the access token\n    searchParams.forEach((value, key) => {\n      options.accessToken = value;\n      options.accessTokenParam = key;\n    });\n  }\n  return options;\n}\n\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle` (unless `updateSource` is\n * set to `false`).\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url` and\n * `tileUrlFunction`. When the source projection is the default (`EPSG:3857`), the `tileGrid` will\n * also be overridden. If you'd rather not have ol-mapbox-style modify the source, configure `applyStyle()`\n * with the `updateSource: false` option.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>|Options&ApplyStyleOptions} [sourceOrLayersOrOptions] Options or\n * `source` key or an array of layer `id`s from the Mapbox Style object. When a `source` key is\n * provided, all layers for the specified source will be included in the style function. When layer\n * `id`s are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the first source specified in the glStyle will be rendered.\n * @param {Options&ApplyStyleOptions|string} [optionsOrPath] **Deprecated**. Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} [resolutions] **Deprecated**. Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections, can also be supplied with\n * options.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nexport function applyStyle(\n  layer,\n  glStyle,\n  sourceOrLayersOrOptions = '',\n  optionsOrPath = {},\n  resolutions = undefined\n) {\n  let styleUrl, sourceId;\n  /** @type {Options&ApplyStyleOptions} */\n  let options;\n  let sourceOrLayers;\n  let updateSource = true;\n  if (\n    typeof sourceOrLayersOrOptions !== 'string' &&\n    !Array.isArray(sourceOrLayersOrOptions)\n  ) {\n    options = sourceOrLayersOrOptions;\n    sourceOrLayers = options.source || options.layers;\n    optionsOrPath = options;\n  } else {\n    sourceOrLayers = sourceOrLayersOrOptions;\n  }\n  if (typeof optionsOrPath === 'string') {\n    styleUrl = optionsOrPath;\n    options = {};\n  } else {\n    styleUrl = optionsOrPath.styleUrl;\n    options = optionsOrPath;\n  }\n  if (options.updateSource === false) {\n    updateSource = false;\n  }\n  if (!resolutions) {\n    resolutions = options.resolutions;\n  }\n  if (\n    !styleUrl &&\n    typeof glStyle === 'string' &&\n    !glStyle.trim().startsWith('{')\n  ) {\n    styleUrl = glStyle;\n  }\n  if (styleUrl) {\n    styleUrl = styleUrl.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(styleUrl, options.accessToken);\n    options = completeOptions(styleUrl, options);\n  }\n\n  return new Promise(function (resolve, reject) {\n    // TODO: figure out where best place to check source type is\n    // Note that the source arg is an array of gl layer ids and each must be\n    // dereferenced to get source type to validate\n    getGlStyle(glStyle, options)\n      .then(function (glStyle) {\n        if (glStyle.version != 8) {\n          return reject(new Error('glStyle version 8 required.'));\n        }\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          return reject(\n            new Error('Can only apply to VectorLayer or VectorTileLayer')\n          );\n        }\n\n        const type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n        if (!sourceOrLayers) {\n          sourceId = Object.keys(glStyle.sources).find(function (key) {\n            return glStyle.sources[key].type === type;\n          });\n          sourceOrLayers = sourceId;\n        } else if (Array.isArray(sourceOrLayers)) {\n          sourceId = glStyle.layers.find(function (layer) {\n            return layer.id === sourceOrLayers[0];\n          }).source;\n        } else {\n          sourceId = sourceOrLayers;\n        }\n        if (!sourceId) {\n          return reject(new Error(`No ${type} source found in the glStyle.`));\n        }\n\n        function assignSource() {\n          if (!updateSource) {\n            return Promise.resolve();\n          }\n          if (layer instanceof VectorTileLayer) {\n            return setupVectorSource(\n              glStyle.sources[sourceId],\n              styleUrl,\n              options\n            ).then(function (source) {\n              const targetSource = layer.getSource();\n              if (!targetSource) {\n                layer.setSource(source);\n              } else if (source !== targetSource) {\n                targetSource.setTileUrlFunction(source.getTileUrlFunction());\n                if (\n                  typeof targetSource.setUrls === 'function' &&\n                  typeof source.getUrls === 'function'\n                ) {\n                  // to get correct keys for tile cache and queue\n                  targetSource.setUrls(source.getUrls());\n                }\n                //@ts-ignore\n                if (!targetSource.format_) {\n                  //@ts-ignore\n                  targetSource.format_ = source.format_;\n                }\n                if (!targetSource.getAttributions()) {\n                  targetSource.setAttributions(source.getAttributions());\n                }\n                if (\n                  targetSource.getTileLoadFunction() === defaultLoadFunction\n                ) {\n                  targetSource.setTileLoadFunction(\n                    source.getTileLoadFunction()\n                  );\n                }\n                if (\n                  equivalent(\n                    targetSource.getProjection(),\n                    source.getProjection()\n                  )\n                ) {\n                  targetSource.tileGrid = source.getTileGrid();\n                }\n              }\n              if (\n                !isFinite(layer.getMaxResolution()) &&\n                !isFinite(layer.getMinZoom())\n              ) {\n                const tileGrid = layer.getSource().getTileGrid();\n                layer.setMaxResolution(\n                  tileGrid.getResolution(tileGrid.getMinZoom())\n                );\n              }\n            });\n          }\n          const glSource = glStyle.sources[sourceId];\n          let source = layer.getSource();\n          if (!source || source.get('mapbox-source') !== glSource) {\n            source = setupGeoJSONSource(glSource, styleUrl, options);\n          }\n          const targetSource = /** @type {VectorSource} */ (layer.getSource());\n          if (!targetSource) {\n            layer.setSource(source);\n          } else if (source !== targetSource) {\n            if (!targetSource.getAttributions()) {\n              targetSource.setAttributions(source.getAttributions());\n            }\n            //@ts-ignore\n            if (!targetSource.format_) {\n              //@ts-ignore\n              targetSource.format_ = source.getFormat();\n            }\n            //@ts-ignore\n            targetSource.url_ = source.getUrl();\n          }\n          return Promise.resolve();\n        }\n\n        let spriteScale, spriteData, spriteImageUrl, style;\n        function onChange() {\n          if (!style && (!glStyle.sprite || spriteData)) {\n            if (options.projection && !resolutions) {\n              const projection = getProjection(options.projection);\n              const units = projection.getUnits();\n              if (units !== 'm') {\n                resolutions = defaultResolutions.map(\n                  (resolution) => resolution / METERS_PER_UNIT[units]\n                );\n              }\n            }\n            style = applyStyleFunction(\n              layer,\n              glStyle,\n              sourceOrLayers,\n              resolutions,\n              spriteData,\n              spriteImageUrl,\n              getFonts,\n              options.getImage\n            );\n            if (!layer.getStyle()) {\n              reject(new Error(`Nothing to show for source [${sourceId}]`));\n            } else {\n              assignSource().then(resolve).catch(reject);\n            }\n          } else if (style) {\n            layer.setStyle(style);\n            assignSource().then(resolve).catch(reject);\n          } else {\n            reject(new Error('Something went wrong trying to apply style.'));\n          }\n        }\n\n        if (glStyle.sprite) {\n          const sprite = new URL(\n            normalizeSpriteUrl(\n              glStyle.sprite,\n              options.accessToken,\n              styleUrl || location.href\n            )\n          );\n          spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n          const sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n          let spriteUrl =\n            sprite.origin +\n            sprite.pathname +\n            sizeFactor +\n            '.json' +\n            sprite.search;\n\n          new Promise(function (resolve, reject) {\n            fetchResource('Sprite', spriteUrl, options)\n              .then(resolve)\n              .catch(function (error) {\n                spriteUrl =\n                  sprite.origin + sprite.pathname + '.json' + sprite.search;\n                fetchResource('Sprite', spriteUrl, options)\n                  .then(resolve)\n                  .catch(reject);\n              });\n          })\n            .then(function (spritesJson) {\n              if (spritesJson === undefined) {\n                reject(new Error('No sprites found.'));\n              }\n              spriteData = spritesJson;\n              spriteImageUrl =\n                sprite.origin +\n                sprite.pathname +\n                sizeFactor +\n                '.png' +\n                sprite.search;\n              if (options.transformRequest) {\n                const transformed =\n                  options.transformRequest(spriteImageUrl, 'SpriteImage') ||\n                  spriteImageUrl;\n                if (transformed instanceof Request) {\n                  spriteImageUrl = transformed;\n                }\n              }\n              onChange();\n            })\n            .catch(function (err) {\n              reject(\n                new Error(\n                  `Sprites cannot be loaded: ${spriteUrl}: ${err.message}`\n                )\n              );\n            });\n        } else {\n          onChange();\n        }\n      })\n      .catch(reject);\n  });\n}\n\nconst emptyObj = {};\n\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n  glStyle.layers.some(function (layer) {\n    if (layer.type === 'background') {\n      if (mapOrLayer instanceof Layer) {\n        mapOrLayer.setBackground(function (resolution) {\n          return getBackgroundColor(layer, resolution, options, {});\n        });\n        return true;\n      }\n      if (mapOrLayer instanceof Map || mapOrLayer instanceof LayerGroup) {\n        mapOrLayer.getLayers().push(setupBackgroundLayer(layer, options, {}));\n        return true;\n      }\n    }\n  });\n}\n\n/**\n * Applies properties of the Mapbox Style's first `background` layer to the\n * provided map or layer (group).\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|import(\"ol/layer/Base.js\").default} mapOrLayer OpenLayers Map or layer (group).\n * @param {Object|string} glStyle Mapbox Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nexport function applyBackground(mapOrLayer, glStyle, options = {}) {\n  return getGlStyle(glStyle, options).then(function (glStyle) {\n    setFirstBackground(mapOrLayer, glStyle, options);\n  });\n}\n\nfunction getSourceIdByRef(layers, ref) {\n  let sourceId;\n  layers.some(function (layer) {\n    if (layer.id == ref) {\n      sourceId = layer.source;\n      return true;\n    }\n  });\n  return sourceId;\n}\n\nfunction extentFromTileJSON(tileJSON, projection) {\n  const bounds = tileJSON.bounds;\n  if (bounds) {\n    const ll = fromLonLat([bounds[0], bounds[1]], projection);\n    const tr = fromLonLat([bounds[2], bounds[3]], projection);\n    return [ll[0], ll[1], tr[0], tr[1]];\n  }\n  return getProjection(projection).getExtent();\n}\n\nfunction sourceOptionsFromTileJSON(glSource, tileJSON, options) {\n  const tileJSONSource = new TileJSON({\n    tileJSON: tileJSON,\n    tileSize: glSource.tileSize || tileJSON.tileSize || 512,\n  });\n  const tileJSONDoc = tileJSONSource.getTileJSON();\n  const tileGrid = tileJSONSource.getTileGrid();\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const extent = extentFromTileJSON(tileJSONDoc, projection);\n  const projectionExtent = projection.getExtent();\n  const minZoom = tileJSONDoc.minzoom || 0;\n  const maxZoom = tileJSONDoc.maxzoom || 22;\n  /** @type {import(\"ol/source/VectorTile.js\").Options} */\n  const sourceOptions = {\n    attributions: tileJSONSource.getAttributions(),\n    projection: projection,\n    tileGrid: new TileGrid({\n      origin: projectionExtent\n        ? getTopLeft(projectionExtent)\n        : tileGrid.getOrigin(0),\n      extent: extent || tileGrid.getExtent(),\n      minZoom: minZoom,\n      resolutions: getTileResolutions(projection, tileJSON.tileSize).slice(\n        0,\n        maxZoom + 1\n      ),\n      tileSize: tileGrid.getTileSize(0),\n    }),\n  };\n  if (Array.isArray(tileJSONDoc.tiles)) {\n    sourceOptions.urls = tileJSONDoc.tiles;\n  } else {\n    sourceOptions.url = tileJSONDoc.tiles;\n  }\n  return sourceOptions;\n}\n\nfunction getBackgroundColor(glLayer, resolution, options, functionCache) {\n  const background = {\n    id: glLayer.id,\n    type: glLayer.type,\n  };\n  const layout = glLayer.layout || {};\n  const paint = glLayer.paint || {};\n  background['paint'] = paint;\n  const zoom = getZoomForResolution(\n    resolution,\n    options.resolutions || defaultResolutions\n  );\n  let bg, opacity;\n  if (paint['background-color'] !== undefined) {\n    bg = getValue(\n      background,\n      'paint',\n      'background-color',\n      zoom,\n      emptyObj,\n      functionCache\n    );\n  }\n  if (paint['background-opacity'] !== undefined) {\n    opacity = getValue(\n      background,\n      'paint',\n      'background-opacity',\n      zoom,\n      emptyObj,\n      functionCache\n    );\n  }\n  return layout.visibility == 'none'\n    ? undefined\n    : _colorWithOpacity(bg, opacity);\n}\n\n/**\n * @param {Object} glLayer Mapbox Style layer object.\n * @param {Options} options Options.\n * @param {Object} functionCache Cache for functions.\n * @return {Layer} OpenLayers layer.\n */\nfunction setupBackgroundLayer(glLayer, options, functionCache) {\n  const div = document.createElement('div');\n  div.className = 'ol-mapbox-style-background';\n  div.style.position = 'absolute';\n  div.style.width = '100%';\n  div.style.height = '100%';\n  return new Layer({\n    source: new Source({}),\n    render(frameState) {\n      const color = getBackgroundColor(\n        glLayer,\n        frameState.viewState.resolution,\n        options,\n        functionCache\n      );\n      div.style.backgroundColor = color;\n      return div;\n    },\n  });\n}\n\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nexport function setupVectorSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options)\n      .then(function ({tileJson, tileLoadFunction}) {\n        const sourceOptions = sourceOptionsFromTileJSON(\n          glSource,\n          tileJson,\n          options\n        );\n        sourceOptions.tileLoadFunction = tileLoadFunction;\n        sourceOptions.format = new MVT();\n        resolve(new VectorTileSource(sourceOptions));\n      })\n      .catch(reject);\n  });\n}\n\nfunction setupVectorLayer(glSource, styleUrl, options) {\n  const layer = new VectorTileLayer({\n    declutter: true,\n    visible: false,\n  });\n  setupVectorSource(glSource, styleUrl, options)\n    .then(function (source) {\n      source.set('mapbox-source', glSource);\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\nfunction getBboxTemplate(projection) {\n  const projCode = projection ? projection.getCode() : 'EPSG:3857';\n  return `{bbox-${projCode.toLowerCase().replace(/[^a-z0-9]/g, '-')}}`;\n}\n\nfunction setupRasterLayer(glSource, styleUrl, options) {\n  const layer = new TileLayer();\n  getTileJson(glSource, styleUrl, options)\n    .then(function ({tileJson, tileLoadFunction}) {\n      const source = new TileJSON({\n        interpolate:\n          options.interpolate === undefined ? true : options.interpolate,\n        transition: 0,\n        crossOrigin: 'anonymous',\n        tileJSON: tileJson,\n      });\n      source.tileGrid = sourceOptionsFromTileJSON(\n        glSource,\n        tileJson,\n        options\n      ).tileGrid;\n      if (options.projection) {\n        //@ts-ignore\n        source.projection = getProjection(options.projection);\n      }\n      const getTileUrl = source.getTileUrlFunction();\n      if (tileLoadFunction) {\n        source.setTileLoadFunction(tileLoadFunction);\n      }\n      source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n        const bboxTemplate = getBboxTemplate(projection);\n        let src = getTileUrl(tileCoord, pixelRatio, projection);\n        if (src.indexOf(bboxTemplate) != -1) {\n          const bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n          src = src.replace(bboxTemplate, bbox.toString());\n        }\n        return src;\n      });\n      source.set('mapbox-source', glSource);\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\n/**\n *\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string} styleUrl Style url\n * @param {Options} options ol-mapbox-style options.\n * @return {ImageLayer<Raster>} The raster layer\n */\nfunction setupHillshadeLayer(glSource, styleUrl, options) {\n  const tileLayer = setupRasterLayer(glSource, styleUrl, options);\n  /** @type {ImageLayer<Raster>} */\n  const layer = new ImageLayer({\n    source: new Raster({\n      operationType: 'image',\n      operation: hillshade,\n      sources: [tileLayer],\n    }),\n  });\n  return layer;\n}\n\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n  const geoJsonFormat = options.projection\n    ? new GeoJSON({dataProjection: options.projection})\n    : new GeoJSON();\n  const data = glSource.data;\n  const sourceOptions = {};\n  if (typeof data == 'string') {\n    const geoJsonUrl = normalizeSourceUrl(\n      data,\n      options.accessToken,\n      options.accessTokenParam || 'access_token',\n      styleUrl || location.href\n    );\n    if (/\\{bbox-[0-9a-z-]+\\}/.test(geoJsonUrl)) {\n      const extentUrl = (extent, resolution, projection) => {\n        const bboxTemplate = getBboxTemplate(projection);\n        return geoJsonUrl.replace(bboxTemplate, `${extent.join(',')}`);\n      };\n      const source = new VectorSource({\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n        loader: (extent, resolution, projection, success, failure) => {\n          const url =\n            typeof extentUrl === 'function'\n              ? extentUrl(extent, resolution, projection)\n              : extentUrl;\n          fetchResource('GeoJSON', url, options)\n            .then((json) => {\n              const features = /** @type {*} */ (\n                source\n                  .getFormat()\n                  .readFeatures(json, {featureProjection: projection})\n              );\n              source.addFeatures(features);\n              success(features);\n            })\n            .catch((response) => {\n              source.removeLoadedExtent(extent);\n              failure();\n            });\n        },\n        strategy: bboxStrategy,\n      });\n      source.set('mapbox-source', glSource);\n      return source;\n    }\n    const source = new VectorSource({\n      attributions: glSource.attribution,\n      format: geoJsonFormat,\n      url: geoJsonUrl,\n      loader: (extent, resolution, projection, success, failure) => {\n        fetchResource('GeoJSON', geoJsonUrl, options)\n          .then((json) => {\n            const features = /** @type {*} */ (\n              source\n                .getFormat()\n                .readFeatures(json, {featureProjection: projection})\n            );\n            source.addFeatures(features);\n            success(features);\n          })\n          .catch((response) => {\n            source.removeLoadedExtent(extent);\n            failure();\n          });\n      },\n    });\n    return source;\n  }\n  sourceOptions.features = geoJsonFormat.readFeatures(data, {\n    featureProjection: getUserProjection() || 'EPSG:3857',\n  });\n\n  const source = new VectorSource(\n    Object.assign(\n      {\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n      },\n      sourceOptions\n    )\n  );\n  source.set('mapbox-source', glSource);\n  return source;\n}\n\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n  return new VectorLayer({\n    declutter: true,\n    source: setupGeoJSONSource(glSource, styleUrl, options),\n    visible: false,\n  });\n}\n\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n  let zoom = null;\n  return function (event) {\n    if (\n      glLayer.paint &&\n      'raster-opacity' in glLayer.paint &&\n      event.frameState.viewState.zoom !== zoom\n    ) {\n      zoom = event.frameState.viewState.zoom;\n      delete functionCache[glLayer.id];\n      updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n    }\n  };\n}\n\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n  const opacity = getValue(\n    glLayer,\n    'paint',\n    'raster-opacity',\n    zoom,\n    emptyObj,\n    functionCache\n  );\n  layer.setOpacity(opacity);\n}\n\nfunction manageVisibility(layer, mapOrGroup) {\n  function onChange() {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    if (!glStyle) {\n      return;\n    }\n    const mapboxLayers = derefLayers(glStyle.layers);\n    const layerMapboxLayerids = layer.get('mapbox-layers');\n    const visible = mapboxLayers\n      .filter(function (mapboxLayer) {\n        return layerMapboxLayerids.includes(mapboxLayer.id);\n      })\n      .some(function (mapboxLayer) {\n        return (\n          !mapboxLayer.layout ||\n          !mapboxLayer.layout.visibility ||\n          mapboxLayer.layout.visibility === 'visible'\n        );\n      });\n    if (layer.get('visible') !== visible) {\n      layer.setVisible(visible);\n    }\n  }\n  layer.on('change', onChange);\n  onChange();\n}\n\nexport function setupLayer(glStyle, styleUrl, glLayer, options) {\n  const functionCache = getFunctionCache(glStyle);\n  const glLayers = glStyle.layers;\n  const type = glLayer.type;\n\n  const id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n  const glSource = glStyle.sources[id];\n  let layer;\n  if (type == 'background') {\n    layer = setupBackgroundLayer(glLayer, options, functionCache);\n  } else if (glSource.type == 'vector') {\n    layer = setupVectorLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster') {\n    layer = setupRasterLayer(glSource, styleUrl, options);\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true\n    );\n    layer.on('prerender', prerenderRasterLayer(glLayer, layer, functionCache));\n  } else if (glSource.type == 'geojson') {\n    layer = setupGeoJSONLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster-dem' && glLayer.type == 'hillshade') {\n    const hillshadeLayer = setupHillshadeLayer(glSource, styleUrl, options);\n    layer = hillshadeLayer;\n    hillshadeLayer.getSource().on('beforeoperations', function (event) {\n      const data = event.data;\n      data.resolution = event.resolution;\n      const zoom = getZoomForResolution(\n        event.resolution,\n        options.resolutions || defaultResolutions\n      );\n      data.encoding = glSource.encoding;\n      data.vert =\n        5 *\n        getValue(\n          glLayer,\n          'paint',\n          'hillshade-exaggeration',\n          zoom,\n          emptyObj,\n          functionCache\n        );\n      data.sunAz = getValue(\n        glLayer,\n        'paint',\n        'hillshade-illumination-direction',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n      data.sunEl = 35;\n      data.opacity = 0.3;\n      data.highlightColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-highlight-color',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n      data.shadowColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-shadow-color',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n      data.accentColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-accent-color',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n    });\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true\n    );\n  }\n  const glSourceId = id;\n  if (layer) {\n    layer.set('mapbox-source', glSourceId);\n  }\n  return layer;\n}\n\n/**\n * @param {*} glStyle Mapbox Style.\n * @param {Map|LayerGroup} mapOrGroup Map or layer group.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the style is loaded.\n */\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n  const promises = [];\n\n  let view = null;\n  if (mapOrGroup instanceof Map) {\n    view = mapOrGroup.getView();\n    if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n      const projection = options.projection\n        ? getProjection(options.projection)\n        : view.getProjection();\n      view = new View(\n        Object.assign(view.getProperties(), {\n          maxResolution:\n            defaultResolutions[0] / METERS_PER_UNIT[projection.getUnits()],\n          projection: options.projection || view.getProjection(),\n        })\n      );\n      mapOrGroup.setView(view);\n    }\n\n    if ('center' in glStyle && !view.getCenter()) {\n      view.setCenter(fromLonLat(glStyle.center, view.getProjection()));\n    }\n    if ('zoom' in glStyle && view.getZoom() === undefined) {\n      view.setResolution(\n        defaultResolutions[0] /\n          METERS_PER_UNIT[view.getProjection().getUnits()] /\n          Math.pow(2, glStyle.zoom)\n      );\n    }\n    if (!view.getCenter() || view.getZoom() === undefined) {\n      view.fit(view.getProjection().getExtent(), {\n        nearest: true,\n        size: mapOrGroup.getSize(),\n      });\n    }\n  }\n  mapOrGroup.set('mapbox-style', glStyle);\n  mapOrGroup.set('mapbox-metadata', {styleUrl, options});\n\n  const glLayers = glStyle.layers;\n  let layerIds = [];\n\n  let layer, glSourceId, id;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    const type = glLayer.type;\n    if (type == 'heatmap') {\n      //FIXME Unsupported layer type\n      throw new Error(`${type} layers are not supported`);\n    } else {\n      id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n      // this technique assumes gl layers will be in a particular order\n      if (!id || id != glSourceId) {\n        if (layerIds.length) {\n          promises.push(\n            finalizeLayer(\n              layer,\n              layerIds,\n              glStyle,\n              styleUrl,\n              mapOrGroup,\n              options\n            )\n          );\n          layerIds = [];\n        }\n\n        layer = setupLayer(glStyle, styleUrl, glLayer, options);\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          layerIds = [];\n        }\n        glSourceId = layer.get('mapbox-source');\n      }\n      layerIds.push(glLayer.id);\n    }\n  }\n  promises.push(\n    finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options)\n  );\n  return Promise.all(promises);\n}\n\n/**\n * Loads and applies a Mapbox Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroupOrElement Either an existing\n * OpenLayers Map instance, or a HTML element, or the id of a HTML element that will be\n * the target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox Style document). When passed\n * as style url, layers will be added to the map when the Mapbox Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nexport function apply(mapOrGroupOrElement, style, options = {}) {\n  let promise;\n  /** @type {Map|LayerGroup} */\n  let mapOrGroup;\n  if (\n    typeof mapOrGroupOrElement === 'string' ||\n    mapOrGroupOrElement instanceof HTMLElement\n  ) {\n    mapOrGroup = new Map({\n      target: mapOrGroupOrElement,\n    });\n  } else {\n    mapOrGroup = mapOrGroupOrElement;\n  }\n\n  if (typeof style === 'string') {\n    const styleUrl = style.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(style, options.accessToken);\n    options = completeOptions(styleUrl, options);\n\n    promise = new Promise(function (resolve, reject) {\n      getGlStyle(style, options)\n        .then(function (glStyle) {\n          processStyle(glStyle, mapOrGroup, styleUrl, options)\n            .then(function () {\n              resolve(mapOrGroup);\n            })\n            .catch(reject);\n        })\n        .catch(function (err) {\n          reject(new Error(`Could not load ${style}: ${err.message}`));\n        });\n    });\n  } else {\n    promise = new Promise(function (resolve, reject) {\n      processStyle(\n        style,\n        mapOrGroup,\n        !options.styleUrl || options.styleUrl.startsWith('data:')\n          ? location.href\n          : normalizeStyleUrl(options.styleUrl, options.accessToken),\n        options\n      )\n        .then(function () {\n          resolve(mapOrGroup);\n        })\n        .catch(reject);\n    });\n  }\n\n  return promise;\n}\n\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n */\nexport function finalizeLayer(\n  layer,\n  layerIds,\n  glStyle,\n  styleUrl,\n  mapOrGroup,\n  options = {}\n) {\n  let minZoom = 24;\n  let maxZoom = 0;\n  const glLayers = glStyle.layers;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    if (layerIds.indexOf(glLayer.id) !== -1) {\n      minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n      maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n    }\n  }\n  return new Promise(function (resolve, reject) {\n    const setStyle = function () {\n      const source = layer.getSource();\n      if (!source || source.getState() === 'error') {\n        reject(\n          new Error(\n            'Error accessing data for source ' + layer.get('mapbox-source')\n          )\n        );\n        return;\n      }\n      if ('getTileGrid' in source) {\n        const tileGrid =\n          /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */ (\n            source\n          ).getTileGrid();\n        if (tileGrid) {\n          const sourceMinZoom = tileGrid.getMinZoom();\n          if (minZoom > 0 || sourceMinZoom > 0) {\n            layer.setMaxResolution(\n              Math.min(\n                defaultResolutions[minZoom],\n                tileGrid.getResolution(sourceMinZoom)\n              ) + 1e-9\n            );\n          }\n          if (maxZoom < 24) {\n            layer.setMinResolution(defaultResolutions[maxZoom] + 1e-9);\n          }\n        }\n      } else {\n        if (minZoom > 0) {\n          layer.setMaxResolution(defaultResolutions[minZoom] + 1e-9);\n        }\n      }\n      if (\n        source instanceof VectorSource ||\n        source instanceof VectorTileSource\n      ) {\n        applyStyle(\n          /** @type {import(\"ol/layer/Vector\").default|import(\"ol/layer/VectorTile\").default} */ (\n            layer\n          ),\n          glStyle,\n          layerIds,\n          Object.assign({styleUrl: styleUrl}, options)\n        )\n          .then(function () {\n            manageVisibility(layer, mapOrGroup);\n            resolve();\n          })\n          .catch(reject);\n      } else {\n        resolve();\n      }\n    };\n\n    layer.set('mapbox-layers', layerIds);\n    const layers = mapOrGroup.getLayers();\n    if (layers.getArray().indexOf(layer) === -1) {\n      layers.push(layer);\n    }\n\n    if (layer.getSource()) {\n      setStyle();\n    } else {\n      layer.once('change:source', setStyle);\n    }\n  });\n}\n\n/**\n * Get the Mapbox Layer object for the provided `layerId`.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {string} layerId Mapbox Layer id.\n * @return {Object} Mapbox Layer object.\n */\nexport function getMapboxLayer(mapOrGroup, layerId) {\n  const style = mapOrGroup.get('mapbox-style');\n  const layerStyle = style.layers.find(function (layer) {\n    return layer.id === layerId;\n  });\n  return layerStyle;\n}\n\n/**\n * Add a new Mapbox Layer object to the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Mapbox Layer object.\n * @param {string} [beforeLayerId] Optional id of the Mapbox Layer before the new layer that will be added.\n * @return {Promise<void>} Resolves when the added layer is available.\n */\nexport function addMapboxLayer(mapOrGroup, mapboxLayer, beforeLayerId) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  let spliceIndex;\n  let sourceIndex = -1;\n  if (beforeLayerId !== undefined) {\n    const beforeMapboxLayer = getMapboxLayer(mapOrGroup, beforeLayerId);\n    if (beforeMapboxLayer === undefined) {\n      throw new Error(`Layer with id \"${beforeLayerId}\" not found.`);\n    }\n    spliceIndex = mapboxLayers.indexOf(beforeMapboxLayer);\n  } else {\n    spliceIndex = mapboxLayers.length;\n  }\n  let sourceOffset;\n  if (\n    spliceIndex > 0 &&\n    mapboxLayers[spliceIndex - 1].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex - 1;\n    sourceOffset = -1;\n  } else if (\n    spliceIndex < mapboxLayers.length &&\n    mapboxLayers[spliceIndex].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex;\n    sourceOffset = 0;\n  }\n  if (sourceIndex === -1) {\n    const {options, styleUrl} = mapOrGroup.get('mapbox-metadata');\n    const layer = setupLayer(glStyle, styleUrl, mapboxLayer, options);\n    if (beforeLayerId) {\n      const beforeLayer = getLayer(mapOrGroup, beforeLayerId);\n      const beforeLayerIndex = mapOrGroup\n        .getLayers()\n        .getArray()\n        .indexOf(beforeLayer);\n      mapOrGroup.getLayers().insertAt(beforeLayerIndex, layer);\n    }\n    mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n    return finalizeLayer(\n      layer,\n      [mapboxLayer.id],\n      glStyle,\n      styleUrl,\n      mapOrGroup,\n      options\n    );\n  }\n\n  if (mapboxLayers.some((layer) => layer.id === mapboxLayer.id)) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" already exists.`);\n  }\n  const sourceLayerId = mapboxLayers[sourceIndex].id;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, sourceLayerId)\n      )\n    ];\n  mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      const layerIndex = sourceOrLayers.indexOf(sourceLayerId) + sourceOffset;\n      sourceOrLayers.splice(layerIndex, 0, mapboxLayer.id);\n    }\n    applyStyleFunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayers[sourceIndex].id).changed();\n  }\n  return Promise.resolve();\n}\n\n/**\n * Update a Mapbox Layer object in the style. The map will be re-rendered with the new style.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Updated Mapbox Layer object.\n */\nexport function updateMapboxLayer(mapOrGroup, mapboxLayer) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  const index = mapboxLayers.findIndex(function (layer) {\n    return layer.id === mapboxLayer.id;\n  });\n  if (index === -1) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" not found.`);\n  }\n  const oldLayer = mapboxLayers[index];\n  if (oldLayer.source !== mapboxLayer.source) {\n    throw new Error(\n      'Updated layer and previous version must use the same source.'\n    );\n  }\n  delete getFunctionCache(glStyle)[mapboxLayer.id];\n  delete getFilterCache(glStyle)[mapboxLayer.id];\n  mapboxLayers[index] = mapboxLayer;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, mapboxLayer.id)\n      )\n    ];\n  if (args) {\n    applyStylefunction.apply(undefined, args);\n  } else {\n    getLayer(mapOrGroup, mapboxLayer.id).changed();\n  }\n}\n\n/**\n * Remove a Mapbox Layer object from the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string|Object} mapboxLayerIdOrLayer Mapbox Layer id or Mapbox Layer object.\n */\nexport function removeMapboxLayer(mapOrGroup, mapboxLayerIdOrLayer) {\n  const mapboxLayerId =\n    typeof mapboxLayerIdOrLayer === 'string'\n      ? mapboxLayerIdOrLayer\n      : mapboxLayerIdOrLayer.id;\n  const layer = getLayer(mapOrGroup, mapboxLayerId);\n  /** @type {Array<Object>} */\n  const layerMapboxLayers = layer.get('mapbox-layers');\n  if (layerMapboxLayers.length === 1) {\n    throw new Error(\n      'Cannot remove last Mapbox layer from an OpenLayers layer.'\n    );\n  }\n  layerMapboxLayers.splice(layerMapboxLayers.indexOf(mapboxLayerId), 1);\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const layers = glStyle.layers;\n  layers.splice(\n    layers.findIndex((layer) => layer.id === mapboxLayerId),\n    1\n  );\n  const args = styleFunctionArgs[getStyleFunctionKey(glStyle, layer)];\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      sourceOrLayers.splice(\n        sourceOrLayers.findIndex((layer) => layer === mapboxLayerId),\n        1\n      );\n    }\n    applyStylefunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayerId).changed();\n  }\n}\n\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox Style\n * `layer`. Note that multiple Mapbox Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} layerId Mapbox Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nexport function getLayer(map, layerId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const mapboxLayers = layers[i].get('mapbox-layers');\n    if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n      return /** @type {Layer} */ (layers[i]);\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get the OpenLayers layer instances for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nexport function getLayers(map, sourceId) {\n  const result = [];\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    if (layers[i].get('mapbox-source') === sourceId) {\n      result.push(/** @type {Layer} */ (layers[i]));\n    }\n  }\n  return result;\n}\n\n/**\n * Get the OpenLayers source instance for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Source} OpenLayers source instance.\n */\nexport function getSource(map, sourceId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const source = /** @type {Layer} */ (layers[i]).getSource();\n    if (layers[i].get('mapbox-source') === sourceId) {\n      return source;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nexport function setFeatureState(mapOrLayer, feature, state) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState) {\n      if (state) {\n        featureState[feature.id] = state;\n      } else {\n        delete featureState[feature.id];\n      }\n      layers[i].changed();\n    } else {\n      throw new Error(`Map or layer for source \"${feature.source}\" not found.`);\n    }\n  }\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nexport function getFeatureState(mapOrLayer, feature) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState && featureState[feature.id]) {\n      return featureState[feature.id];\n    }\n  }\n  return undefined;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t592: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkol_mapbox_style\"] = self[\"webpackChunkol_mapbox_style\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));"],"names":["deferred","UnitBezier","p1x","p1y","p2x","p2y","this","cx","bx","ax","cy","by","ay","module","exports","prototype","sampleCurveX","t","sampleCurveY","sampleCurveDerivativeX","solveCurveX","x","epsilon","t0","t1","t2","x2","i","Math","abs","d2","solve","kCSSColorTable","clamp_css_byte","round","clamp_css_float","f","parse_css_int","str","length","parseFloat","parseInt","parse_css_float","css_hue_to_rgb","m1","m2","h","css_str","iv","replace","toLowerCase","slice","substr","op","indexOf","ep","fname","params","split","alpha","pop","s","l","e","read","buffer","offset","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","NaN","Infinity","pow","write","value","c","rt","isNaN","floor","log","LN2","fontWeights","thin","hairline","light","book","regular","normal","plain","roman","standard","medium","bold","heavy","black","fat","poster","sp","italicRE","fontCache","fonts","size","lineHeight","cssData","Array","isArray","weight","style","fontFamilies","ii","parts","maybeWeight","w","test","previousPart","startsWith","fontFamily","join","push","assert","err","AssertionError","Error","captureStackTrace","name","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","len","extraLen","realloc","writePackedVarint","arr","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","destroy","readFields","readField","result","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","readDouble","b","p","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","decode","subarray","readUtf8TextDecoder","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","min","set","finish","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","writeBytes","writeRawMessage","fn","obj","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","r","a","n","o","exp","u","sqrt","max","_maxEntries","_minEntries","ceil","clear","children","minX","minY","maxX","maxY","leaf","height","all","_all","data","search","toBBox","collides","load","insert","_build","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","Property","CollectionEvent","constructor","element","index","super","Collection","array","options","on","once","un","unique_","unique","array_","assertUnique_","updateLength_","getLength","extend","forEach","getArray","item","get","insertAt","elem","dispatchEvent","ADD","removeAt","prev","REMOVE","setAt","except","disposed","dispose","disposeInternal","ImageWrapper","extent","resolution","pixelRatio","stateOrLoader","pixelRatio_","state","IDLE","image_","loader","changed","CHANGE","getExtent","getImage","getPixelRatio","getResolution","getState","LOADING","requestResolution","then","image","HTMLImageElement","ImageBitmap","HTMLCanvasElement","HTMLVideoElement","LOADED","catch","error","ERROR","console","finally","setImage","setResolution","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","LOAD","src","decodeFallback","Promise","resolve","reject","handleLoad","unlisten","handleError","removeEventListener","addEventListener","EMPTY","ImageTile","tileCoord","crossOrigin","tileLoadFunction","crossOrigin_","src_","key","Image","unlisten_","tileLoadFunction_","unlistenImage_","handleImageError_","ctx","fillStyle","fillRect","canvas","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","bind","MapRenderer","Disposable","map","map_","dispatchRenderEvent","frameState","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","rotation","center","forEachFeatureAtCoordinate","coordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","managed","feature","layer","geometry","call","projection","translatedCoordinate","offsets","canWrapX","projectionExtent","worldWidth","layerStates","layerStatesArray","numLayers","matches","tmpCoord","j","layerState","hasRenderer","layerRenderer","getRenderer","source","getSource","coordinates","getWrapX","order","distanceSq","some","hasFeatureAtCoordinate","undefined","getMap","renderFrame","flushDeclutterItems","scheduleExpireIconCache","canExpireCache","postRenderFunctions","expireIconCache","expire","Map","fontChangeListenerKey_","ObjectEventType","PROPERTYCHANGE","redrawText","element_","document","createElement","position","width","zIndex","className","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","declutterLayers_","hasListener","event","parentNode","removeChild","display","PRECOMPOSE","declutterLayers","previousElement","layerIndex","sourceState","getSourceState","unrender","render","POSTCOMPOSE","layers","renderDeclutter","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","getCoordinateFromPixel","preventDefault","stopPropagation","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","TOUCHMOVE","passive","emulateClick_","pointerEvent","newEvent","clearTimeout","setTimeout","updateActivePointers_","id","pointerId","target","Object","values","handlePointerUp_","defaultPrevented","isMouseActionButton_","button","PointerEvent","defineProperty","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","Control","pointerEvents","target_","setTarget","setMap","getOverlayContainerStopEvent","appendChild","MapEventType","mapEvent","getElementById","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","getAttributions","getAttributionsCollapsible","setCollapsible","updateElement_","attributions","visible","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","compassClassName","add","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","resetNorth_","view","getView","getRotation","PI","animate","easing","setRotation","transform","contains","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","Interaction","handleEvent","setActive","getActive","mapBrowserEvent","active","zoomByDelta","anchor","newResolution","getResolutionForZoom","delta_","stopEvent","browserEvent","shiftKey","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","var_args","conditions","arguments","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","Pointer","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroid","update","adjustCenterInternal","begin","distance","getDistance","angle","getAngle","getCenterInternal","centerpx","getPixelFromCoordinateInternal","dest","getCoordinateFromPixelInternal","cos","sin","animateInternal","getConstrainedCenter","endInteraction","lastAngle_","getConstraints","getSize","theta","atan2","adjustRotationInternal","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","setPixels","createOrUpdateGeometry","setCoordinates","Polygon","getGeometry","DragBoxEvent","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","out_","out","rotatedExtent","rotatedExtentForGeometry","getResolutionForExtentInternal","factor","clone","scale","fitInternal","defaultCondition_","pixelDelta_","pixelDelta","KEYDOWN","keyEvent","Key","mapUnitsDelta","deltaX","deltaY","currentCenter","pan","platformModifierKey","KEYPRESS","totalDelta_","lastDelta_","maxDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","WHEEL","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","now","Date","getConstrainResolution","adjustZoom","timeLeft","handleWheelZoom_","setMouseAnchor","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","lastDistance_","lastScaleDelta_","scaleDelta","dx","dy","adjustResolutionInternal","direction","removeLayerMapProperty","Layer","setMapInternal","getLayers","setLayerMapProperty","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","MapProperty","View","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotate","rotateOptions","attribution","attributionOptions","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","y","lastIndex","firstIndex","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","overlays_","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","TileQueue","getTilePriority","handleTileChange_","addChangeListener","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","setProperties","viewOptions","setView","CollectionEventType","addOverlayInternal_","getId","toString","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","viewportSize","scaleX","scaleY","eventPosition","changedTouches","getTarget","getProjection","getOverlayById","setLayers","group","collection","getLoadingOrNotReady","getLayerStatesArray","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","tile","tileSourceKey","tileCenter","tileResolution","handleMapBrowserEvent","eventType","rootNode","documentElement","interactionsArray","propagationStopped","handlePostRender","tileQueue","isEmpty","maxTotalLoading","maxNewLoads","hints","viewHints","ViewHint","ANIMATING","INTERACTING","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","RENDERCOMPLETE","resolveConstraints","CONTEXTMENU","unobserve","ShadowRoot","host","setSize","Composite","observe","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","Group","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","isDef","getHints","declutterTree","usedTiles","wantedTiles","mapId","renderTargets","nextCenter","nextResolution","nextRotation","nextExtent","getCount","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","offsetHeight","getClientRects","oldSize","setViewportSize","ObjectEvent","oldValue","BaseObject","values_","hasOwnProperty","getKeys","keys","getProperties","assign","getPropertiesInternal","hasProperties","notify","listener","removeChangeListener","silent","applyProperties","unset","Observable","revision_","getRevision","onInternal","onceInternal","ol_key","unInternal","unByKey","Tile","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getKey","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","start","inTransition","endTransition","DROP","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","EventType","TileState","tileKey","newLoads","TileRange","containsXY","containsTileRange","tileRange","equals","getHeight","getWidth","intersects","createOrUpdate","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","cappedMaxRes","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","properties","ViewProperty","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","isGlobal","resolutions","capped","z","createSnapToResolutions","defaultMaxResolution","degrees","getMetersPerUnit","defaultMinResolution","defaultMaxZoom","power","tolerance","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createRotationConstraint","constraints_","setCenterInternal","oldPadding","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","args","animationCount","animationCallback","series","animation","complete","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","jj","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","currentResolution","getCenter","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","getViewStateAndExtent","nearest","baseLevel","fit","geometryOrExtent","getType","userProjection","cosAngle","sinAngle","coords","getFlatCoordinates","stride","getStride","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRot","centerX","centerY","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustResolution","adjustRotation","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","endInteractionInternal","targetZoom","targetRes","returnValue","binarySearch","haystack","needle","comparator","mid","cmp","ascending","found","linearFindNearest","candidate","reverseSubArray","tmp","extension","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","res","assertion","errorMessage","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromString","cache","cacheSize","g","exec","el","body","rgb","fromNamed","hasAlpha","Number","normalize","fromStringInternal_","asArray","asColorLike","levels","info","warn","level","coordinate1","coordinate2","wrapX","worldsAway","sourceExtentWidth","getWorldsAway","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","variant","families","family","createCanvasContext2D","canvasPool","settings","shift","OffscreenCanvas","getContext","releaseCanvas","context","clearRect","replaceNode","newNode","oldNode","parent","replaceChild","removeNode","node","removeChildren","lastChild","replaceChildren","oldChildren","childNodes","oldChild","newChild","easeIn","easeOut","inAndOut","linear","listen","originalListener","eventsKey","listenOnce","unlistenByKey","BLUR","CLEAR","DRAGENTER","DRAGOVER","FOCUS","RESIZE","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","includes","isString","evt","dispatching","pendingRemovals","propagate","pr","getListeners","boundingExtent","extendCoordinate","closestSquaredDistanceXY","containsCoordinate","containsExtent","extent1","extent2","coordinateRelationship","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","createEmpty","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","extendFlatCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getCorner","corner","getForViewAndSize","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","_boundingExtentXYs","wrapAndSliceX","isFinite","withCredentials","loadFeaturesXhr","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","defaultFeatureProjection","supportedMediaTypes","getReadOptions","getUnits","setWorldExtent","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","transformed","decimals","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","setGeometryName","getGeometryName","getStyle","setStyle","getStyleFunction","handleGeometryChange_","styles","createStyleFunction","setId","GeometryCollection","Geometry","geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","closestPointXY","closestPoint","minSquaredDistance","computeExtent","getGeometries","cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","intersectsExtent","sx","sy","translate","clonedGeometries","JSONFeature","readFeatureFromObject","getObject","readFeaturesFromObject","object","readGeometryFromObject","readProjectionFromObject","JSON","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","Point","readPointGeometry","LineString","readLineStringGeometry","readPolygonGeometry","MultiPoint","readMultiPointGeometry","MultiLineString","readMultiLineStringGeometry","MultiPolygon","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","getCoordinates","writePointGeometry","writeLineStringGeometry","right","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","objects","TRUE","FALSE","VOID","memoizeOne","lastResult","lastArgs","lastThis","called","nextArgs","toPromise","getter","promiseGetter","tmpTransform","extent_","extentRevision_","simplifyTransformedInternal","revision","simplifyTransformed","coord","getClosestPoint","point","intersectsCoordinate","simplify","destination","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","layout","flatMidpoint_","flatMidpointRevision_","maxDeltaRevision_","setFlatCoordinates","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","extrapolate","getCoordinateAt","getFlatMidpoint","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","setLayout","ends","ends_","getLayout","lineStrings","appendLineString","multiLineString","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","simplifiedEnds","appendPoint","multiPoint","squaredDistance","getPoint","getPoints","points","endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","thisLayout","polygons","thisEndss","polygon","appendPolygon","newEndss","multiPolygon","getOrientedFlatCoordinates","getEndss","getFlatInteriorPoints","flatCenters","getInteriorPoints","simplifiedEndss","getPolygon","prevEnds","getPolygons","lastEnds","LinearRing","SimpleGeometry","inflate","deflate","flatInteriorPointRevision_","flatInteriorPoint_","appendLinearRing","linearRing","orient","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","fromExtent","getFirstCoordinate","getLastCoordinate","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","twiceArea","linearRingss","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","getInteriorPointOfArray","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","interpolatePoint","dimension","cumulativeLengths","lineStringCoordinateAtM","lo","hi","m0","lineStringsCoordinateAtM","intersectsLineString","coordinatesExtent","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","lineStringLength","linearRingIsClockwise","edge","linearRingsAreOriented","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","inflateEnds","prevEndIndex","ret","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","snap","quantize","dx1","dy1","dx2","dy2","quantizeArray","quantizeMultiArray","transform2D","anchorX","anchorY","k","ua","navigator","userAgent","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","self","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","BaseLayer","background_","background","OPACITY","opacity","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","state_","getBackground","getClassName","getLayerState","getZIndex","getOpacity","getVisible","getLayersArray","states","EXTENT","setBackground","setExtent","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","names","namedType","specific","overlapsType","oneType","otherType","LiteralExpression","CallExpression","operator","newParsingContext","variables","encoded","parser","parsers","parseCallExpression","Ops","Get","Var","Any","All","Not","Resolution","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","createParser","withArgs","arg","operation","minArgs","maxArgs","argType","argCount","expression","gotType","expectedType","argValidator","returnType","buildExpression","expected","actual","compileExpression","compileAssertionExpression","nameExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","atan","compileNumericExpression","compileMatchExpression","flatStylesToStyleFunction","flatStyles","parsingContext","evaluators","buildStyle","evaluationContext","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","text","Text","setText","setFill","setBackgroundFill","setStroke","setBackgroundStroke","setFont","setMaxAngle","setOffsetX","setOffsetY","setOverflow","placement","setPlacement","setRepeat","setScale","setRotateWithView","textAlign","setTextAlign","justify","setJustify","textBaseline","setTextBaseline","setPadding","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","anchorXUnits","optionalIconAnchorUnits","anchorYUnits","property","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","declutterMode","optionalDeclutterMode","icon","Icon","setDisplacement","setAnchor","buildIcon","pointsName","requireNumber","radius","radius1","radius2","shape","RegularShape","buildShape","evaluateRadius","circle","Circle","setRadius","buildCircle","buildImage","evaluateZIndex","Style","empty","fill","stroke","evaluateColor","colorLikeEvaluator","Fill","setColor","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","Stroke","setWidth","lineCap","setLineCap","lineJoin","setLineJoin","setLineDash","setLineDashOffset","setMiterLimit","evaluator","requireSizeLike","BaseVectorLayer","baseOptions","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getFeatures","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","rules","compiledRules","rule","styleLength","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","rulesToStyleFunction","toStyleLike","GroupEvent","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","currentLayers","ownLayerState","defaultZIndex","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","SOURCE","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","getData","isVisible","getMapInternal","find","layerExtent","inView","prepareFrame","MAP","arrayLayerState","createRenderer","PRELOAD","USE_INTERIM_TILES_ON_ERROR","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","compositionContext_","opacity_","renderWorlds","executorGroup","vectorSource","getLayer","snapToPixel","endWorld","world","getRenderTransform","execute","setupCompositionContext_","compositionContext","releaseCompositionContext_","globalAlpha","drawImage","pixelTransform","inversePixelTransform","canvasTransform","useContainer","replayGroup","PRERENDER","POSTRENDER","containerReused","preRender","clipped","clipUnrotated","restore","postRender","transforms","featureCallback","lastIndexOf","executorGroups","renderIfReadyAndVisible","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","declutterBuilderGroup","userTransform","userExtent","loadFeatures","styleFunction","dirty","renderFeature","getFeaturesInExtent","replayGroupInstructions","ExecutorGroup","getOverlaps","builderGroup","VectorLayer","BaseVector","IMAGE_REPLAYS","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","renderedLayerRevision_","renderedPixelToCoordinateTransform_","tmpTransform_","prepareTile","updateExecutorGroup_","tileImageNeedsRender_","getTile","hifi","wantedResolution","getRenderMode","renderTileImage_","isDrawableTile","hasContext","getTileImage","layerRevision","renderedTiles","builderState","getReplayState","renderedResolution","renderedRevision","renderedRenderOrder","sourceTileGrid","getTileGrid","tileExtent","getTileGridForProjection","getTileCoordExtent","wrappedTileCoord","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","declutterExecutorGroups","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","tmpExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","tileGrid","hitExtent","declutteredFeatures","renderedProjection","getTileCoordForCoordAndResolution","loadingSourceTiles","tilePixel","reduce","accumulator","tileSize","getTileSize","getZForResolution","zDirection","getTileCoordCenter","tiles","getTileRenderTransform","worldOffset","renderMode","replayTypes","tileSource","clips","clipZs","hasExecutors","currentZ","contextSaved","currentClip","getClipCoords","clip","save","beginPath","moveTo","lineTo","replayState","renderedTileResolution","renderedTileRevision","renderPixelRatio","getTilePixelSize","renderScale","setTransform","pixelScale","VectorTileLayer","preload","useInterimTilesOnError","renderMode_","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","bbox","clamp","squaredSegmentDistance","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","modulo","lerp","toFixed","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","Projection","code","units","global","worldExtent","getPointResolution","cosh","PROJECTIONS","EPSG4326Projection","axisOrientation","metersPerUnit","sourceCode","getCode","destinationCode","DEFAULT_RADIUS","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","input","output","identityTransform","addProjection","projectionLike","pointResolution","getPointResolutionFunc","projUnits","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","fromLonLat","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","transformExtent","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceUnits","userUnits","projections2","forwardTransform","inverseTransform","code_","units_","worldExtent_","axisOrientation_","global_","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getAxisOrientation","setGlobal","getDefaultTileGrid","setDefaultTileGrid","setGetPointResolution","METERS_PER_UNIT","RenderEvent","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","interval","referenceWidth","isAvailable","fontStyle","fontWeight","available","referenceFont","measureTextWidth","check","done","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","measureAndCacheTextWidth","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","contextInstructions","executeLabelInstructions","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CUSTOM","endGeometry","BEGIN_GEOMETRY","reverseHitDetectionInstructions","reverse","instruction","END_GEOMETRY","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","lineDash","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","createFill","fillInstruction","SET_FILL_STYLE","applyStroke","createStroke","SET_STROKE_STYLE","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","rotateWithView_","scale_","width_","declutterMode_","declutterImageWithText_","myBegin","DRAW_IMAGE","sharedData","getAnchor","origin","getOrigin","getHitDetectionImage","getRotateWithView","getScaleArray","getDeclutterMode","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","MOVE_TO_LINE_TO","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","CIRCLE","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","maxAngle","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","substring","p1","p2","p3","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","fillStates","strokeStates","textStates","widths_","labels_","createLabel","textKey","fillKey","strokeKey","strokeState","fillState","textState","textIsArray","strokeWidth","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","strokeInstruction","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","baseline","execute_","pixelCoordinates","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","BEGIN_PATH","arc","CLOSE_PATH","closePath","rotateWithView","labelWithAnchor","textOffsetX","textOffsetY","geometryWidths","backgroundFill","backgroundStroke","widthIndex","imageArgs","imageDeclutterBox","DRAW_CHARS","measurePixelRatio","pixelRatioScale","textScale","cachedWidths","pathLength","textLength","drawChars","cc","part","FILL","STROKE","executeHitDetection","ORDER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","executors","instructionByZindex","candidates","contextSize","newContext","willReadFrequently","indexes","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","imageData","getImageData","idx","zs","executor","builderTypes","Instruction","beginPathInstruction","closePathInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","CanvasTextBuilder","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","textStrokeState_","textState_","textKey_","fillKey_","strokeKey_","geometryType","beg","keep","saveTextStates_","p0","repeat","flatOffset","oo","chunk","chunkBegin","range","drawChars_","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getRepeat","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","getOffsetX","getOffsetY","textRotateWithView","textRotation","getText","CanvasImmediateRenderer","VectorContext","context_","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","getGeometryFunction","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","getImageSize","imgContext","getScale","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","createLoadedTileFinder","forEachLoadedTile","ImageState","loadImage","imageState","pixelContext","tempTransform","pixelContext_","col","row","backgroundColor","layerClassName","firstElementChild","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedPixelRatio","newTiles_","tmpTileRange_","tileState","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","getGutterForProjection","viewResolution","viewCenter","sourceRevision","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","getInterpolate","getOpaque","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","alphaChanged","postRenderFunction","expireCache","tileCallback","tileCount","useTile","updateCacheSize","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","getImageState","imageBuilderGroup","imageReplay","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","unlistenImageChange","listenImageChange","renderGeometry","renderFeatureInternal","getHitDetectionRenderer","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","renderEdges","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","step","ReprojTile","targetTileGrid","getTileFunction","errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","maxSourceExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","calculateSourceExtent","sourceRange","srcX","srcY","reproject_","leftToLoad","sourceListenKey","unlistenSources_","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","ERROR_THRESHOLD","createSnapToN","createSnapToZero","hasArea","toSize","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","attributionLike","maxEntries","rbush_","items_","extents","items","getAll","getInExtent","forEach_","forEachInExtent","rbush","VectorSourceEvent","Event","VectorSource","loader_","format_","url_","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","setLoader","setUrl","CircleStyle","displacement","getRadius","getDisplacement","radius_","color_","taintedTestContext","IconImage","imageState_","size_","tainted_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","calculateScale","wantedWidth","wantedHeight","normalizedAnchor_","anchorOrigin_","anchorXUnits_","anchorYUnits_","cacheKey","iconImage_","iconImage","offset_","offsetOrigin_","origin_","initialOptions_","iconImageSize","shared","cache_","cacheSize_","maxCacheSize_","maxCacheSize","ImageStyle","scaleArray_","displacement_","hitDetectionCanvas_","radius2_","stroke_","renderOptions_","getRadius2","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","r1","r2","miterRatio","bevelAdd","aa","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","startAngle","angle0","radiusC","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","toFunction","defaultStyles","createDefaultStyle","font_","textAlign_","justify_","repeat_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","tmp_","create","reset","multiply","transform1","transform2","a1","d1","e1","f1","a2","e2","f2","setFromArray","makeScale","compose","makeInverse","det","transformStringDiv","transformString","abstract","uidCounter_","getUid","ol_uid","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","static","rgba","toArray","toArray01","toArray01PremultipliedAlpha","white","transparent","red","blue","convertLiteral","getInterpolateOperator","parameters","colorSpace","getFallback","propertySpec","defaultValue","default","convertPropertyFunction","getFunctionType","stop","appendStopPair","fixupDegenerateStepCurve","base","curve","isStep","interpolated","convertTokenString","re","literal","ParsingError","message","Scope","bindings","has","NullType","kind","ObjectType","ValueType","CollatorType","FormattedType","ResolvedImageType","itemType","N","valueMemberTypes","checkSubtype","memberType","isValidType","provided","allowedTypes","isValidNativeType","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","lhs","rhs","resolvedLocale","resolvedOptions","FormattedSection","fontStack","textColor","sections","unformatted","section","serialize","serialized","validateRGBA","isValue","mixed","typeOf","Literal","evaluate","eachChild","outputDefined","types","string","number","boolean","Assertion","parsed","FormatExpression","firstArg","nextTokenMayBeObject","lastExpression","content","evaluatedContent","ImageExpression","evaluatedImageName","availableImages","Coercion","parseColor","child","geometryTypes","globals","featureState","formattedSection","_parseColorCache","canonical","featureTileCoord","featureDistanceData","canonicalID","distanceFromCenter","dX","dY","bearing","cached","CompoundExpression","_evaluate","definition","definitions","availableOverloads","overloads","signature","signatureContext","registry","path","scope","parsedArgs","argParseFailed","errors","signatures","stringifySignature","actualTypes","CollatorExpression","updateBBox","boxWithinBox","bbox1","bbox2","getTileCoordinates","lat","tilesAtZoom","onBoundary","pointWithinPolygon","rings","inside","ring","len2","pointWithinPolygons","twoSided","q1","q2","det1","det2","lineIntersectLine","vectorP","lineIntersectPolygon","lineStringWithinPolygon","lineStringWithinPolygons","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","getTilePoints","pointBBox","shifts","tilePoints","getTileLines","lineBBox","tileLines","tileLine","Within","geojson","tilePolygon","tilePolygons","pointsWithinPolygons","linesWithinPolygons","isStateConstant","isGlobalPropertyConstant","boundExpression","ParsingContext","expr","_parse","annotate","typeAnnotation","Expr","isConstant","ec","isTypeAnnotation","childrenConstant","currentValue","nextValue","lowerIndex","upperIndex","currentIndex","Step","labels","outputs","outputType","labelKey","valueKey","stopCount","to","Xn","Zn","t3","deg2rad","rad2deg","xyz2lab","lab2xyz","xyz2rgb","rgb2xyz","rgbToLab","rgbColor","labToRgb","labColor","interpolateHue","lab","forward","hcl","hclColor","interpolation","lower","upper","exponentialInterpolation","controlPoints","rest","interpolationFactor","outputLower","outputUpper","lowerValue","upperValue","difference","Coalesce","needsAnnotation","firstImage","Let","binding","At","In","IndexOf","fromIndex","inputType","cases","otherwise","labelContext","MAX_SAFE_INTEGER","sortedLabels","groupedByOutput","outputLookup","outputIndex","coerceLabel","Case","branches","_","Slice","beginIndex","endIndex","isComparableType","eqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","hasUntypedArgument","lt","Equals","NotEquals","LessThanOrEqual","GreaterThanOrEqual","NumberFormat","currency","unit","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","Length","expressions","varargs","register","pitch","heatmapDensity","lineProgress","skyRadialProgress","accumulated","E","LN10","asin","isSupportedScript","toUpperCase","StyleExpression","spec","_warningHistory","_evaluator","_defaultValue","_enumValues","evaluateWithoutErrorHandling","createExpression","enum","formatted","resolvedImage","getExpectedType","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","zoomStops","interpolationType","createPropertyExpression","isFeatureConstant","isZoomConstant","zoomCurve","findZoomCurve","childResult","deepUnbundle","unbundledValue","valueOf","unbundle","layerType","needGeometry","needFeature","isExpressionFilter","convertFilter","filterExp","staticFilter","isDynamicFilter","unionDynamicBranches","collapseDynamicBooleanExpressions","extractStaticFilter","filterSpec","latest","compiledStaticFilter","filterFunc","globalProperties","dynamicFilterFunc","compiledDynamicFilter","dynamicFilter","geometryNeeded","dynamicConditionExpressions","collapsedExpression","subExpression","isBranchingDynamically","convertComparisonOp","convertNegation","filters","convertInOp","convertHasOp","deref","derefLayers","ref","VectorTile","features_","onLoad","setFeatures","onError","getKeyZXY","fromKey","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","expandUrl","urls","startCharCode","stopCharCode","charCode","mapboxBaseUrl","getMapboxPath","normalizeStyleUrl","token","mapboxPath","decodeURI","URL","location","href","normalizeSourceUrl","tokenParam","styleUrl","urlObject","searchParams","functionCacheByStyleId","filterCacheByStyleId","styleId","getStyleId","glStyle","functionCache","defaultResolutions","createCanvas","pendingRequests","fetchResource","resourceType","metadata","request","transformedRequest","transformRequest","Request","headers","pendingRequest","fetch","response","ok","json","getGlStyle","glStyleOrUrl","trim","accessToken","tilejsonCache","getTileJson","glSource","promise","arrayBuffer","blob","createObjectURL","revokeObjectURL","normalizedSourceUrl","accessTokenParam","tileJson","tileUrl","scheme","drawIconHalo","spriteImage","spriteImageData","haloWidth","haloColor","imageCanvas","imageContext","smoothstep","drawSDF","gamma","putImageData","hairSpacePool","applyLetterSpacing","letterSpacing","textWithLetterSpacing","lines","joinSpaceString","ll","getMeasureContext","measureCache","wrapText","em","hardLines","wrappedText","words","maxWidth","word","testLine","prevWidth","nextWidth","next","lineWords","lastWord","fontFamilyRegEx","stripQuotesRegEx","loadedFontFamilies","hasFontFamily","styleSheets","styleSheet","cssRules","cssRule","cssText","processedFontFamilies","getFonts","templateUrl","fontsKey","fontDescriptions","cssFont","fontDescription","fontUrl","querySelector","markup","rel","head","expressionData","rawExpression","compiledExpression","emptyObj","zoomObj","renderFeatureCoordinates","getValue","layoutOrPaint","layerId","functions","isExpr","convertIdentityFunction","zoomAndFeatureDependent","featureDependent","zoomDependent","tokens","featureFunctionParameters","featureFunctionStops","convertZoomAndPropertyFunction","convertZoomFunction","convertFunction","getIconDeclutterMode","evaluateFilter","filterCache","renderTransparentEnabled","colorWithOpacity","templateRegEx","fromTemplate","recordLayer","stylefunction","olLayer","sourceOrLayers","spriteData","spriteImageUrl","version","spriteImageSize","spriteImageUnSDFed","blobUrl","worker","postMessage","action","allLayers","layersBySourceLayer","mapboxLayers","iconImageCache","patternCache","mapboxSource","sourceLayer","textHalo","onlyLayer","featureBelongsToLayer","stylesLength","layerData","paint","visibility","minzoom","maxzoom","strokeColor","fillIcon","icon_cache_key","pattern","createPattern","iconImg","skipLabel","textLineHeight","textSize","maxTextWidth","hasImage","placementAngle","styleGeom","imageElement","iconRotationAlignment","geom","iconSize","iconColor","iconCacheKey","iconOptions","sdf","circleRadius","circleStrokeColor","circleColor","circleStrokeWidth","cache_key","fontArray","textField","chunkFont","textTransform","wrappedLabel","textAnchor","symbolSpacing","textHaloWidth","textOffset","textTranslate","vOffset","hOffset","textRotationAlignment","textJustify","halfTextSize","textPadding","BaseImageLayer","CanvasImageLayerRenderer","imageLayer","imageSource","imageExtent","imageMapWidth","imageMapHeight","imageResolution","imageResolutionX","imageResolutionY","dw","dh","previousAlpha","BaseImage","featureClass_","featureClass","layerName_","layerName","layers_","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","ctor","pbfLayers","layersPBFReader","pbfLayer","readRawFeature","layerPBFReader","featurePBFReader","ImageCanvas","error_","getError","handleLoad_","fromResolutionLike","ReprojImage","getImageFunction","Triangulation","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","wantedExtent_","wantedResolution_","static_","setResolutions","findNearestResolution","getImageInternal","requestExtent","requestWidth","requestHeight","getRequestExtent","handleImageChange","BaseTileLayer","BaseTile","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","pruneExceptNewestZ","tmpTileCoord","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","opt_direction","fullTileRanges","getForProjection","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","createXYZ","xyzOptions","gridOptions","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileCoordForTileUrlFunction","withinExtentAndZ","TileSourceEvent","hasImageData","ImageData","createMinion","workerHasImageData","newWorkerImageData","buffers","meta","imageOps","numBuffers","numBytes","byteLength","images","Uint8ClampedArray","arrays","pixels","createWorker","config","onMessage","lib","Worker","Blob","Buffer","Processor","threads","_imageOps","workers","_onWorkerMessage","minion","terminated","terminate","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","_enqueue","_dispatch","job","slices","_resolveJob","createImageData","newImageData","RasterSourceEvent","RasterSource","processor_","operationType_","operationType","threads_","createLayer","createLayers","useResolutions_","processSources_","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","attributionGetter","sourceAttribution","setOperation","updateFrameState_","allSourcesReady_","imageDatas","onWorkerComplete_","sharedContext","layerOrSource","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","setTileLoadFunction","setTileUrlFunction","defaultTileLoadFunction","imageTile","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","tileJSON_","jsonp","errback","callbackParam","script","cleanup","async","timer","handleTileJSONResponse","handleTileJSONError","client","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","gridExtent","attributionExtent","VectorRenderTile","replayState_","errorTileKeys","renderedTileZ","defaultLoadFunction","sourceTileCache","tileGrids_","tileFeatures","usedSourceTiles","getCacheKeyForTileKey","sourceZ","sourceTileState","listenChange","sourceTileKey","coordKey","hillshade","elevationImage","elevationData","shadeData","dp","twoPi","halfPi","sunEl","sunAz","cosSunEl","sinSunEl","highlightColor","shadowColor","accentColor","encoding","pixelX","pixelY","z0","z1","dzdx","dzdy","aspect","accent","scaled","shade","scaledAccentColor","compositeShadeColor","slopeScaleBase","scaledSlope","cosIncidence","calculateElevation","vert","getTileResolutions","completeOptions","sourceOrLayersOrOptions","optionsOrPath","sourceId","updateSource","Vector","assignSource","setupVectorSource","targetSource","setupGeoJSONSource","spriteScale","onChange","sprite","normalizeSpriteUrl","sizeFactor","spriteUrl","pathname","spritesJson","mapOrLayer","getBackgroundColor","setupBackgroundLayer","setFirstBackground","getSourceIdByRef","sourceOptionsFromTileJSON","tileJSONSource","tileJSONDoc","bounds","tr","extentFromTileJSON","sourceOptions","glLayer","bg","div","getBboxTemplate","setupRasterLayer","getTileUrl","bboxTemplate","geoJsonFormat","GeoJSON","geoJsonUrl","extentUrl","setupLayer","glLayers","setupVectorLayer","updateRasterLayerProperties","prerenderRasterLayer","setupGeoJSONLayer","hillshadeLayer","Raster","setupHillshadeLayer","glSourceId","processStyle","mapOrGroup","promises","layerIds","finalizeLayer","mapOrGroupOrElement","HTMLElement","sourceMinZoom","layerMapboxLayerids","mapboxLayer","manageVisibility","setFeatureState","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","O","chunkIds","notFulfilled","fulfilled","enumerable","prop","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal"],"sourceRoot":""}