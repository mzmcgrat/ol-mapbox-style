{"version":3,"file":"common.js","mappings":"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EACA3oB,EACAyuH,EACApT,IAIE2d,EAAkBzE,GACtB35G,EACA,QACA,mBACA+N,EACA3oB,EACAyuH,EACApT,GAEI4d,EAAcxD,GAClBlB,GACE35G,EACA,QACA,eACA+N,EACA3oB,EACAyuH,EACApT,GAEFkZ,GACE35G,EACA,QACA,iBACA+N,EACA3oB,EACAyuH,EACApT,IAGE6d,EAAoB3E,GACxB35G,EACA,QACA,sBACA+N,EACA3oB,EACAyuH,EACApT,GAEI8d,EACJL,EACA,IACAC,EACA,IACAE,EACA,IACAC,EACA,IACAF,EAAgB,GAChB,IACAA,EAAgB,GAElBlB,EAAUlB,EAAeuC,GACpBrB,IACHA,EAAU,IAAIzzD,EAAA,EAAO,CACnBR,OAAQi1D,EACRtqB,aAAc,CAACwqB,EAAgB,IAAKA,EAAgB,IACpDn0D,OACEk0D,GAAqBG,EAAoB,EACrC,IAAI1zD,EAAA,EAAO,CACT9tD,MAAOwhH,EACPzjF,MAAOsjF,SAEThmH,EACN6xD,KAAMq0D,EACF,IAAIj0D,EAAA,EAAK,CACPvvB,MAAOwjF,SAETlmH,EACJqwD,cAAe,SAEjBwzD,EAAeuC,GAAarB,GAE9BjzH,EAAM4R,SAASqhH,GACfx3D,EAAOz7D,EAAMwxF,UACbxxF,EAAM27D,aAAQztD,GACdlO,EAAM0O,iBAAYR,GAClBlO,EAAM8wD,UAAU9kD,GAChBsnH,GAAW,CACb,CAGA,GAAI,eAAgB9zE,EAAQ,CAC1B4zE,EAAWz4H,KAAKM,MACdy0H,GACE35G,EACA,SACA,YACA+N,EACA3oB,EACAyuH,EACApT,IAGJ,MAAM+d,EAAY7E,GAChB35G,EACA,SACA,YACA+N,EACA3oB,EACAyuH,EACApT,GAEF2c,EAAiBzD,GACf35G,EACA,SACA,mBACA+N,EACA3oB,EACAyuH,EACApT,GAEFl8B,EAAO,GACLm0C,EACIA,EACE8F,EACA5K,EAAQQ,SACJR,EAAQQ,SAAS,oBACjBj8G,GAENqmH,EACJnB,EACAD,GAEG74C,EAAKxkC,SAAS,gBACjBwkC,GAAQ,eAEVqyC,EAAgB+C,GACd35G,EACA,SAC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","sources":["webpack://ol-mapbox-style/webpack/runtime/chunk loaded","webpack://ol-mapbox-style/./node_modules/@mapbox/unitbezier/index.js","webpack://ol-mapbox-style/./node_modules/color-name/index.js","webpack://ol-mapbox-style/./node_modules/csscolorparser/csscolorparser.js","webpack://ol-mapbox-style/./node_modules/ieee754/index.js","webpack://ol-mapbox-style/./node_modules/mapbox-to-css-font/index.js","webpack://ol-mapbox-style/./node_modules/nanoassert/index.js","webpack://ol-mapbox-style/./node_modules/pbf/index.js","webpack://ol-mapbox-style/./node_modules/rbush/rbush.min.js","webpack://ol-mapbox-style/./node_modules/ol/Collection.js","webpack://ol-mapbox-style/./node_modules/ol/CollectionEventType.js","webpack://ol-mapbox-style/./node_modules/ol/Disposable.js","webpack://ol-mapbox-style/./node_modules/ol/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/Image.js","webpack://ol-mapbox-style/./node_modules/ol/ImageState.js","webpack://ol-mapbox-style/./node_modules/ol/ImageTile.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Map.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Composite.js","webpack://ol-mapbox-style/./node_modules/ol/MapEvent.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEvent.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEventType.js","webpack://ol-mapbox-style/./node_modules/ol/pointer/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEventHandler.js","webpack://ol-mapbox-style/./node_modules/ol/MapEventType.js","webpack://ol-mapbox-style/./node_modules/ol/MapProperty.js","webpack://ol-mapbox-style/./node_modules/ol/control/Control.js","webpack://ol-mapbox-style/./node_modules/ol/control/Attribution.js","webpack://ol-mapbox-style/./node_modules/ol/control/Rotate.js","webpack://ol-mapbox-style/./node_modules/ol/control/Zoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Property.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Interaction.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Pointer.js","webpack://ol-mapbox-style/./node_modules/ol/events/condition.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragPan.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragRotate.js","webpack://ol-mapbox-style/./node_modules/ol/render/Box.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragBox.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragZoom.js","webpack://ol-mapbox-style/./node_modules/ol/events/Key.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/KeyboardPan.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/KeyboardZoom.js","webpack://ol-mapbox-style/./node_modules/ol/Kinetic.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/PinchRotate.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/PinchZoom.js","webpack://ol-mapbox-style/./node_modules/ol/Map.js","webpack://ol-mapbox-style/./node_modules/ol/control/defaults.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/defaults.js","webpack://ol-mapbox-style/./node_modules/ol/Object.js","webpack://ol-mapbox-style/./node_modules/ol/ObjectEventType.js","webpack://ol-mapbox-style/./node_modules/ol/Observable.js","webpack://ol-mapbox-style/./node_modules/ol/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/structs/PriorityQueue.js","webpack://ol-mapbox-style/./node_modules/ol/TileQueue.js","webpack://ol-mapbox-style/./node_modules/ol/TileRange.js","webpack://ol-mapbox-style/./node_modules/ol/TileState.js","webpack://ol-mapbox-style/./node_modules/ol/ViewProperty.js","webpack://ol-mapbox-style/./node_modules/ol/centerconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/resolutionconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/View.js","webpack://ol-mapbox-style/./node_modules/ol/ViewHint.js","webpack://ol-mapbox-style/./node_modules/ol/array.js","webpack://ol-mapbox-style/./node_modules/ol/asserts.js","webpack://ol-mapbox-style/./node_modules/color-space/rgb.js","webpack://ol-mapbox-style/./node_modules/color-space/xyz.js","webpack://ol-mapbox-style/./node_modules/color-space/luv.js","webpack://ol-mapbox-style/./node_modules/color-space/lchuv.js","webpack://ol-mapbox-style/./node_modules/color-parse/index.js","webpack://ol-mapbox-style/./node_modules/color-space/hsl.js","webpack://ol-mapbox-style/./node_modules/ol/color.js","webpack://ol-mapbox-style/./node_modules/color-rgba/index.js","webpack://ol-mapbox-style/./node_modules/ol/colorlike.js","webpack://ol-mapbox-style/./node_modules/ol/console.js","webpack://ol-mapbox-style/./node_modules/ol/coordinate.js","webpack://ol-mapbox-style/./node_modules/ol/css.js","webpack://ol-mapbox-style/./node_modules/ol/dom.js","webpack://ol-mapbox-style/./node_modules/ol/easing.js","webpack://ol-mapbox-style/./node_modules/ol/events.js","webpack://ol-mapbox-style/./node_modules/ol/events/Event.js","webpack://ol-mapbox-style/./node_modules/ol/events/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/events/Target.js","webpack://ol-mapbox-style/./node_modules/ol/extent.js","webpack://ol-mapbox-style/./node_modules/ol/extent/Relationship.js","webpack://ol-mapbox-style/./node_modules/ol/featureloader.js","webpack://ol-mapbox-style/./node_modules/ol/geom/GeometryCollection.js","webpack://ol-mapbox-style/./node_modules/ol/format/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/format/JSONFeature.js","webpack://ol-mapbox-style/./node_modules/ol/format/GeoJSON.js","webpack://ol-mapbox-style/./node_modules/ol/functions.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Geometry.js","webpack://ol-mapbox-style/./node_modules/ol/geom/LineString.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiLineString.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiPoint.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiPolygon.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Point.js","webpack://ol-mapbox-style/./node_modules/ol/geom/LinearRing.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Polygon.js","webpack://ol-mapbox-style/./node_modules/ol/geom/SimpleGeometry.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/area.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/center.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/closest.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/contains.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/deflate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/inflate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/interiorpoint.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/interpolate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/intersectsextent.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/length.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/reverse.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/orient.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/segments.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/simplify.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/transform.js","webpack://ol-mapbox-style/./node_modules/ol/has.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Base.js","webpack://ol-mapbox-style/./node_modules/ol/expr/expression.js","webpack://ol-mapbox-style/./node_modules/ol/expr/cpu.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/style.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseVector.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Group.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Property.js","webpack://ol-mapbox-style/./node_modules/ol/layer/TileProperty.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Vector.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/VectorTile.js","webpack://ol-mapbox-style/./node_modules/ol/loadingstrategy.js","webpack://ol-mapbox-style/./node_modules/ol/math.js","webpack://ol-mapbox-style/./node_modules/ol/obj.js","webpack://ol-mapbox-style/./node_modules/ol/proj/epsg3857.js","webpack://ol-mapbox-style/./node_modules/ol/proj/epsg4326.js","webpack://ol-mapbox-style/./node_modules/ol/proj/projections.js","webpack://ol-mapbox-style/./node_modules/ol/proj/transforms.js","webpack://ol-mapbox-style/./node_modules/ol/sphere.js","webpack://ol-mapbox-style/./node_modules/ol/proj.js","webpack://ol-mapbox-style/./node_modules/ol/proj/Projection.js","webpack://ol-mapbox-style/./node_modules/ol/proj/Units.js","webpack://ol-mapbox-style/./node_modules/ol/render/Event.js","webpack://ol-mapbox-style/./node_modules/ol/render/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/render/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/render/VectorContext.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Builder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/textpath.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Executor.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Instruction.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/linechunk.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/straightchunk.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/TextBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Immediate.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/hitdetect.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/vector.js","webpack://ol-mapbox-style/./node_modules/ol/reproj.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Triangulation.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/common.js","webpack://ol-mapbox-style/./node_modules/ol/rotationconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/size.js","webpack://ol-mapbox-style/./node_modules/ol/source/Source.js","webpack://ol-mapbox-style/./node_modules/ol/structs/RBush.js","webpack://ol-mapbox-style/./node_modules/ol/source/VectorEventType.js","webpack://ol-mapbox-style/./node_modules/ol/source/Vector.js","webpack://ol-mapbox-style/./node_modules/ol/style/Circle.js","webpack://ol-mapbox-style/./node_modules/ol/style/Fill.js","webpack://ol-mapbox-style/./node_modules/ol/style/IconImage.js","webpack://ol-mapbox-style/./node_modules/ol/style/Icon.js","webpack://ol-mapbox-style/./node_modules/ol/style/IconImageCache.js","webpack://ol-mapbox-style/./node_modules/ol/style/Image.js","webpack://ol-mapbox-style/./node_modules/ol/style/RegularShape.js","webpack://ol-mapbox-style/./node_modules/ol/style/Stroke.js","webpack://ol-mapbox-style/./node_modules/ol/style/Style.js","webpack://ol-mapbox-style/./node_modules/ol/style/Text.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid/common.js","webpack://ol-mapbox-style/./node_modules/ol/transform.js","webpack://ol-mapbox-style/./node_modules/ol/util.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/color.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/function/convert.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/parsing_error.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/scope.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/collator.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/formatted.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/resolved_image.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/values.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/literal.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/runtime_error.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/assertion.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/format.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/image.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/coercion.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/evaluation_context.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/compound_expression.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/collator.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/within.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/is_constant.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/var.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/parsing_context.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/stops.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/step.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/interpolate.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/color_spaces.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/interpolate.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/coalesce.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/let.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/at.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/in.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/index_of.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/match.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/case.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/slice.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/comparison.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/number_format.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/length.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/result.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/function/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/properties.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/unbundle_jsonlint.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/reference/latest.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/feature_filter/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/ref_properties.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/deref.js","webpack://ol-mapbox-style/./node_modules/ol/tilecoord.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid/TileGrid.js","webpack://ol-mapbox-style/./node_modules/ol/VectorTile.js","webpack://ol-mapbox-style/./node_modules/ol/tileurlfunction.js","webpack://ol-mapbox-style/./src/mapbox.js","webpack://ol-mapbox-style/./src/util.js","webpack://ol-mapbox-style/./src/text.js","webpack://ol-mapbox-style/./src/stylefunction.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseImage.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/ImageLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Image.js","webpack://ol-mapbox-style/./node_modules/ol/format/MVT.js","webpack://ol-mapbox-style/./node_modules/ol/ImageCanvas.js","webpack://ol-mapbox-style/./node_modules/ol/resolution.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Image.js","webpack://ol-mapbox-style/./node_modules/ol/source/Image.js","webpack://ol-mapbox-style/./node_modules/ol/source/common.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseTile.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/structs/LRUCache.js","webpack://ol-mapbox-style/./node_modules/ol/TileCache.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid.js","webpack://ol-mapbox-style/./node_modules/ol/source/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/source/Raster.js","webpack://ol-mapbox-style/./node_modules/ol/source/UrlTile.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileEventType.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileImage.js","webpack://ol-mapbox-style/./node_modules/ol/net.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileJSON.js","webpack://ol-mapbox-style/./node_modules/ol/VectorRenderTile.js","webpack://ol-mapbox-style/./node_modules/ol/source/VectorTile.js","webpack://ol-mapbox-style/./src/shaders.js","webpack://ol-mapbox-style/./src/apply.js","webpack://ol-mapbox-style/./src/MapboxVectorLayer.js","webpack://ol-mapbox-style/webpack/bootstrap","webpack://ol-mapbox-style/webpack/runtime/define property getters","webpack://ol-mapbox-style/webpack/runtime/hasOwnProperty shorthand","webpack://ol-mapbox-style/webpack/runtime/make namespace object","webpack://ol-mapbox-style/webpack/runtime/jsonp chunk loading"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nmodule.exports = UnitBezier;\n\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3.0 * p1x;\n    this.bx = 3.0 * (p2x - p1x) - this.cx;\n    this.ax = 1.0 - this.cx - this.bx;\n\n    this.cy = 3.0 * p1y;\n    this.by = 3.0 * (p2y - p1y) - this.cy;\n    this.ay = 1.0 - this.cy - this.by;\n\n    this.p1x = p1x;\n    this.p1y = p2y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\n\nUnitBezier.prototype.sampleCurveX = function(t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\n\nUnitBezier.prototype.sampleCurveY = function(t) {\n    return ((this.ay * t + this.by) * t + this.cy) * t;\n};\n\nUnitBezier.prototype.sampleCurveDerivativeX = function(t) {\n    return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n};\n\nUnitBezier.prototype.solveCurveX = function(x, epsilon) {\n    if (typeof epsilon === 'undefined') epsilon = 1e-6;\n\n    var t0, t1, t2, x2, i;\n\n    // First try a few iterations of Newton's method -- normally very fast.\n    for (t2 = x, i = 0; i < 8; i++) {\n\n        x2 = this.sampleCurveX(t2) - x;\n        if (Math.abs(x2) < epsilon) return t2;\n\n        var d2 = this.sampleCurveDerivativeX(t2);\n        if (Math.abs(d2) < 1e-6) break;\n\n        t2 = t2 - x2 / d2;\n    }\n\n    // Fall back to the bisection method for reliability.\n    t0 = 0.0;\n    t1 = 1.0;\n    t2 = x;\n\n    if (t2 < t0) return t0;\n    if (t2 > t1) return t1;\n\n    while (t0 < t1) {\n\n        x2 = this.sampleCurveX(t2);\n        if (Math.abs(x2 - x) < epsilon) return t2;\n\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n\n        t2 = (t1 - t0) * 0.5 + t0;\n    }\n\n    // Failure.\n    return t2;\n};\n\nUnitBezier.prototype.solve = function(x, epsilon) {\n    return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n  \"transparent\": [0,0,0,0], \"aliceblue\": [240,248,255,1],\n  \"antiquewhite\": [250,235,215,1], \"aqua\": [0,255,255,1],\n  \"aquamarine\": [127,255,212,1], \"azure\": [240,255,255,1],\n  \"beige\": [245,245,220,1], \"bisque\": [255,228,196,1],\n  \"black\": [0,0,0,1], \"blanchedalmond\": [255,235,205,1],\n  \"blue\": [0,0,255,1], \"blueviolet\": [138,43,226,1],\n  \"brown\": [165,42,42,1], \"burlywood\": [222,184,135,1],\n  \"cadetblue\": [95,158,160,1], \"chartreuse\": [127,255,0,1],\n  \"chocolate\": [210,105,30,1], \"coral\": [255,127,80,1],\n  \"cornflowerblue\": [100,149,237,1], \"cornsilk\": [255,248,220,1],\n  \"crimson\": [220,20,60,1], \"cyan\": [0,255,255,1],\n  \"darkblue\": [0,0,139,1], \"darkcyan\": [0,139,139,1],\n  \"darkgoldenrod\": [184,134,11,1], \"darkgray\": [169,169,169,1],\n  \"darkgreen\": [0,100,0,1], \"darkgrey\": [169,169,169,1],\n  \"darkkhaki\": [189,183,107,1], \"darkmagenta\": [139,0,139,1],\n  \"darkolivegreen\": [85,107,47,1], \"darkorange\": [255,140,0,1],\n  \"darkorchid\": [153,50,204,1], \"darkred\": [139,0,0,1],\n  \"darksalmon\": [233,150,122,1], \"darkseagreen\": [143,188,143,1],\n  \"darkslateblue\": [72,61,139,1], \"darkslategray\": [47,79,79,1],\n  \"darkslategrey\": [47,79,79,1], \"darkturquoise\": [0,206,209,1],\n  \"darkviolet\": [148,0,211,1], \"deeppink\": [255,20,147,1],\n  \"deepskyblue\": [0,191,255,1], \"dimgray\": [105,105,105,1],\n  \"dimgrey\": [105,105,105,1], \"dodgerblue\": [30,144,255,1],\n  \"firebrick\": [178,34,34,1], \"floralwhite\": [255,250,240,1],\n  \"forestgreen\": [34,139,34,1], \"fuchsia\": [255,0,255,1],\n  \"gainsboro\": [220,220,220,1], \"ghostwhite\": [248,248,255,1],\n  \"gold\": [255,215,0,1], \"goldenrod\": [218,165,32,1],\n  \"gray\": [128,128,128,1], \"green\": [0,128,0,1],\n  \"greenyellow\": [173,255,47,1], \"grey\": [128,128,128,1],\n  \"honeydew\": [240,255,240,1], \"hotpink\": [255,105,180,1],\n  \"indianred\": [205,92,92,1], \"indigo\": [75,0,130,1],\n  \"ivory\": [255,255,240,1], \"khaki\": [240,230,140,1],\n  \"lavender\": [230,230,250,1], \"lavenderblush\": [255,240,245,1],\n  \"lawngreen\": [124,252,0,1], \"lemonchiffon\": [255,250,205,1],\n  \"lightblue\": [173,216,230,1], \"lightcoral\": [240,128,128,1],\n  \"lightcyan\": [224,255,255,1], \"lightgoldenrodyellow\": [250,250,210,1],\n  \"lightgray\": [211,211,211,1], \"lightgreen\": [144,238,144,1],\n  \"lightgrey\": [211,211,211,1], \"lightpink\": [255,182,193,1],\n  \"lightsalmon\": [255,160,122,1], \"lightseagreen\": [32,178,170,1],\n  \"lightskyblue\": [135,206,250,1], \"lightslategray\": [119,136,153,1],\n  \"lightslategrey\": [119,136,153,1], \"lightsteelblue\": [176,196,222,1],\n  \"lightyellow\": [255,255,224,1], \"lime\": [0,255,0,1],\n  \"limegreen\": [50,205,50,1], \"linen\": [250,240,230,1],\n  \"magenta\": [255,0,255,1], \"maroon\": [128,0,0,1],\n  \"mediumaquamarine\": [102,205,170,1], \"mediumblue\": [0,0,205,1],\n  \"mediumorchid\": [186,85,211,1], \"mediumpurple\": [147,112,219,1],\n  \"mediumseagreen\": [60,179,113,1], \"mediumslateblue\": [123,104,238,1],\n  \"mediumspringgreen\": [0,250,154,1], \"mediumturquoise\": [72,209,204,1],\n  \"mediumvioletred\": [199,21,133,1], \"midnightblue\": [25,25,112,1],\n  \"mintcream\": [245,255,250,1], \"mistyrose\": [255,228,225,1],\n  \"moccasin\": [255,228,181,1], \"navajowhite\": [255,222,173,1],\n  \"navy\": [0,0,128,1], \"oldlace\": [253,245,230,1],\n  \"olive\": [128,128,0,1], \"olivedrab\": [107,142,35,1],\n  \"orange\": [255,165,0,1], \"orangered\": [255,69,0,1],\n  \"orchid\": [218,112,214,1], \"palegoldenrod\": [238,232,170,1],\n  \"palegreen\": [152,251,152,1], \"paleturquoise\": [175,238,238,1],\n  \"palevioletred\": [219,112,147,1], \"papayawhip\": [255,239,213,1],\n  \"peachpuff\": [255,218,185,1], \"peru\": [205,133,63,1],\n  \"pink\": [255,192,203,1], \"plum\": [221,160,221,1],\n  \"powderblue\": [176,224,230,1], \"purple\": [128,0,128,1],\n  \"rebeccapurple\": [102,51,153,1],\n  \"red\": [255,0,0,1], \"rosybrown\": [188,143,143,1],\n  \"royalblue\": [65,105,225,1], \"saddlebrown\": [139,69,19,1],\n  \"salmon\": [250,128,114,1], \"sandybrown\": [244,164,96,1],\n  \"seagreen\": [46,139,87,1], \"seashell\": [255,245,238,1],\n  \"sienna\": [160,82,45,1], \"silver\": [192,192,192,1],\n  \"skyblue\": [135,206,235,1], \"slateblue\": [106,90,205,1],\n  \"slategray\": [112,128,144,1], \"slategrey\": [112,128,144,1],\n  \"snow\": [255,250,250,1], \"springgreen\": [0,255,127,1],\n  \"steelblue\": [70,130,180,1], \"tan\": [210,180,140,1],\n  \"teal\": [0,128,128,1], \"thistle\": [216,191,216,1],\n  \"tomato\": [255,99,71,1], \"turquoise\": [64,224,208,1],\n  \"violet\": [238,130,238,1], \"wheat\": [245,222,179,1],\n  \"white\": [255,255,255,1], \"whitesmoke\": [245,245,245,1],\n  \"yellow\": [255,255,0,1], \"yellowgreen\": [154,205,50,1]}\n\nfunction clamp_css_byte(i) {  // Clamp to integer 0 .. 255.\n  i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clamp_css_float(f) {  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parse_css_int(str) {  // int or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_byte(parseFloat(str) / 100 * 255);\n  return clamp_css_byte(parseInt(str));\n}\n\nfunction parse_css_float(str) {  // float or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_float(parseFloat(str) / 100);\n  return clamp_css_float(parseFloat(str));\n}\n\nfunction css_hue_to_rgb(m1, m2, h) {\n  if (h < 0) h += 1;\n  else if (h > 1) h -= 1;\n\n  if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n  if (h * 2 < 1) return m2;\n  if (h * 3 < 2) return m1 + (m2 - m1) * (2/3 - h) * 6;\n  return m1;\n}\n\nfunction parseCSSColor(css_str) {\n  // Remove all whitespace, not compliant, but should just be more accepting.\n  var str = css_str.replace(/ /g, '').toLowerCase();\n\n  // Color keywords (and transparent) lookup.\n  if (str in kCSSColorTable) return kCSSColorTable[str].slice();  // dup.\n\n  // #abc and #abc123 syntax.\n  if (str[0] === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xfff)) return null;  // Covers NaN.\n      return [((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n              (iv & 0xf0) | ((iv & 0xf0) >> 4),\n              (iv & 0xf) | ((iv & 0xf) << 4),\n              1];\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xffffff)) return null;  // Covers NaN.\n      return [(iv & 0xff0000) >> 16,\n              (iv & 0xff00) >> 8,\n              iv & 0xff,\n              1];\n    }\n\n    return null;\n  }\n\n  var op = str.indexOf('('), ep = str.indexOf(')');\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op+1, ep-(op+1)).split(',');\n    var alpha = 1;  // To allow case fallthrough.\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'rgb':\n        if (params.length !== 3) return null;\n        return [parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha];\n      case 'hsla':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'hsl':\n        if (params.length !== 3) return null;\n        var h = (((parseFloat(params[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parse_css_float(params[1]);\n        var l = parse_css_float(params[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n        return [clamp_css_byte(css_hue_to_rgb(m1, m2, h+1/3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h-1/3) * 255),\n                alpha];\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\ntry { exports.parseCSSColor = parseCSSColor } catch(e) { }\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var fontWeights = {\n  thin: 100,\n  hairline: 100,\n  'ultra-light': 100,\n  'extra-light': 100,\n  light: 200,\n  book: 300,\n  regular: 400,\n  normal: 400,\n  plain: 400,\n  roman: 400,\n  standard: 400,\n  medium: 500,\n  'semi-bold': 600,\n  'demi-bold': 600,\n  bold: 700,\n  heavy: 800,\n  black: 800,\n  'extra-bold': 800,\n  'ultra-black': 900,\n  'extra-black': 900,\n  'ultra-bold': 900,\n  'heavy-black': 900,\n  fat: 900,\n  poster: 900\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\n\nvar fontCache = {};\n\nmodule.exports = function(fonts, size, lineHeight) {\n  var cssData = fontCache[fonts];\n  if (!cssData) {\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    var weight = 400;\n    var style = 'normal';\n    var fontFamilies = [];\n    var haveWeight, haveStyle;\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n      var font = fonts[i];\n      var parts = font.split(' ');\n      var maybeWeight = parts[parts.length - 1].toLowerCase();\n      if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n        style = haveStyle ? style : maybeWeight;\n        parts.pop();\n        maybeWeight = parts[parts.length - 1].toLowerCase();\n      } else if (italicRE.test(maybeWeight)) {\n        maybeWeight = maybeWeight.replace(italicRE, '');\n        style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n      }\n      for (var w in fontWeights) {\n        var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n        if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n          weight = haveWeight ? weight : fontWeights[w];\n          parts.pop();\n          if (previousPart && w.startsWith(previousPart)) {\n            parts.pop();\n          }\n          break;\n        }\n      }\n      if (!haveWeight && typeof maybeWeight == 'number') {\n        weight = maybeWeight;\n      }\n      var fontFamily = parts.join(sp)\n        .replace('Klokantech Noto Sans', 'Noto Sans');\n      if (fontFamily.indexOf(sp) !== -1) {\n        fontFamily = '\"' + fontFamily + '\"';\n      }\n      fontFamilies.push(fontFamily);\n    }\n    // CSS font property: font-style font-weight font-size/line-height font-family\n    cssData = fontCache[fonts] = [style, weight, fontFamilies];\n  }\n  return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n};\n","module.exports = assert\n\nclass AssertionError extends Error {}\nAssertionError.prototype.name = 'AssertionError'\n\n/**\n * Minimal assert function\n * @param  {any} t Value to check if falsy\n * @param  {string=} m Optional assertion error message\n * @throws {AssertionError}\n */\nfunction assert (t, m) {\n  if (!t) {\n    var err = new AssertionError(m)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, assert)\n    throw err\n  }\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`'\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e)\n          )\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`'\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`'\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`'\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile|null}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    let tile = this.interimTile;\n    if (!tile) {\n      //empty chain\n      return this;\n    }\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    let tile = this.interimTile;\n    if (!tile) {\n      return;\n    }\n\n    /** @type {Tile} */\n    let prev = this;\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      }\n      if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue'\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`'\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`'\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json') {\n        source = JSON.parse(xhr.responseText);\n      } else if (type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass = Feature;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id\n    ).enableSimplifyTransformed(),\n    false,\n    options\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options)\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout, object.ends),\n    false,\n    options\n  );\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|Array<import(\"../render/Feature.js\").default>} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default|import(\"../render/Feature.js\").default|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default|import(\"../render/Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  createGeometry,\n  createRenderFeature,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {\n  deflateCoordinatesArray,\n  deflateMultiCoordinatesArray,\n} from '../geom/flat/deflate.js';\nimport {getLayoutForStride} from '../geom/SimpleGeometry.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Feature class\n * to be used when reading features. The default is {@link module:ol/Feature~Feature}. If performance is\n * the primary concern, and features are not going to be modified or round-tripped through the format,\n * consider using {@link module:ol/render/Feature~RenderFeature}\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    if (options.featureClass) {\n      this.featureClass = options.featureClass;\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Feature|RenderFeature|Array<RenderFeature>}.default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometryInternal(geoJSONFeature['geometry'], options);\n    if (this.featureClass === RenderFeature) {\n      return createRenderFeature(\n        {\n          geometry,\n          id: geoJSONFeature['id'],\n          properties: geoJSONFeature['properties'],\n        },\n        options\n      );\n    }\n\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(createGeometry(geometry, options));\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature|RenderFeature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<Feature|RenderFeature|Array<RenderFeature>>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        const featureObject = this.readFeatureFromObject(\n          geoJSONFeatures[i],\n          options\n        );\n        if (!featureObject) {\n          continue;\n        }\n        features.push(featureObject);\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features.flat();\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryObject} Geometry.\n */\nfunction readGeometryInternal(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /** @type {import(\"./Feature.js\").GeometryObject} */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return geometry;\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  const geometryObject = readGeometryInternal(object, options);\n  return createGeometry(geometryObject, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryCollectionObject} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"./Feature.js\").GeometryObject} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometryInternal(geometry, options);\n    }\n  );\n  return geometries;\n}\n\n/**\n * @param {GeoJSONPoint} object Input object.\n * @return {import(\"./Feature.js\").GeometryObject} Point geometry.\n */\nfunction readPointGeometry(object) {\n  const flatCoordinates = object['coordinates'];\n  return {\n    type: 'Point',\n    flatCoordinates,\n    layout: getLayoutForStride(flatCoordinates.length),\n  };\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} LineString geometry.\n */\nfunction readLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = coordinates.flat();\n  return {\n    type: 'LineString',\n    flatCoordinates,\n    ends: [flatCoordinates.length],\n    layout: getLayoutForStride(coordinates[0].length),\n  };\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiLineString geometry.\n */\nfunction readMultiLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const stride = coordinates[0][0].length;\n  const flatCoordinates = [];\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'MultiLineString',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPoint geometry.\n */\nfunction readMultiPointGeometry(object) {\n  const coordinates = object['coordinates'];\n  return {\n    type: 'MultiPoint',\n    flatCoordinates: coordinates.flat(),\n    layout: getLayoutForStride(coordinates[0].length),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPolygon geometry.\n */\nfunction readMultiPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0][0][0].length;\n  const endss = deflateMultiCoordinatesArray(\n    flatCoordinates,\n    0,\n    coordinates,\n    stride\n  );\n  return {\n    type: 'MultiPolygon',\n    flatCoordinates,\n    ends: endss,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0][0].length;\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'Polygon',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(\n        /** @type {import(\"../geom/Point.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {import(\"../geom/LineString.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {import(\"../geom/Polygon.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      }\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number'\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels.\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection\n *   * `['resolution']` returns the current resolution\n *   * `['time']` returns the time in seconds since the creation of the layer\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` returns the current zoom level\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4.\n *   * `['color', red, green, blue, alpha]` creates a `color` value from `number` values; the `alpha` parameter is\n *     optional; if not specified, it will be set to 1.\n *     Note: `red`, `green` and `blue` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range).\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          )\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 3 || parsedArgs.length === 4\n        ? NumberArrayType | ColorType\n        : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(3, 4),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type\n      )} but the following type was expected: ${typeName(typeHint)}`\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount\n      )} instead`\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount\n      )} instead`\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType\n      )} for the interpolate operation` + `, got ${typeName(inputType)} instead`\n    );\n  }\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type\n      )} instead`\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type\n        )} instead`\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded\n          )}`\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded\n        )}`\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (expression) => expression.featureId;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.GeometryType\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Between\n    // Ops.Case\n    // Ops.In\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle)\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`'\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.'\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    if (declutter) {\n      tile.declutterExecutorGroups[layerUid] = [];\n    }\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        builderExtent,\n        resolution,\n        pixelRatio\n      );\n      const declutterBuilderGroup = declutter\n        ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n        : undefined;\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutterBuilderGroup\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer()\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n      if (declutterBuilderGroup) {\n        const declutterExecutorGroup = new CanvasExecutorGroup(\n          null,\n          resolution,\n          pixelRatio,\n          source.getOverlaps(),\n          declutterBuilderGroup.finish(),\n          layer.getRenderBuffer()\n        );\n        tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n      }\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n      if (declutterExecutorGroups) {\n        executorGroups.push(declutterExecutorGroups);\n      }\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures =\n          executorGroups === declutterExecutorGroups\n            ? frameState.declutterTree.all().map((item) => item.value)\n            : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice()\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile\n        .getSourceTiles()\n        .reduce(function (accumulator, sourceTile) {\n          return accumulator.concat(sourceTile.getFeatures());\n        }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection)\n          )\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.getLayer().getOpacity();\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const declutterExecutorGroups =\n        tile.declutterExecutorGroups[getUid(this.getLayer())];\n      if (declutterExecutorGroups) {\n        for (let j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n          declutterExecutorGroups[j].execute(\n            this.context,\n            1,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            undefined,\n            frameState.declutterTree\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset\n      )\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layer.getOpacity();\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes)\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      if (currentClip) {\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]]\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          1,\n          transform,\n          rotation,\n          hifi,\n          replayTypes\n        );\n      }\n      if (contextSaved) {\n        context.restore();\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder group for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio)\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        renderScale,\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()]\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [options] Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Object} */ (Object.assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(\n      /** @type {import(\"./BaseVector.js\").Options<import(\"../source/VectorTile.js\").default>} */ (\n        baseOptions\n      )\n    );\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    assert(\n      renderMode == 'hybrid' || renderMode == 'vector',\n      \"`renderMode` must be `'hybrid'` or `'vector'`\"\n    );\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    const canvasWidthInUnits = getWidth(sourceDataExtent);\n    const canvasHeightInUnits = getHeight(sourceDataExtent);\n    stitchContext = createCanvasContext2D(\n      Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n      Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n      canvasPool\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n\n    const stitchScale = pixelRatio / sourceResolution;\n\n    sources.forEach(function (src, i, arr) {\n      const xPos = src.extent[0] - sourceDataExtent[0];\n      const yPos = -(src.extent[3] - sourceDataExtent[3]);\n      const srcWidth = getWidth(src.extent);\n      const srcHeight = getHeight(src.extent);\n\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          xPos * stitchScale,\n          yPos * stitchScale,\n          srcWidth * stitchScale,\n          srcHeight * stitchScale\n        );\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(\n        sourceResolution / pixelRatio,\n        -sourceResolution / pixelRatio\n      );\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureClass} [feature] Feature.\n   * @param {Array<FeatureClass>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureClass|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureClass>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureClass>|Collection<FeatureClass>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureClass>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureClass>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureClass>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, FeatureClass|Array<RenderFeature>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureClass>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureClass>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureClass>} */\n    let collection;\n    /** @type {Array<FeatureClass>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureClass} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureClass} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureClass} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureClass} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source'\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureClass>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureClass>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureClass>} */\n    const newFeatures = [];\n    /** @type Array<FeatureClass> */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureClass>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureClass>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureClass>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureClass>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureClass>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureClass} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureClass>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureClass>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureClass>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureClass):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureClass} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureClass} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClass|Array<RenderFeature>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureClass|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureClass} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureClass} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {FeatureClass} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureClass} feature Feature.\n   * @return {FeatureClass|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureClass} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      const indexedFeature = this.idIndex_[id];\n      if (\n        feature instanceof RenderFeature &&\n        Array.isArray(indexedFeature) &&\n        indexedFeature.includes(feature)\n      ) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n      } else if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n * @param {string} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time'\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided'\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`'\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`'\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '8.2.0';\n","//      \n\nimport {parseCSSColor} from 'csscolorparser';\n\n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n              \n              \n              \n              \n\n    constructor(r        , g        , b        , a         = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n                        \n                        \n                              \n                      \n                       \n\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input                        )               {\n        if (!input) {\n            return undefined;\n        }\n\n        if (input instanceof Color) {\n            return input;\n        }\n\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n\n        const rgba = parseCSSColor(input);\n        if (!rgba) {\n            return undefined;\n        }\n\n        return new Color(\n            rgba[0] / 255 * rgba[3],\n            rgba[1] / 255 * rgba[3],\n            rgba[2] / 255 * rgba[3],\n            rgba[3]\n        );\n    }\n\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString()         {\n        const [r, g, b, a] = this.toArray();\n        return `rgba(${Math.round(r)},${Math.round(g)},${Math.round(b)},${a})`;\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 255].\n     */\n    toArray()                                   {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r * 255 / a,\n            g * 255 / a,\n            b * 255 / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns a RGBA array of float values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01()                                   {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r / a,\n            g / a,\n            b / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, premultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01PremultipliedAlpha()                                   {\n        const {r, g, b, a} = this;\n        return [\n            r,\n            g,\n            b,\n            a\n        ];\n    }\n}\n\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\n\nexport default Color;\n","//      \n\nimport assert from 'assert';\n\n                                                                 \n                                                         \n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\n\nexport default function convertFunction(parameters     , propertySpec                            )                          {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\n\nfunction convertIdentityFunction(parameters, propertySpec)               {\n    const get = ['get', parameters.property];\n\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\n\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl': return 'interpolate-hcl';\n    case 'lab': return 'interpolate-lab';\n    default: return 'interpolate';\n    }\n}\n\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n\n        return expression;\n    } else {\n        const expression = ['step', ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n\n        fixupDegenerateStepCurve(expression);\n\n        return expression;\n    }\n}\n\nfunction coalesce(a, b) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n}\n\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\n\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        assert(parameters.stops.length > 0 && parameters.stops.length <= 2);\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? [\"linear\"] : [\"exponential\", base],\n            [\"number\", get]\n        ];\n\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\n\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? [\"linear\"] : [\"exponential\", base], input];\n\n    } else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n\n    fixupDegenerateStepCurve(expression);\n\n    return expression;\n}\n\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\n\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\n\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        assert(propertySpec.expression);\n        return (propertySpec.expression     ).interpolated ? 'exponential' : 'interval';\n    }\n}\n\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nexport function convertTokenString(s        )                                   {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0) result.push(literal);\n        result.push(['get', match[1]]);\n    }\n\n    if (result.length === 1) {\n        return s;\n    }\n\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n\n    return result;\n}\n\n","//      \n\nclass ParsingError extends Error {\n                \n                    \n    constructor(key        , message        ) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\nexport default ParsingError;\n","//      \n\n                                                \n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n                   \n                                        \n    constructor(parent        , bindings                              = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n\n    concat(bindings                             )        {\n        return new Scope(this, bindings);\n    }\n\n    get(name        )             {\n        if (this.bindings[name]) { return this.bindings[name]; }\n        if (this.parent) { return this.parent.get(name); }\n        throw new Error(`${name} not found in scope.`);\n    }\n\n    has(name        )          {\n        if (this.bindings[name]) return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nexport default Scope;\n","//      \n\n                                         \n                                             \n                                             \n                                               \n                                           \n                                             \n                                           \n                                           \n                                                 \n                                                   \n                                                           \n\n                                                                            \n\n                  \n               \n                 \n                 \n                  \n                \n                 \n                \n                                                           \n                \n                   \n                    \n                      \n\n                         \n                  \n                   \n              \n \n\n                                                                                      \n\nexport const NullType = {kind: 'null'};\nexport const NumberType = {kind: 'number'};\nexport const StringType = {kind: 'string'};\nexport const BooleanType = {kind: 'boolean'};\nexport const ColorType = {kind: 'color'};\nexport const ObjectType = {kind: 'object'};\nexport const ValueType = {kind: 'value'};\nexport const ErrorType = {kind: 'error'};\nexport const CollatorType = {kind: 'collator'};\nexport const FormattedType = {kind: 'formatted'};\nexport const ResolvedImageType = {kind: 'resolvedImage'};\n\nexport function array(itemType      , N         )            {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\n\nexport function toString(type      )         {\n    if (type.kind === 'array') {\n        const itemType = toString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    } else {\n        return type.kind;\n    }\n}\n\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    ResolvedImageType\n];\n\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nexport function checkSubtype(expected      , t      )          {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n\n    return `Expected ${toString(expected)} but found ${toString(t)} instead.`;\n}\n\nexport function isValidType(provided      , allowedTypes             )          {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\n\nexport function isValidNativeType(provided     , allowedTypes                   )          {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n","//      \n\n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\n\n                   \n                                  \n  \n\n                             \n                 \n                                    \n                                 \n                     \n\n            \n                                    \n                                 \n                     \n\n                                           \n\n                           \n \n\n                        \n                                          \n                              \n                                                         \n                                \n                      \n                                           \n \n\nexport default class Collator {\n                          \n                                                        \n                            \n\n    constructor(caseSensitive         , diacriticSensitive         , locale               ) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [],\n            {sensitivity: this.sensitivity, usage: 'search'});\n    }\n\n    compare(lhs        , rhs        )         {\n        return this.collator.compare(lhs, rhs);\n    }\n\n    resolvedLocale()         {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n","//      \n                                             \n                                                            \n\nexport class FormattedSection {\n                 \n                                \n                         \n                             \n                            \n\n    constructor(text        , image                      , scale               , fontStack               , textColor              ) {\n        // combine characters so that diacritic marks are not separate code points\n        this.text = text.normalize ? text.normalize() : text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\n\nexport default class Formatted {\n                                      \n\n    constructor(sections                         ) {\n        this.sections = sections;\n    }\n\n    static fromString(unformatted        )            {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n\n    isEmpty()          {\n        if (this.sections.length === 0) return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n                                             (section.image && section.image.name.length !== 0));\n    }\n\n    static factory(text                    )            {\n        if (text instanceof Formatted) {\n            return text;\n        } else {\n            return Formatted.fromString(text);\n        }\n    }\n\n    toString()         {\n        if (this.sections.length === 0) return '';\n        return this.sections.map(section => section.text).join('');\n    }\n\n    serialize()               {\n        const serialized               = [\"format\"];\n        for (const section of this.sections) {\n            if (section.image) {\n                serialized.push([\"image\", section.image.name]);\n                continue;\n            }\n            serialized.push(section.text);\n            const options                           = {};\n            if (section.fontStack) {\n                options[\"text-font\"] = [\"literal\", section.fontStack.split(',')];\n            }\n            if (section.scale) {\n                options[\"font-scale\"] = section.scale;\n            }\n            if (section.textColor) {\n                options[\"text-color\"] = ([\"rgba\"]              ).concat(section.textColor.toArray());\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","//      \n\n                                    \n                 \n                      \n  \n\nexport default class ResolvedImage {\n                 \n                       \n\n    constructor(options                      ) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n\n    toString()         {\n        return this.name;\n    }\n\n    static fromString(name        )                       {\n        if (!name) return null; // treat empty values as no image\n        return new ResolvedImage({name, available: false});\n    }\n\n    serialize()                {\n        return [\"image\", this.name];\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport Color from '../util/color.js';\nimport Collator from './types/collator.js';\nimport Formatted from './types/formatted.js';\nimport ResolvedImage from './types/resolved_image.js';\nimport {NullType, NumberType, StringType, BooleanType, ColorType, ObjectType, ValueType, CollatorType, FormattedType, ResolvedImageType, array} from './types.js';\n\n                                     \n\nexport function validateRGBA(r       , g       , b       , a        )                {\n    if (!(\n        typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255\n    )) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n\n    if (!(\n        typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1)\n    )) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n\n    return null;\n}\n\n                                                                                                                                                  \n\nexport function isValue(mixed       )          {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color) {\n        return true;\n    } else if (mixed instanceof Collator) {\n        return true;\n    } else if (mixed instanceof Formatted) {\n        return true;\n    } else if (mixed instanceof ResolvedImage) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function typeOf(value       )       {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType                         ;\n\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n\n        return array(itemType || ValueType, length);\n    } else {\n        assert(typeof value === 'object');\n        return ObjectType;\n    }\n}\n\nexport function toString(value       )         {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color || value instanceof Formatted || value instanceof ResolvedImage) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nexport {Color, Collator};\n","//      \n\nimport assert from 'assert';\nimport {isValue, typeOf, Color} from '../values.js';\nimport Formatted from '../types/formatted.js';\n\n                                      \n                                         \n                                                                       \n                                                        \n\nclass Literal                       {\n               \n                 \n\n    constructor(type      , value       ) {\n        this.type = type;\n        this.value = value;\n    }\n\n    static parse(args                       , context                )                 {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n\n        if (!isValue(args[1]))\n            return context.error(`invalid value`);\n\n        const value = (args[1]     );\n        let type = typeOf(value);\n\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (\n            type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)\n        ) {\n            type = expected;\n        }\n\n        return new Literal(type, value);\n    }\n\n    evaluate()        {\n        return this.value;\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return [\"literal\", this.value];\n        } else if (this.value instanceof Color) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return [\"rgba\"].concat(this.value.toArray());\n        } else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        } else {\n            assert(this.value === null ||\n                typeof this.value === 'string' ||\n                typeof this.value === 'number' ||\n                typeof this.value === 'boolean');\n            return (this.value     );\n        }\n    }\n}\n\nexport default Literal;\n","//      \n\nclass RuntimeError {\n                 \n                    \n\n    constructor(message        ) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n\n    toJSON()         {\n        return this.message;\n    }\n}\n\nexport default RuntimeError;\n","//      \n\nimport assert from 'assert';\n\nimport {\n    ObjectType,\n    ValueType,\n    StringType,\n    NumberType,\n    BooleanType,\n    checkSubtype,\n    toString,\n    array\n} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nconst types = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\n\nclass Assertion                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        let i = 1;\n        let type;\n\n        const name         = (args[0]     );\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))\n                ) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n\n            type = array(itemType, N);\n        } else {\n            assert(types[name], name);\n            type = types[name];\n        }\n\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Assertion(type, parsed);\n    }\n\n    evaluate(ctx                   )             {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${toString(this.type)}, but found ${toString(typeOf(value))} instead.`);\n            }\n        }\n\n        assert(false);\n        return null;\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' ||\n                itemType.kind === 'number' ||\n                itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    serialized.push(N);\n                }\n            }\n        }\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\n\nexport default Assertion;\n","//      \n\nimport {NumberType, ValueType, FormattedType, array, StringType, ColorType, ResolvedImageType} from '../types.js';\nimport Formatted, {FormattedSection} from '../types/formatted.js';\nimport {toString, typeOf} from '../values.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\n                                   \n                                                            \n                                                        \n                        \n                             \n                            \n                                 \n \n\nexport default class FormatExpression                       {\n               \n                                                \n\n    constructor(sections                                   ) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2) {\n            return context.error(`Expected at least one argument.`);\n        }\n\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object')  {\n            return context.error(`First argument must be an image or text section.`);\n        }\n\n        const sections                                    = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = (args[i]     );\n\n            if (nextTokenMayBeObject && typeof arg === \"object\" && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale) return null;\n                }\n\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font) return null;\n                }\n\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor) return null;\n                }\n\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n            } else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content) return null;\n\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error(`Formatted text type must be 'string', 'value', 'image' or 'null'.`);\n\n                nextTokenMayBeObject = true;\n                sections.push({content, scale: null, font: null, textColor: null});\n            }\n        }\n\n        return new FormatExpression(sections);\n    }\n\n    evaluate(ctx                   )            {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n\n            return new FormattedSection(\n                    toString(evaluatedContent),\n                    null,\n                    section.scale ? section.scale.evaluate(ctx) : null,\n                    section.font ? section.font.evaluate(ctx).join(',') : null,\n                    section.textColor ? section.textColor.evaluate(ctx) : null\n            );\n        };\n\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n\n    eachChild(fn                         ) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n\n    outputDefined()          {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n\n    serialize()                       {\n        const serialized = [\"format\"];\n        for (const section of this.sections) {\n            serialized.push(section.content.serialize());\n            const options = {};\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            if (section.textColor) {\n                options['text-color'] = section.textColor.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","//      \n\nimport {ResolvedImageType, StringType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\nexport default class ImageExpression                       {\n               \n                      \n\n    constructor(input            ) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 2) {\n            return context.error(`Expected two arguments.`);\n        }\n\n        const name = context.parse(args[1], 1, StringType);\n        if (!name) return context.error(`No image name provided.`);\n\n        return new ImageExpression(name);\n    }\n\n    evaluate(ctx                   )                       {\n        const evaluatedImageName = this.input.evaluate(ctx);\n\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages) value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n\n        return value;\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n\n    serialize()                       {\n        return [\"image\", this.input.serialize()];\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport {BooleanType, ColorType, NumberType, StringType, ValueType} from '../types.js';\nimport {Color, toString as valueToString, validateRGBA} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\nimport Formatted from '../types/formatted.js';\nimport FormatExpression from '../definitions/format.js';\nimport ImageExpression from '../definitions/image.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        const name         = (args[0]     );\n        assert(types[name], name);\n\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const type = types[name];\n\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Coercion(type, parsed);\n    }\n\n    evaluate(ctx                   )                                                                       {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        } else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color) {\n                    return input;\n                } else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c) return c;\n                } else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                    } else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        return new Color((input[0]     ) / 255, (input[1]     ) / 255, (input[2]     ) / 255, (input[3]     ));\n                    }\n                }\n            }\n            throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : String(JSON.stringify(input))}'`);\n        } else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                value = arg.evaluate(ctx);\n                if (value === null) return 0;\n                const num = Number(value);\n                if (isNaN(num)) continue;\n                return num;\n            }\n            throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n        } else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'resolvedImage') {\n            return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else {\n            return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{content: this.args[0], scale: null, font: null, textColor: null}]).serialize();\n        }\n\n        if (this.type.kind === 'resolvedImage') {\n            return new ImageExpression(this.args[0]).serialize();\n        }\n\n        const serialized = [`to-${this.type.kind}`];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coercion;\n","//      \n\nimport {Color} from './values.js';\n\n                                                \n                                                           \n                                                                        \n                                                             \n                                                                    \n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nclass EvaluationContext {\n                              \n                      \n                                \n                                        \n                                    \n                                      \n                             \n                                              \n\n                                            \n\n    constructor() {\n        this.globals = (null     );\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n        this.featureTileCoord = null;\n        this.featureDistanceData = null;\n    }\n\n    id()                {\n        return this.feature && this.feature.id !== undefined ? this.feature.id : null;\n    }\n\n    geometryType()                {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n\n    geometry()                       {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n\n    canonicalID()                         {\n        return this.canonical;\n    }\n\n    properties()                  {\n        return (this.feature && this.feature.properties) || {};\n    }\n\n    distanceFromCenter()         {\n        if (this.featureTileCoord && this.featureDistanceData) {\n\n            const c = this.featureDistanceData.center;\n            const scale = this.featureDistanceData.scale;\n            const {x, y} = this.featureTileCoord;\n\n            // Calculate the distance vector `d` (left handed)\n            const dX = x * scale - c[0];\n            const dY = y * scale - c[1];\n\n            // The bearing vector `b` (left handed)\n            const bX = this.featureDistanceData.bearing[0];\n            const bY = this.featureDistanceData.bearing[1];\n\n            // Distance is calculated as `dot(d, v)`\n            const dist = (bX * dX + bY * dY);\n            return dist;\n        }\n\n        return 0;\n    }\n\n    parseColor(input        )         {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input);\n        }\n        return cached;\n    }\n}\n\nexport default EvaluationContext;\n","//      \n\nimport {toString} from './types.js';\n\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport assert from 'assert';\n\n                                                                    \n                                     \n                                       \n\n                                       \n                                       \n                                                                \n                                               \n                                                            \n\nclass CompoundExpression                       {\n                 \n               \n                        \n                            \n\n                                                   \n\n    constructor(name        , type      , evaluate          , args                   ) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n\n    evaluate(ctx                   )        {\n        return this._evaluate(ctx, this.args);\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()               {\n        return [this.name].concat(this.args.map(arg => arg.serialize()));\n    }\n\n    static parse(args                       , context                )              {\n        const op         = (args[0]     );\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n\n        const overloads = availableOverloads.filter(([signature]) => (\n            !Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n\n        let signatureContext                 = (null     );\n\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, context.path, null, context.scope);\n\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs                    = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n\n        assert(!signatureContext || signatureContext.errors.length > 0);\n\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params))\n                .join(' | ');\n\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed) return null;\n                actualTypes.push(toString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n\n        return null;\n    }\n\n    static register(\n        registry                    ,\n        definitions                            \n    ) {\n        assert(!CompoundExpression.definitions);\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\n\nfunction stringifySignature(signature           )         {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(toString).join(', ')})`;\n    } else {\n        return `(${toString(signature.type)}...)`;\n    }\n}\n\nexport default CompoundExpression;\n","//      \n\nimport {StringType, BooleanType, CollatorType} from '../types.js';\nimport Collator from '../types/collator.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\nexport default class CollatorExpression                       {\n               \n                              \n                                   \n                              \n\n    constructor(caseSensitive            , diacriticSensitive            , locale                   ) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const options = (args[1]     );\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`Collator options argument must be an object.`);\n\n        const caseSensitive = context.parse(\n            options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive) return null;\n\n        const diacriticSensitive = context.parse(\n            options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive) return null;\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n\n    evaluate(ctx                   )           {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n\n    outputDefined()          {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n\n    serialize()                       {\n        const options = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return [\"collator\", options];\n    }\n}\n","//      \n\nimport {isValue} from '../values.js';\n                                      \nimport {BooleanType} from '../types.js';\n                                                                       \n                                                        \n                                                              \n                                                                                        \n                                                                \n\n                                                             \n\n// minX, minY, maxX, maxY\n                                             \nconst EXTENT = 8192;\n\nfunction updateBBox(bbox      , coord                  ) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\n\nfunction mercatorXfromLng(lng        ) {\n    return (180 + lng) / 360;\n}\n\nfunction mercatorYfromLat(lat        ) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\n\nfunction boxWithinBox(bbox1      , bbox2      ) {\n    if (bbox1[0] <= bbox2[0]) return false;\n    if (bbox1[2] >= bbox2[2]) return false;\n    if (bbox1[1] <= bbox2[1]) return false;\n    if (bbox1[3] >= bbox2[3]) return false;\n    return true;\n}\n\nfunction getTileCoordinates(p, canonical                 ) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\n\nfunction onBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\n\nfunction rayIntersect(p, p1, p2) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\n\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings) {\n    let inside = false;\n    for (let i = 0, len = rings.length; i < len; i++) {\n        const ring = rings[i];\n        for (let j = 0, len2 = ring.length; j < len2 - 1; j++) {\n            if (onBoundary(point, ring[j], ring[j + 1])) return false;\n            if (rayIntersect(point, ring[j], ring[j + 1])) inside = !inside;\n        }\n    }\n    return inside;\n}\n\nfunction pointWithinPolygons(point, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction perp(v1, v2) {\n    return (v1[0] * v2[1] - v1[1] * v2[0]);\n}\n\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction  twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = (x1 * y3 - x3 * y1);\n    const det2 =  (x2 * y3 - x3 * y2);\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0)) return true;\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction lineIntersectLine(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0) return false;\n\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b)) return true;\n    return false;\n}\n\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (lineIntersectLine(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (let i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction lineStringWithinPolygons(line, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction getTilePolygon(coordinates, bbox      , canonical                 ) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\n\nfunction getTilePolygons(coordinates, bbox, canonical                 ) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\n\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\n\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\n\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical                 ) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints = [];\n    if (!geometry) return tilePoints;\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\n\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical                 ) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines = [];\n    if (!geometry) return tileLines;\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\n\nfunction pointsWithinPolygons(ctx                   , polygonGeometry                 ) {\n    const pointBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons)) return false;\n        }\n    }\n\n    return true;\n}\n\nfunction linesWithinPolygons(ctx                   , polygonGeometry                 ) {\n    const lineBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons)) return false;\n        }\n    }\n    return true;\n}\n\nclass Within                       {\n               \n                    \n                                \n\n    constructor(geojson         , geometries                 ) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n\n    static parse(args                       , context                )          {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = (args[1]        );\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    const type = geojson.features[i].geometry.type;\n                    if (type === 'Polygon' || type === 'MultiPolygon') {\n                        return new Within(geojson, geojson.features[i].geometry);\n                    }\n                }\n            } else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            } else if (geojson.type  === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error(`'within' expression requires valid geojson object that contains polygon geometry type.`);\n    }\n\n    evaluate(ctx                   )          {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        return [\"within\", this.geojson];\n    }\n\n}\n\nexport default Within;\n","//      \n\nimport CompoundExpression from './compound_expression.js';\nimport Within from './definitions/within.js';\n                                                \n\nfunction isFeatureConstant(e            )          {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (\n            e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id'\n        ) {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n\n    if (e instanceof Within) {\n        return false;\n    }\n\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isStateConstant(e            )          {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isGlobalPropertyConstant(e            , properties               )          {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) { return false; }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) { result = false; }\n    });\n    return result;\n}\n\nexport {isFeatureConstant, isGlobalPropertyConstant, isStateConstant};\n","//      \n\n                                      \n                                                 \n                                                        \n                                                               \n\nclass Var                       {\n               \n                 \n                                \n\n    constructor(name        , boundExpression            ) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n\n    static parse(args                       , context                )             {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error(`'var' expression requires exactly one string literal argument.`);\n\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n\n        return new Var(name, context.scope.get(name));\n    }\n\n    evaluate(ctx                   )      {\n        return this.boundExpression.evaluate(ctx);\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                {\n        return [\"var\", this.name];\n    }\n}\n\nexport default Var;\n","//      \n\nimport Scope from './scope.js';\nimport {checkSubtype} from './types.js';\nimport ParsingError from './parsing_error.js';\nimport Literal from './definitions/literal.js';\nimport Assertion from './definitions/assertion.js';\nimport Coercion from './definitions/coercion.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport CollatorExpression from './definitions/collator.js';\nimport Within from './definitions/within.js';\nimport {isGlobalPropertyConstant, isFeatureConstant} from './is_constant.js';\nimport Var from './definitions/var.js';\n\n                                                                    \n                                     \n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n                                 \n                        \n                \n                 \n                                \n\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n                        \n\n    constructor(\n        registry                    ,\n        path                = [],\n        expectedType       ,\n        scope        = new Scope(),\n        errors                      = []\n    ) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n    }\n\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(\n        expr       ,\n        index         ,\n        expectedType        ,\n        bindings                              ,\n        options                                                  = {}\n    )              {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n\n    _parse(expr       , options                                                 )              {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n\n        function annotate(parsed, type, typeAnnotation                              ) {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n            }\n\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed) return null;\n\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n\n                return parsed;\n            }\n\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        } else if (typeof expr === 'undefined') {\n            return this.error(`'undefined' value invalid. Use null instead.`);\n        } else if (typeof expr === 'object') {\n            return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n        } else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index        , expectedType        , bindings                              )                 {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(\n            this.registry,\n            path,\n            expectedType || null,\n            scope,\n            this.errors\n        );\n    }\n\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error        , ...keys               ) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ParsingError(key, error));\n    }\n\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected      , t      )          {\n        const error = checkSubtype(expected, t);\n        if (error) this.error(error);\n        return error;\n    }\n}\n\nexport default ParsingContext;\n\nfunction isConstant(expression            ) {\n    if (expression instanceof Var) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    } else if (expression instanceof Within) {\n        return false;\n    }\n\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'line-progress', 'sky-radial-progress', 'accumulated', 'is-supported-script', 'pitch', 'distance-from-center']);\n}\n","//      \n\nimport RuntimeError from './runtime_error.js';\n\n                                                \n\n                                                \n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nexport function findStopLessThanOrEqualTo(stops               , input        )         {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n\n    return 0;\n}\n","//      \n\nimport {NumberType} from '../types.js';\n\nimport {findStopLessThanOrEqualTo} from '../stops.js';\n\n                                       \n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Step                       {\n               \n\n                      \n                          \n                               \n\n    constructor(type      , input            , stops       ) {\n        this.type = type;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static parse(args                       , context                )        {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input) return null;\n\n        const stops        = [];\n\n        let outputType       = (null     );\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n\n            const labelKey = i;\n            const valueKey = i + 1;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        return new Step(outputType, input, stops);\n    }\n\n    evaluate(ctx                   )      {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx)     )        );\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize()                       {\n        const serialized = [\"step\", this.input.serialize()];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n\nexport default Step;\n","//      \n\nimport Color from './color.js';\n\nexport function number(a        , b        , t        )         {\n    return (a * (1 - t)) + (b * t);\n}\n\nexport function color(from       , to       , t        )        {\n    return new Color(\n        number(from.r, to.r, t),\n        number(from.g, to.g, t),\n        number(from.b, to.b, t),\n        number(from.a, to.a, t)\n    );\n}\n\nexport function array(from               , to               , t        )                {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n","//      \n\nimport Color from './color.js';\n\nimport {number as interpolateNumber} from './interpolate.js';\n\n                 \n              \n              \n              \n                 \n  \n\n                 \n              \n              \n              \n                 \n  \n\n// Constants\nconst Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1,\n    deg2rad = Math.PI / 180,\n    rad2deg = 180 / Math.PI;\n\n// Utilities\nfunction xyz2lab(t        ) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t        ) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x        ) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x        ) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\n// LAB\nfunction rgbToLab(rgbColor       )           {\n    const b = rgb2xyz(rgbColor.r),\n        a = rgb2xyz(rgbColor.g),\n        l = rgb2xyz(rgbColor.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\n\nfunction labToRgb(labColor          )        {\n    let y = (labColor.l + 16) / 116,\n        x = isNaN(labColor.a) ? y : y + labColor.a / 500,\n        z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color(\n        xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        labColor.alpha\n    );\n}\n\nfunction interpolateLab(from          , to          , t        )           {\n    return {\n        l: interpolateNumber(from.l, to.l, t),\n        a: interpolateNumber(from.a, to.a, t),\n        b: interpolateNumber(from.b, to.b, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\n// HCL\nfunction rgbToHcl(rgbColor       )           {\n    const {l, a, b} = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\n\nfunction hclToRgb(hclColor          )        {\n    const h = hclColor.h * deg2rad,\n        c = hclColor.c,\n        l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\n\nfunction interpolateHue(a        , b        , t        ) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\n\nfunction interpolateHcl(from          , to          , t        )           {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: interpolateNumber(from.c, to.c, t),\n        l: interpolateNumber(from.l, to.l, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\nexport const lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\n\nexport const hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n","//      \n\nimport UnitBezier from '@mapbox/unitbezier';\n\nimport * as interpolate from '../../util/interpolate.js';\nimport {toString, NumberType, ColorType} from '../types.js';\nimport {findStopLessThanOrEqualTo} from '../stops.js';\nimport {hcl, lab} from '../../util/color_spaces.js';\nimport Color from '../../util/color.js';\n\n                                       \n                                                                       \n                                                        \n                                                              \n                                      \n\n                               \n                        \n                                           \n                                                                              \n\nclass Interpolate                       {\n               \n\n                                                                    \n                                     \n                      \n                          \n                               \n\n    constructor(type      , operator                                                       , interpolation                   , input            , stops       ) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static interpolationFactor(interpolation                   , input        , lower        , upper        )         {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n\n    static parse(args                       , context                )               {\n        let [operator, interpolation, input, ...rest] = args;\n\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error(`Expected an interpolation type expression.`, 1);\n        }\n\n        if (interpolation[0] === 'linear') {\n            interpolation = {name: 'linear'};\n        } else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (\n                controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)\n            ) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: (controlPoints     )\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        input = context.parse(input, 2, NumberType);\n        if (!input) return null;\n\n        const stops        = [];\n\n        let outputType       = (null     );\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        if (outputType.kind !== 'number' &&\n            outputType.kind !== 'color' &&\n            !(\n                outputType.kind === 'array' &&\n                outputType.itemType.kind === 'number' &&\n                typeof outputType.N === 'number'\n            )\n        ) {\n            return context.error(`Type ${toString(outputType)} is not interpolatable.`);\n        }\n\n        return new Interpolate(outputType, (operator     ), interpolation, input, stops);\n    }\n\n    evaluate(ctx                   )        {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx)     )        );\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n\n        if (this.operator === 'interpolate') {\n            return (interpolate[this.type.kind.toLowerCase()]     )(outputLower, outputUpper, t); // eslint-disable-line import/namespace\n        } else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        } else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize()                       {\n        let interpolation;\n        if (this.interpolation.name === 'linear') {\n            interpolation = [\"linear\"];\n        } else if (this.interpolation.name === 'exponential') {\n            if  (this.interpolation.base === 1) {\n                interpolation = [\"linear\"];\n            } else {\n                interpolation = [\"exponential\", this.interpolation.base];\n            }\n        } else {\n            interpolation = [\"cubic-bezier\" ].concat(this.interpolation.controlPoints);\n        }\n\n        const serialized = [this.operator, interpolation, this.input.serialize()];\n\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(\n                this.labels[i],\n                this.outputs[i].serialize()\n            );\n        }\n        return serialized;\n    }\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nexport default Interpolate;\n","//      \n\nimport assert from 'assert';\n\nimport {checkSubtype, ValueType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Coalesce                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )            {\n        if (args.length < 2) {\n            return context.error(\"Expectected at least one argument.\");\n        }\n        let outputType       = (null     );\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, {typeAnnotation: 'omit'});\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        assert(outputType);\n\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce((outputType     ), parsedArgs);\n    }\n\n    evaluate(ctx                   )             {\n        let result = null;\n        let argCount = 0;\n        let firstImage;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                // set to first image\n                if (!firstImage) {\n                    firstImage = result;\n                }\n                result = null;\n                // if we reach the end, return the first image\n                if (argCount === this.args.length) {\n                    return firstImage;\n                }\n            }\n\n            if (result !== null) break;\n        }\n        return result;\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        const serialized = [\"coalesce\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coalesce;\n","//      \n\n                                      \n                                                                       \n                                                        \n                                                               \n\nclass Let                       {\n               \n                                          \n                       \n\n    constructor(bindings                             , result            ) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n\n    evaluate(ctx                   )      {\n        return this.result.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n\n    static parse(args                       , context                )       {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n\n        const bindings                              = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n            }\n\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value) return null;\n\n            bindings.push([name, value]);\n        }\n\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result) return null;\n\n        return new Let(bindings, result);\n    }\n\n    outputDefined()          {\n        return this.result.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"let\"];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\n\nexport default Let;\n","//      \n\nimport {array, ValueType, NumberType} from '../types.js';\n\nimport RuntimeError from '../runtime_error.js';\n\n                                                                       \n                                                        \n                                                              \n                                                 \n                                        \n\nclass At                       {\n               \n                      \n                      \n\n    constructor(type      , index            , input            ) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )      {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n\n        if (!index || !input) return null;\n\n        const t            = (input.type     );\n        return new At(t.itemType, index, input);\n    }\n\n    evaluate(ctx                   )        {\n        const index = ((this.index.evaluate(ctx)     )        );\n        const array = ((this.input.evaluate(ctx)     )              );\n\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n\n        return array[index];\n    }\n\n    eachChild(fn                         ) {\n        fn(this.index);\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        return [\"at\", this.index.serialize(), this.input.serialize()];\n    }\n}\n\nexport default At;\n","//      \n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass In                       {\n               \n                       \n                         \n\n    constructor(needle            , haystack            ) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n\n    static parse(args                       , context                )      {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        return new In(needle, haystack);\n    }\n\n    evaluate(ctx                   )          {\n        const needle = (this.needle.evaluate(ctx)     );\n        const haystack = (this.haystack.evaluate(ctx)     );\n\n        if (haystack == null) return false;\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        return haystack.indexOf(needle) >= 0;\n    }\n\n    eachChild(fn                         ) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        return [\"in\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default In;\n","//      \n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass IndexOf                       {\n               \n                       \n                         \n                           \n\n    constructor(needle            , haystack            , fromIndex             ) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n\n    static parse(args                       , context                )           {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex) return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        } else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n\n    evaluate(ctx                   )      {\n        const needle = (this.needle.evaluate(ctx)     );\n        const haystack = (this.haystack.evaluate(ctx)     );\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        if (this.fromIndex) {\n            const fromIndex = (this.fromIndex.evaluate(ctx)        );\n            return haystack.indexOf(needle, fromIndex);\n        }\n\n        return haystack.indexOf(needle);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        if (this.fromIndex != null && this.fromIndex !== undefined) {\n            const fromIndex = this.fromIndex.serialize();\n            return [\"index-of\", this.needle.serialize(), this.haystack.serialize(), fromIndex];\n        }\n        return [\"index-of\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default IndexOf;\n","//      \n\nimport assert from 'assert';\n\nimport {typeOf} from '../values.js';\nimport {ValueType,          } from '../types.js';\n\n                                                                       \n                                                        \n                                                              \n\n// Map input label values to output expression index\n                                         \n\nclass Match                       {\n               \n                    \n\n                      \n                 \n                               \n                          \n\n    constructor(inputType      , outputType      , input            , cases       , outputs                   , otherwise            ) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args                       , context                )         {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error(`Expected an even number of arguments.`);\n\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error(`Branch labels must be numbers or strings.`);\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error(`Numeric branch labels must be integer values.`);\n\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n\n                cases[String(label)] = outputs.length;\n            }\n\n            const result = context.parse(value, i, outputType);\n            if (!result) return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input) return null;\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(inputType && outputType);\n\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype((inputType     ), input.type)) {\n            return null;\n        }\n\n        return new Match((inputType     ), (outputType     ), input, cases, outputs, otherwise);\n    }\n\n    evaluate(ctx                   )      {\n        const input = (this.input.evaluate(ctx)     );\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"match\", this.input.serialize()];\n\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput                                          = [];\n        const outputLookup                            = {}; // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([this.cases[label], [label]]);\n            } else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n\n        const coerceLabel = (label) => this.inputType.kind === 'number' ? Number(label) : label;\n\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            } else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\n\nexport default Match;\n","//      \n\nimport assert from 'assert';\n\nimport {BooleanType} from '../types.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\n                                                \n\nclass Case                       {\n               \n\n                       \n                          \n\n    constructor(type      , branches          , otherwise            ) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args                       , context                )        {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error(`Expected an odd number of arguments.`);\n\n        let outputType       ;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test) return null;\n\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result) return null;\n\n            branches.push([test, result]);\n\n            outputType = outputType || result.type;\n        }\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(outputType);\n        return new Case((outputType     ), branches, otherwise);\n    }\n\n    evaluate(ctx                   )      {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n\n    outputDefined()          {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"case\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Case;\n","//      \n\nimport {ValueType, NumberType, StringType, array, toString, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Slice                       {\n               \n                      \n                           \n                          \n\n    constructor(type      , input            , beginIndex            , endIndex             ) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n\n    }\n\n    static parse(args                       , context                )         {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n\n        if (!input || !beginIndex) return null;\n\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${toString(input.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex) return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        } else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n\n    evaluate(ctx                   )      {\n        const input = (this.input.evaluate(ctx)     );\n        const beginIndex = (this.beginIndex.evaluate(ctx)        );\n\n        if (!isValidNativeType(input, ['string', 'array'])) {\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${toString(typeOf(input))} instead.`);\n        }\n\n        if (this.endIndex) {\n            const endIndex = (this.endIndex.evaluate(ctx)        );\n            return input.slice(beginIndex, endIndex);\n        }\n\n        return input.slice(beginIndex);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        if (this.endIndex != null && this.endIndex !== undefined) {\n            const endIndex = this.endIndex.serialize();\n            return [\"slice\", this.input.serialize(), this.beginIndex.serialize(), endIndex];\n        }\n        return [\"slice\", this.input.serialize(), this.beginIndex.serialize()];\n    }\n}\n\nexport default Slice;\n","//      \n\nimport {toString, ValueType, BooleanType, CollatorType} from '../types.js';\nimport Assertion from './assertion.js';\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\n                                                                                               \n                                                              \n                                                        \n                                      \n\n                                                                 \n\nfunction isComparableType(op                    , type      ) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\n\nfunction eq(ctx                   , a     , b     )          { return a === b; }\nfunction neq(ctx                   , a     , b     )          { return a !== b; }\nfunction lt(ctx                   , a     , b     )          { return a < b; }\nfunction gt(ctx                   , a     , b     )          { return a > b; }\nfunction lteq(ctx                   , a     , b     )          { return a <= b; }\nfunction gteq(ctx                   , a     , b     )          { return a >= b; }\n\nfunction eqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx                   , a     , b     , c     )          { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) >= 0; }\n\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op                    , compareBasic                                          , compareWithCollator                                               )                         {\n    const isOrderComparison = op !== '==' && op !== '!=';\n\n    return class Comparison                       {\n                   \n                        \n                        \n                              \n                                    \n\n        constructor(lhs            , rhs            , collator             ) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n\n        static parse(args                       , context                )              {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error(`Expected two or three arguments.`);\n\n            const op                     = (args[0]     );\n\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs) return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${toString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs) return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${toString(rhs.type)}'.`);\n            }\n\n            if (\n                lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value'\n            ) {\n                return context.error(`Cannot compare types '${toString(lhs.type)}' and '${toString(rhs.type)}'.`);\n            }\n\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n\n            let collator = null;\n            if (args.length === 4) {\n                if (\n                    lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value'\n                ) {\n                    return context.error(`Cannot use collator to compare non-string types.`);\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator) return null;\n            }\n\n            return new Comparison(lhs, rhs, collator);\n        }\n\n        evaluate(ctx                   )          {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n\n        eachChild(fn                         ) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n\n        outputDefined()          {\n            return true;\n        }\n\n        serialize()                       {\n            const serialized = [op];\n            this.eachChild(child => { serialized.push(child.serialize()); });\n            return serialized;\n        }\n    };\n}\n\nexport const Equals                                                                  = makeComparison('==', eq, eqCollate);\nexport const NotEquals                                                                    = makeComparison('!=', neq, neqCollate);\nexport const LessThan                                                                 = makeComparison('<', lt, ltCollate);\nexport const GreaterThan                                                                 = makeComparison('>', gt, gtCollate);\nexport const LessThanOrEqual                                                                      = makeComparison('<=', lteq, lteqCollate);\nexport const GreaterThanOrEqual                                                                      = makeComparison('>=', gteq, gteqCollate);\n","//      \n\nimport {StringType, NumberType} from '../types.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\n                   \n                                          \n  \n\n                                 \n                 \n                                    \n                                     \n                         \n\n            \n                                    \n                                     \n                         \n\n                              \n\n                           \n \n\n                            \n                                                        \n                             \n                         \n                                          \n                                          \n  \n\nexport default class NumberFormat                       {\n               \n                       \n                                 // BCP 47 language tag\n                                 // ISO 4217 currency code, required if style=currency\n                                 // Simple units sanctioned for use in ECMAScript, required if style=unit. https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier\n                                          // Default 0\n                                          // Default 3\n\n    constructor(number            ,\n                locale                   ,\n                currency                   ,\n                unit                   ,\n                minFractionDigits                   ,\n                maxFractionDigits                   ) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.unit = unit;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 3)\n            return context.error(`Expected two arguments.`);\n\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number) return null;\n\n        const options = (args[2]     );\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`NumberFormat options argument must be an object.`);\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency) return null;\n        }\n\n        let unit = null;\n        if (options['unit']) {\n            unit = context.parse(options['unit'], 1, StringType);\n            if (!unit) return null;\n        }\n\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits) return null;\n        }\n\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits) return null;\n        }\n\n        return new NumberFormat(number, locale, currency, unit, minFractionDigits, maxFractionDigits);\n    }\n\n    evaluate(ctx                   )         {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [],\n            {\n                style:\n                    (this.currency && \"currency\") ||\n                    (this.unit && \"unit\") ||\n                    \"decimal\",\n                currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n                unit: this.unit ? this.unit.evaluate(ctx) : undefined,\n                minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n                maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n            }).format(this.number.evaluate(ctx));\n    }\n\n    eachChild(fn                         ) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.unit) {\n            fn(this.unit);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        const options = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.unit) {\n            options['unit'] = this.unit.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return [\"number-format\", this.number.serialize(), options];\n    }\n}\n","//      \n\nimport {NumberType, toString} from '../types.js';\n\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Length                       {\n               \n                      \n\n    constructor(input            ) {\n        this.type = NumberType;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )          {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n\n        const input = context.parse(args[1], 1);\n        if (!input) return null;\n\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${toString(input.type)} instead.`);\n\n        return new Length(input);\n    }\n\n    evaluate(ctx                   )               {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${toString(typeOf(input))} instead.`);\n        }\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        const serialized = [\"length\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Length;\n","//      \n\nimport {\n              \n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ObjectType,\n    ValueType,\n    ErrorType,\n    CollatorType,\n    array,\n    toString as typeToString\n} from '../types.js';\n\nimport {typeOf, Color, validateRGBA, toString as valueToString} from '../values.js';\nimport CompoundExpression from '../compound_expression.js';\nimport RuntimeError from '../runtime_error.js';\nimport Let from './let.js';\nimport Var from './var.js';\nimport Literal from './literal.js';\nimport Assertion from './assertion.js';\nimport Coercion from './coercion.js';\nimport At from './at.js';\nimport In from './in.js';\nimport IndexOf from './index_of.js';\nimport Match from './match.js';\nimport Case from './case.js';\nimport Slice from './slice.js';\nimport Step from './step.js';\nimport Interpolate from './interpolate.js';\nimport Coalesce from './coalesce.js';\nimport {\n    Equals,\n    NotEquals,\n    LessThan,\n    GreaterThan,\n    LessThanOrEqual,\n    GreaterThanOrEqual\n} from './comparison.js';\nimport CollatorExpression from './collator.js';\nimport NumberFormat from './number_format.js';\nimport FormatExpression from './format.js';\nimport ImageExpression from './image.js';\nimport Length from './length.js';\nimport Within from './within.js';\n\n                                                       \n                                                         \n\nconst expressions                     = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'index-of': IndexOf,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'slice': Slice,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var,\n    'within': Within\n};\n\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error) throw new RuntimeError(error);\n    return new Color(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\n\nfunction has(key, obj) {\n    return key in obj;\n}\n\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\n\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\n\nfunction varargs(type      )          {\n    return {type};\n}\n\nCompoundExpression.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'pitch': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.pitch || 0\n    ],\n    'distance-from-center': [\n        NumberType,\n        [],\n        (ctx) => ctx.distanceFromCenter()\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'sky-radial-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.skyRadialProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[(k     ).value] === (v     ).value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === (v     ).value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === (v     ).value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => (k     ).value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => (v     ).value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => (v     ).value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => (v     ).value.indexOf(ctx.properties()[(k     ).value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[(k     ).value], (v     ).value, 0, (v     ).value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\n\nexport default expressions;\n","//      \n\n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\n                          \n                                       \n                                      \n\nexport function success      (value   )               {\n    return {result: 'success', value};\n}\n\nexport function error      (value   )               {\n    return {result: 'error', value};\n}\n","\nimport * as colorSpaces from '../util/color_spaces.js';\nimport Color from '../util/color.js';\nimport extend from '../util/extend.js';\nimport getType from '../util/get_type.js';\nimport * as interpolate from '../util/interpolate.js';\nimport Interpolate from '../expression/definitions/interpolate.js';\nimport Formatted from '../expression/types/formatted.js';\nimport ResolvedImage from '../expression/types/resolved_image.js';\nimport {supportsInterpolation} from '../util/properties.js';\nimport {findStopLessThanOrEqualTo} from '../expression/stops.js';\n\nexport function isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nfunction identityFunction(x) {\n    return x;\n}\n\nexport function createFunction(parameters, propertySpec) {\n    const isColor = propertySpec.type === 'color';\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n\n    if (isColor) {\n        parameters = extend({}, parameters);\n\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], Color.parse(stop[1])];\n            });\n        }\n\n        if (parameters.default) {\n            parameters.default = Color.parse(parameters.default);\n        } else {\n            parameters.default = Color.parse(propertySpec.default);\n        }\n    }\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb' && !colorSpaces[parameters.colorSpace]) { // eslint-disable-line import/namespace\n        throw new Error(`Unknown color space: ${parameters.colorSpace}`);\n    }\n\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    } else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    } else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n\n    } else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    } else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n\n        const interpolationType = {name: 'linear'};\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({zoom}, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    } else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            {name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1} : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({zoom}) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    } else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\n\nfunction coalesce(a, b, c) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n    if (c !== undefined) return c;\n}\n\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce(evaluated, parameters.default, propertySpec.default);\n}\n\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n\n    return parameters.stops[index][1];\n}\n\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(\n        input, base,\n        parameters.stops[index][0],\n        parameters.stops[index + 1][0]);\n\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    let interp = interpolate[propertySpec.type] || identityFunction; // eslint-disable-line import/namespace\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb') {\n        const colorspace = colorSpaces[parameters.colorSpace]; // eslint-disable-line import/namespace\n        interp = (a, b) => colorspace.reverse(colorspace.interpolate(colorspace.forward(a), colorspace.forward(b), t));\n    }\n\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t);\n            }\n        };\n    }\n\n    return interp(outputLower, outputUpper, t);\n}\n\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    if (propertySpec.type === 'color') {\n        input = Color.parse(input);\n    } else if (propertySpec.type === 'formatted') {\n        input = Formatted.fromString(input.toString());\n    } else if (propertySpec.type === 'resolvedImage') {\n        input = ResolvedImage.fromString(input.toString());\n    } else if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n        input = undefined;\n    }\n    return coalesce(input, parameters.default, propertySpec.default);\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport extend from '../util/extend.js';\nimport ParsingError from './parsing_error.js';\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport Step from './definitions/step.js';\nimport Interpolate from './definitions/interpolate.js';\nimport Coalesce from './definitions/coalesce.js';\nimport Let from './definitions/let.js';\nimport definitions from './definitions/index.js';\nimport * as isConstant from './is_constant.js';\nimport RuntimeError from './runtime_error.js';\nimport {success, error} from '../util/result.js';\nimport {supportsPropertyExpression, supportsZoomExpression, supportsInterpolation} from '../util/properties.js';\n\n                                                     \n                                       \n                                                \n                                                                 \n                                              \n                                                                    \n                                                            \n                                                           \n                                                \n                                                             \n                                                                    \n\n                       \n                                                                      \n                        \n                                    \n                                      \n                                   \n  \n\n                                              \n\n                                          \n                 \n                   \n                            \n                          \n                               \n                                               \n                       \n   \n\nexport class StyleExpression {\n                           \n\n                                  \n                         \n                                              \n                                     \n\n    constructor(expression            , propertySpec                             ) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   , featureTileCoord        , featureDistanceData                      )      {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        return this.expression.evaluate(this._evaluator);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   , featureTileCoord        , featureDistanceData                      )      {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        } catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\n\nexport function isExpression(expression       )          {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in definitions;\n}\n\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nexport function createExpression(expression       , propertySpec                             )                                               {\n    const parser = new ParsingContext(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined,\n        propertySpec && propertySpec.type === 'string' ? {typeAnnotation: 'coerce'} : undefined);\n\n    if (!parsed) {\n        assert(parser.errors.length > 0);\n        return error(parser.errors);\n    }\n\n    return success(new StyleExpression(parsed, propertySpec));\n}\n\nexport class ZoomConstantExpression                       {\n               \n                              \n                                      \n\n    constructor(kind      , expression                 ) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('constant'                ) && !isConstant.isStateConstant(expression.expression);\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\n\nexport class ZoomDependentExpression                       {\n               \n                             \n                              \n\n                                      \n                                          \n\n    constructor(kind      , expression                 , zoomStops               , interpolationType                    ) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('camera'                ) && !isConstant.isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    interpolationFactor(input        , lower        , upper        )         {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\n\n                                  \n                     \n                                                                                                                                                                \n \n\n                                \n                   \n                              \n                                                                                                                                                                                                     \n  \n\n                                \n                   \n                                                                                                                                                                \n                                                                                  \n                             \n                                         \n  \n\n                                   \n                      \n                              \n                                                                                                                                                                                                     \n                                                                                  \n                             \n                                         \n  \n\n                                     \n                        \n                      \n                      \n                          \n\nexport function createPropertyExpression(expression       , propertySpec                            )                                                       {\n    expression = createExpression(expression, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n\n    const parsed = expression.value.expression;\n\n    const isFeatureConstant = isConstant.isFeatureConstant(parsed);\n    if (!isFeatureConstant && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError('', 'data expressions not supported')]);\n    }\n\n    const isZoomConstant = isConstant.isGlobalPropertyConstant(parsed, ['zoom', 'pitch', 'distance-from-center']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError('', 'zoom expressions not supported')]);\n    }\n\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ParsingError) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n\n    if (!zoomCurve) {\n        return success(isFeatureConstant ?\n            (new ZoomConstantExpression('constant', expression.value)                    ) :\n            (new ZoomConstantExpression('source', expression.value)                  ));\n    }\n\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n\n    return success(isFeatureConstant ?\n        (new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType)                  ) :\n        (new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType)                     ));\n}\n\nimport {isFunction, createFunction} from '../function/index.js';\nimport {Color} from './values.js';\n\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nexport class StylePropertyFunction    {\n                                               \n                                               \n\n                         \n                                                                    \n                                                                                  \n                              \n\n    constructor(parameters                               , specification                            ) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extend(this, createFunction(this._parameters, this._specification));\n    }\n\n    static deserialize(serialized                                                                                          )                           {\n        return new StylePropertyFunction(serialized._parameters, serialized._specification);\n    }\n\n    static serialize(input                          )                                                                                           {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\n\nexport function normalizePropertyExpression   (value                               , specification                            )                          {\n    if (isFunction(value)) {\n        return (new StylePropertyFunction(value, specification)     );\n\n    } else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n\n    } else {\n        let constant      = value;\n        if (typeof value === 'string' && specification.type === 'color') {\n            constant = Color.parse(value);\n        }\n        return {\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression            )                                           {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n\n    } else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n\n    } else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n\n        result = expression;\n    }\n\n    if (result instanceof ParsingError) {\n        return result;\n    }\n\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n\n    return result;\n}\n\nimport {ColorType, StringType, NumberType, BooleanType, ValueType, FormattedType, ResolvedImageType, array} from './types.js';\n\nfunction getExpectedType(spec                            )       {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n\n    return types[spec.type];\n}\n\nfunction getDefaultValue(spec                            )        {\n    if (spec.type === 'color' && (isFunction(spec.default) || Array.isArray(spec.default))) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n","//      \n\n                                                                 \n\nexport function supportsPropertyExpression(spec                            )          {\n    return spec['property-type'] === 'data-driven';\n}\n\nexport function supportsZoomExpression(spec                            )          {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\n\nexport function supportsInterpolation(spec                            )          {\n    return !!spec.expression && spec.expression.interpolated;\n}\n","//      \n\n// Turn jsonlint-lines-primitives objects into primitive objects\nexport function unbundle(value       )        {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\n\nexport function deepUnbundle(value       )        {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue                           = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n\n    return unbundle(value);\n}\n","//      \n\nimport spec from './v8.json';\n\n                                         \n\nexport default spec;\n","//      \n\nimport {createExpression} from '../expression/index.js';\nimport {isFeatureConstant} from '../expression/is_constant.js';\nimport {deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport latest from '../reference/latest.js';\n                                                                      \n                                                             \n                                                \n\n                                                                                                       \n                                                                                                                                                                                                   \n                                                                                                                                      \n\nexport default createFilter;\nexport {isExpressionFilter, isDynamicFilter, extractStaticFilter};\n\nfunction isExpressionFilter(filter     )          {\n    if (filter === true || filter === false) {\n        return true;\n    }\n\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n\n    case 'in':\n        return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n\n    case 'any':\n    case 'all':\n        for (const f of filter.slice(1)) {\n            if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n\n    default:\n        return true;\n    }\n}\n\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @param {string} layerType the type of the layer this filter will be applied to.\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter     , layerType          = 'fill')                {\n    if (filter === null || filter === undefined) {\n        return {filter: () => true, needGeometry: false, needFeature: false};\n    }\n\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n    const filterExp = ((filter     )                             );\n\n    let staticFilter = true;\n    try {\n        staticFilter = extractStaticFilter(filterExp);\n    } catch (e) {\n        console.warn(\n`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\nand paste the contents of this message in the report.\nThank you!\nFilter Expression:\n${JSON.stringify(filterExp, null, 2)}\n        `);\n    }\n\n    // Compile the static component of the filter\n    const filterSpec = latest[`filter_${layerType}`];\n    const compiledStaticFilter = createExpression(staticFilter, filterSpec);\n\n    let filterFunc = null;\n    if (compiledStaticFilter.result === 'error') {\n        throw new Error(compiledStaticFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    } else {\n        filterFunc = (globalProperties                  , feature         , canonical                  ) => compiledStaticFilter.value.evaluate(globalProperties, feature, {}, canonical);\n    }\n\n    // If the static component is not equal to the entire filter then we have a dynamic component\n    // Compile the dynamic component separately\n    let dynamicFilterFunc = null;\n    let needFeature = null;\n    if (staticFilter !== filterExp) {\n        const compiledDynamicFilter = createExpression(filterExp, filterSpec);\n\n        if (compiledDynamicFilter.result === 'error') {\n            throw new Error(compiledDynamicFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        } else {\n            dynamicFilterFunc = (globalProperties                  , feature         , canonical                  , featureTileCoord        , featureDistanceData                      ) => compiledDynamicFilter.value.evaluate(globalProperties, feature, {}, canonical, undefined, undefined, featureTileCoord, featureDistanceData);\n            needFeature = !isFeatureConstant(compiledDynamicFilter.value.expression);\n        }\n    }\n\n    filterFunc = ((filterFunc     )                  );\n    const needGeometry = geometryNeeded(staticFilter);\n\n    return {\n        filter: filterFunc,\n        dynamicFilter: dynamicFilterFunc ? dynamicFilterFunc : undefined,\n        needGeometry,\n        needFeature: !!needFeature\n    };\n}\n\nfunction extractStaticFilter(filter     )      {\n    if (!isDynamicFilter(filter)) {\n        return filter;\n    }\n\n    // Shallow copy so we can replace expressions in-place\n    let result = deepUnbundle(filter);\n\n    // 1. Union branches\n    unionDynamicBranches(result);\n\n    // 2. Collapse dynamic conditions to  `true`\n    result = collapseDynamicBooleanExpressions(result);\n\n    return result;\n}\n\nfunction collapseDynamicBooleanExpressions(expression     )      {\n    if (!Array.isArray(expression)) {\n        return expression;\n    }\n\n    const collapsed = collapsedExpression(expression);\n    if (collapsed === true) {\n        return collapsed;\n    } else {\n        return collapsed.map((subExpression) => collapseDynamicBooleanExpressions(subExpression));\n    }\n}\n\n/**\n * Traverses the expression and replaces all instances of branching on a\n * `dynamic` conditional (such as `['pitch']` or `['distance-from-center']`)\n * into an `any` expression.\n * This ensures that all possible outcomes of a `dynamic` branch are considered\n * when evaluating the expression upfront during filtering.\n *\n * @param {Array<any>} filter the filter expression mutated in-place.\n */\nfunction unionDynamicBranches(filter     ) {\n    let isBranchingDynamically = false;\n    const branches = [];\n\n    if (filter[0] === 'case') {\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[i]);\n            branches.push(filter[i + 1]);\n        }\n\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'match') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 2; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'step') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n    }\n\n    if (isBranchingDynamically) {\n        filter.length = 0;\n        filter.push('any', ...branches);\n    }\n\n    // traverse and recurse into children\n    for (let i = 1; i < filter.length; i++) {\n        unionDynamicBranches(filter[i]);\n    }\n}\n\nfunction isDynamicFilter(filter     )          {\n    // Base Cases\n    if (!Array.isArray(filter)) {\n        return false;\n    }\n    if (isRootExpressionDynamic(filter[0])) {\n        return true;\n    }\n\n    for (let i = 1; i < filter.length; i++) {\n        const child = filter[i];\n        if (isDynamicFilter(child)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isRootExpressionDynamic(expression        )          {\n    return expression === 'pitch' ||\n        expression === 'distance-from-center';\n}\n\nconst dynamicConditionExpressions = new Set([\n    'in',\n    '==',\n    '!=',\n    '>',\n    '>=',\n    '<',\n    '<=',\n    'to-boolean'\n]);\n\nfunction collapsedExpression(expression     )      {\n    if (dynamicConditionExpressions.has(expression[0])) {\n\n        for (let i = 1; i < expression.length; i++) {\n            const param = expression[i];\n            if (isDynamicFilter(param)) {\n                return true;\n            }\n        }\n    }\n    return expression;\n}\n\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter)) return false;\n    if (filter[0] === 'within') return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index])) return true;\n    }\n    return false;\n}\n\nfunction convertFilter(filter             )        {\n    if (!filter) return true;\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n    const converted =\n        op === '==' ? convertComparisonOp(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) :\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>=' ? convertComparisonOp(filter[1], filter[2], op) :\n        op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n        op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) :\n        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) :\n        op === 'in' ? convertInOp(filter[1], filter.slice(2)) :\n        op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) :\n        op === 'has' ? convertHasOp(filter[1]) :\n        op === '!has' ? convertNegation(convertHasOp(filter[1])) :\n        op === 'within' ? filter :\n        true;\n    return converted;\n}\n\nfunction convertComparisonOp(property        , value     , op        ) {\n    switch (property) {\n    case '$type':\n        return [`filter-type-${op}`, value];\n    case '$id':\n        return [`filter-id-${op}`, value];\n    default:\n        return [`filter-${op}`, property, value];\n    }\n}\n\nfunction convertDisjunctionOp(filters                   ) {\n    return ['any'].concat(filters.map(convertFilter));\n}\n\nfunction convertInOp(property        , values            ) {\n    if (values.length === 0) { return false; }\n    switch (property) {\n    case '$type':\n        return [`filter-type-in`, ['literal', values]];\n    case '$id':\n        return [`filter-id-in`, ['literal', values]];\n    default:\n        if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n            return ['filter-in-large', property, ['literal', values.sort(compare)]];\n        } else {\n            return ['filter-in-small', property, ['literal', values]];\n        }\n    }\n}\n\nfunction convertHasOp(property        ) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [`filter-has-id`];\n    default:\n        return [`filter-has`, property];\n    }\n}\n\nfunction convertNegation(filter       ) {\n    return ['!', filter];\n}\n","//      \nexport default ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n","//      \n\nimport refProperties from './util/ref_properties.js';\n\n                                                   \n\nfunction deref(layer                    , parent                    )                     {\n    const result = {};\n\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            result[k] = (parent     )[k];\n        }\n    });\n\n    return ((result     )                    );\n}\n\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nexport default function derefLayers(layers                           )                            {\n    layers = layers.slice();\n\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[(layers[i]     ).ref]);\n        }\n    }\n\n    return layers;\n}\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true\n      ),\n      '`resolutions` must be sorted in descending order'\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal'\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal'\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").FeatureLike>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").FeatureLike>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          if (!range) {\n            throw new Error(\n              'The {-y} placeholder requires a tile grid with extent'\n            );\n          }\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","const mapboxBaseUrl = 'https://api.mapbox.com';\n\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nexport function getMapboxPath(url) {\n  const startsWith = 'mapbox://';\n  if (url.indexOf(startsWith) !== 0) {\n    return '';\n  }\n  return url.slice(startsWith.length);\n}\n\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeSpriteUrl(url, token, styleUrl) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, styleUrl).href);\n  }\n  const startsWith = 'sprites/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected sprites url: ${url}`);\n  }\n  const sprite = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${sprite}/sprite?access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeStyleUrl(url, token) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, location.href).href);\n  }\n  const startsWith = 'styles/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected style url: ${url}`);\n  }\n  const style = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${style}?&access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {string} A vector tile template.\n * @private\n */\nexport function normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n  const urlObject = new URL(url, styleUrl);\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    if (!token) {\n      return decodeURI(urlObject.href);\n    }\n    if (!urlObject.searchParams.has(tokenParam)) {\n      urlObject.searchParams.set(tokenParam, token);\n    }\n    return decodeURI(urlObject.href);\n  }\n\n  if (mapboxPath === 'mapbox.satellite') {\n    const sizeFactor = window.devicePixelRatio >= 1.5 ? '@2x' : '';\n    return `https://api.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}${sizeFactor}.webp?access_token=${token}`;\n  }\n  return `https://{a-d}.tiles.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}.vector.pbf?access_token=${token}`;\n}\n","import TileGrid from 'ol/tilegrid/TileGrid.js';\nimport TileState from 'ol/TileState.js';\nimport {VectorTile} from 'ol';\nimport {expandUrl} from 'ol/tileurlfunction.js';\nimport {get as getProjection} from 'ol/proj.js';\nimport {getUid} from 'ol/util.js';\nimport {normalizeSourceUrl, normalizeStyleUrl} from './mapbox.js';\nimport {toPromise} from 'ol/functions.js';\n\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n\n/** @typedef {import(\"ol\").Map} Map */\n/** @typedef {import(\"ol/layer\").Layer} Layer */\n/** @typedef {import(\"ol/layer\").Group} LayerGroup */\n/** @typedef {import(\"ol/layer\").Vector} VectorLayer */\n/** @typedef {import(\"ol/layer\").VectorTile} VectorTileLayer */\n/** @typedef {import(\"ol/source\").Source} Source */\n\nconst functionCacheByStyleId = {};\nconst filterCacheByStyleId = {};\n\nlet styleId = 0;\nexport function getStyleId(glStyle) {\n  if (!glStyle.id) {\n    glStyle.id = styleId++;\n  }\n  return glStyle.id;\n}\n\nexport function getStyleFunctionKey(glStyle, olLayer) {\n  return getStyleId(glStyle) + '.' + getUid(olLayer);\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nexport function getFunctionCache(glStyle) {\n  let functionCache = functionCacheByStyleId[glStyle.id];\n  if (!functionCache) {\n    functionCache = {};\n    functionCacheByStyleId[getStyleId(glStyle)] = functionCache;\n  }\n  return functionCache;\n}\n\nexport function clearFunctionCache() {\n  for (const key in functionCacheByStyleId) {\n    delete functionCacheByStyleId[key];\n  }\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nexport function getFilterCache(glStyle) {\n  let filterCache = filterCacheByStyleId[glStyle.id];\n  if (!filterCache) {\n    filterCache = {};\n    filterCacheByStyleId[getStyleId(glStyle)] = filterCache;\n  }\n  return filterCache;\n}\n\nexport function deg2rad(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\nexport const defaultResolutions = (function () {\n  const resolutions = [];\n  for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n    resolutions.push(res);\n  }\n  return resolutions;\n})();\n\nexport const defaultTileGrid = new TileGrid({\n  extent: getProjection('EPSG:3857').getExtent(),\n  resolutions: defaultResolutions,\n});\n\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nexport function createCanvas(width, height) {\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') { // eslint-disable-line\n    return /** @type {?} */ (new OffscreenCanvas(width, height));\n  }\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n\nexport function getZoomForResolution(resolution, resolutions) {\n  let i = 0;\n  const ii = resolutions.length;\n  for (; i < ii; ++i) {\n    const candidate = resolutions[i];\n    if (candidate < resolution && i + 1 < ii) {\n      const zoomFactor = resolutions[i] / resolutions[i + 1];\n      return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n    }\n  }\n  return ii - 1;\n}\n\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options={}] Options.\n * @param {{request?: Request}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nexport function fetchResource(resourceType, url, options = {}, metadata) {\n  if (url in pendingRequests) {\n    if (metadata) {\n      metadata.request = pendingRequests[url][0];\n    }\n    return pendingRequests[url][1];\n  }\n  const transformedRequest = options.transformRequest\n    ? options.transformRequest(url, resourceType) || url\n    : url;\n  const pendingRequest = toPromise(() => transformedRequest).then(\n    (transformedRequest) => {\n      if (!(transformedRequest instanceof Request)) {\n        transformedRequest = new Request(transformedRequest);\n      }\n      if (!transformedRequest.headers.get('Accept')) {\n        transformedRequest.headers.set('Accept', 'application/json');\n      }\n      if (metadata) {\n        metadata.request = transformedRequest;\n      }\n      return fetch(transformedRequest)\n        .then(function (response) {\n          delete pendingRequests[url];\n          return response.ok\n            ? response.json()\n            : Promise.reject(new Error('Error fetching source ' + url));\n        })\n        .catch(function (error) {\n          delete pendingRequests[url];\n          return Promise.reject(new Error('Error fetching source ' + url));\n        });\n    },\n  );\n  pendingRequests[url] = [transformedRequest, pendingRequest];\n  return pendingRequest;\n}\n\nexport function getGlStyle(glStyleOrUrl, options) {\n  if (typeof glStyleOrUrl === 'string') {\n    if (glStyleOrUrl.trim().startsWith('{')) {\n      try {\n        const glStyle = JSON.parse(glStyleOrUrl);\n        return Promise.resolve(glStyle);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    } else {\n      glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n      return fetchResource('Style', glStyleOrUrl, options);\n    }\n  } else {\n    return Promise.resolve(glStyleOrUrl);\n  }\n}\n\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise<{tileJson: Object, tileLoadFunction: import('ol/Tile.js').LoadFunction}?>} TileJson and load function\n */\nexport function getTileJson(glSource, styleUrl, options = {}) {\n  const cacheKey = [styleUrl, JSON.stringify(glSource)].toString();\n  let promise = tilejsonCache[cacheKey];\n  if (!promise || options.transformRequest) {\n    let tileLoadFunction;\n    if (options.transformRequest) {\n      tileLoadFunction = (tile, src) => {\n        const transformedRequest = options.transformRequest\n          ? options.transformRequest(src, 'Tiles') || src\n          : src;\n        if (tile instanceof VectorTile) {\n          tile.setLoader((extent, resolution, projection) => {\n            toPromise(() => transformedRequest).then((transformedRequest) => {\n              fetch(transformedRequest)\n                .then((response) => response.arrayBuffer())\n                .then((data) => {\n                  const format = tile.getFormat();\n                  const features = format.readFeatures(data, {\n                    extent: extent,\n                    featureProjection: projection,\n                  });\n                  // @ts-ignore\n                  tile.setFeatures(features);\n                })\n                .catch((e) => tile.setState(TileState.ERROR));\n            });\n          });\n        } else {\n          const img = tile.getImage();\n          toPromise(() => transformedRequest).then((transformedRequest) => {\n            if (transformedRequest instanceof Request) {\n              fetch(transformedRequest)\n                .then((response) => response.blob())\n                .then((blob) => {\n                  const url = URL.createObjectURL(blob);\n                  img.addEventListener('load', () => URL.revokeObjectURL(url));\n                  img.addEventListener('error', () => URL.revokeObjectURL(url));\n                  img.src = url;\n                })\n                .catch((e) => tile.setState(TileState.ERROR));\n            } else {\n              img.src = transformedRequest;\n            }\n          });\n        }\n      };\n    }\n    const url = glSource.url;\n    if (url && !glSource.tiles) {\n      const normalizedSourceUrl = normalizeSourceUrl(\n        url,\n        options.accessToken,\n        options.accessTokenParam || 'access_token',\n        styleUrl || location.href,\n      );\n      if (url.startsWith('mapbox://')) {\n        promise = Promise.resolve({\n          tileJson: Object.assign({}, glSource, {\n            url: undefined,\n            tiles: expandUrl(normalizedSourceUrl),\n          }),\n          tileLoadFunction,\n        });\n      } else {\n        const metadata = {};\n        promise = fetchResource(\n          'Source',\n          normalizedSourceUrl,\n          options,\n          metadata,\n        ).then(function (tileJson) {\n          tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n            if (tileJson.scheme === 'tms') {\n              tileUrl = tileUrl.replace('{y}', '{-y}');\n            }\n            return normalizeSourceUrl(\n              tileUrl,\n              options.accessToken,\n              options.accessTokenParam || 'access_token',\n              metadata.request.url,\n            );\n          });\n          return Promise.resolve({tileJson, tileLoadFunction});\n        });\n      }\n    } else {\n      glSource = Object.assign({}, glSource, {\n        tiles: glSource.tiles.map(function (tileUrl) {\n          if (glSource.scheme === 'tms') {\n            tileUrl = tileUrl.replace('{y}', '{-y}');\n          }\n          return normalizeSourceUrl(\n            tileUrl,\n            options.accessToken,\n            options.accessTokenParam || 'access_token',\n            styleUrl || location.href,\n          );\n        }),\n      });\n      promise = Promise.resolve({\n        tileJson: Object.assign({}, glSource),\n        tileLoadFunction,\n      });\n    }\n    tilejsonCache[cacheKey] = promise;\n  }\n  return promise;\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nexport function drawIconHalo(\n  spriteImage,\n  spriteImageData,\n  haloWidth,\n  haloColor,\n) {\n  const imageCanvas = document.createElement('canvas');\n  const imgSize = [\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width,\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height,\n  ];\n  imageCanvas.width = imgSize[0];\n  imageCanvas.height = imgSize[1];\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    spriteImage,\n    spriteImageData.x,\n    spriteImageData.y,\n    spriteImageData.width,\n    spriteImageData.height,\n    haloWidth * spriteImageData.pixelRatio,\n    haloWidth * spriteImageData.pixelRatio,\n    spriteImageData.width,\n    spriteImageData.height,\n  );\n  const imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n  imageContext.globalCompositeOperation = 'destination-over';\n  imageContext.fillStyle = `rgba(${haloColor.r * 255},${haloColor.g * 255},${\n    haloColor.b * 255\n  },${haloColor.a})`;\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const alpha = data[index + 3];\n      if (alpha > 0) {\n        imageContext.arc(\n          i,\n          j,\n          haloWidth * spriteImageData.pixelRatio,\n          0,\n          2 * Math.PI,\n        );\n      }\n    }\n  }\n  imageContext.fill();\n  return imageCanvas;\n}\n\nfunction smoothstep(min, max, value) {\n  const x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n  return x * x * (3 - 2 * x);\n}\n\n/**\n * @param {HTMLImageElement} image SDF image\n * @param {{x: number, y: number, width: number, height: number}} area Area to unSDF\n * @param {{r: number, g: number, b: number, a: number}} color Color to use\n * @return {HTMLCanvasElement} Regular image\n */\nexport function drawSDF(image, area, color) {\n  const imageCanvas = document.createElement('canvas');\n  imageCanvas.width = area.width;\n  imageCanvas.height = area.height;\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    image,\n    area.x,\n    area.y,\n    area.width,\n    area.height,\n    0,\n    0,\n    area.width,\n    area.height,\n  );\n  const imageData = imageContext.getImageData(0, 0, area.width, area.height);\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const dist = data[index + 3] / 255;\n\n      const buffer = 0.75;\n      const gamma = 0.1;\n\n      const alpha = smoothstep(buffer - gamma, buffer + gamma, dist);\n      if (alpha > 0) {\n        data[index + 0] = Math.round(255 * color.r * alpha);\n        data[index + 1] = Math.round(255 * color.g * alpha);\n        data[index + 2] = Math.round(255 * color.b * alpha);\n        data[index + 3] = Math.round(255 * alpha);\n      } else {\n        data[index + 3] = 0;\n      }\n    }\n  }\n  imageContext.putImageData(imageData, 0, 0);\n  return imageCanvas;\n}\n\n/**\n * @typedef {import(\"./apply.js\").Options} Options\n * @private\n */\n","import mb2css from 'mapbox-to-css-font';\nimport {checkedFonts, registerFont} from 'ol/render/canvas.js';\nimport {createCanvas} from './util.js';\n\nconst hairSpacePool = Array(256).join('\\u200A');\nexport function applyLetterSpacing(text, letterSpacing) {\n  if (letterSpacing >= 0.05) {\n    let textWithLetterSpacing = '';\n    const lines = text.split('\\n');\n    const joinSpaceString = hairSpacePool.slice(\n      0,\n      Math.round(letterSpacing / 0.1),\n    );\n    for (let l = 0, ll = lines.length; l < ll; ++l) {\n      if (l > 0) {\n        textWithLetterSpacing += '\\n';\n      }\n      textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n    }\n    return textWithLetterSpacing;\n  }\n  return text;\n}\n\nlet measureContext;\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvas(1, 1).getContext('2d');\n  }\n  return measureContext;\n}\n\nfunction measureText(text, letterSpacing) {\n  return (\n    getMeasureContext().measureText(text).width +\n    (text.length - 1) * letterSpacing\n  );\n}\n\nconst measureCache = {};\nexport function wrapText(text, font, em, letterSpacing) {\n  if (text.indexOf('\\n') !== -1) {\n    const hardLines = text.split('\\n');\n    const lines = [];\n    for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n      lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n    }\n    return lines.join('\\n');\n  }\n  const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n  let wrappedText = measureCache[key];\n  if (!wrappedText) {\n    const words = text.split(' ');\n    if (words.length > 1) {\n      const ctx = getMeasureContext();\n      ctx.font = font;\n      const oneEm = ctx.measureText('M').width;\n      const maxWidth = oneEm * em;\n      let line = '';\n      const lines = [];\n      // Pass 1 - wrap lines to not exceed maxWidth\n      for (let i = 0, ii = words.length; i < ii; ++i) {\n        const word = words[i];\n        const testLine = line + (line ? ' ' : '') + word;\n        if (measureText(testLine, letterSpacing) <= maxWidth) {\n          line = testLine;\n        } else {\n          if (line) {\n            lines.push(line);\n          }\n          line = word;\n        }\n      }\n      if (line) {\n        lines.push(line);\n      }\n      // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n      for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n        const line = lines[i];\n        if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n          const prevWidth =\n            i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n          const nextWidth =\n            i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n          lines.splice(i, 1);\n          ii -= 1;\n          if (prevWidth < nextWidth) {\n            lines[i - 1] += ' ' + line;\n            i -= 1;\n          } else {\n            lines[i] = line + ' ' + lines[i];\n          }\n        }\n      }\n      // Pass 3 - try to fill 80% of maxWidth for each line\n      for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n        const line = lines[i];\n        const next = lines[i + 1];\n        if (\n          measureText(line, letterSpacing) > maxWidth * 0.7 &&\n          measureText(next, letterSpacing) < maxWidth * 0.6\n        ) {\n          const lineWords = line.split(' ');\n          const lastWord = lineWords.pop();\n          if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n            lines[i] = lineWords.join(' ');\n            lines[i + 1] = lastWord + ' ' + next;\n          }\n          ii -= 1;\n        }\n      }\n      wrappedText = lines.join('\\n');\n    } else {\n      wrappedText = text;\n    }\n    wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n    measureCache[key] = wrappedText;\n  }\n  return wrappedText;\n}\n\nconst fontFamilyRegEx = /font-family: ?([^;]*);/;\nconst stripQuotesRegEx = /(\"|')/g;\nlet loadedFontFamilies;\nfunction hasFontFamily(family) {\n  if (!loadedFontFamilies) {\n    loadedFontFamilies = {};\n    const styleSheets = document.styleSheets;\n    for (let i = 0, ii = styleSheets.length; i < ii; ++i) {\n      const styleSheet = /** @type {CSSStyleSheet} */ (styleSheets[i]);\n      try {\n        const cssRules = styleSheet.rules || styleSheet.cssRules;\n        if (cssRules) {\n          for (let j = 0, jj = cssRules.length; j < jj; ++j) {\n            const cssRule = cssRules[j];\n            if (cssRule.type == 5) {\n              const match = cssRule.cssText.match(fontFamilyRegEx);\n              loadedFontFamilies[match[1].replace(stripQuotesRegEx, '')] = true;\n            }\n          }\n        }\n      } catch (e) {\n        // empty catch block\n      }\n    }\n  }\n  return family in loadedFontFamilies;\n}\n\nconst processedFontFamilies = {};\n\n/**\n * @param {Array} fonts Fonts.\n * @param {string} [templateUrl] Template URL.\n * @return {Array} Processed fonts.\n * @private\n */\nexport function getFonts(\n  fonts,\n  templateUrl = 'https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css',\n) {\n  const fontsKey = fonts.toString();\n  if (fontsKey in processedFontFamilies) {\n    return processedFontFamilies[fontsKey];\n  }\n  const fontDescriptions = [];\n  for (let i = 0, ii = fonts.length; i < ii; ++i) {\n    fonts[i] = fonts[i].replace('Arial Unicode MS', 'Arial');\n    const font = fonts[i];\n    const cssFont = mb2css(font, 1);\n    registerFont(cssFont);\n    const parts = cssFont.split(' ');\n    fontDescriptions.push([\n      parts.slice(3).join(' ').replace(/\"/g, ''),\n      parts[1],\n      parts[0],\n    ]);\n  }\n  for (let i = 0, ii = fontDescriptions.length; i < ii; ++i) {\n    const fontDescription = fontDescriptions[i];\n    const family = fontDescription[0];\n    if (!hasFontFamily(family)) {\n      if (\n        checkedFonts.get(\n          `${fontDescription[2]}\\n${fontDescription[1]} \\n${family}`,\n        ) !== 100\n      ) {\n        const fontUrl = templateUrl\n          .replace('{font-family}', family.replace(/ /g, '-').toLowerCase())\n          .replace('{Font+Family}', family.replace(/ /g, '+'))\n          .replace('{fontweight}', fontDescription[1])\n          .replace(\n            '{-fontstyle}',\n            fontDescription[2].replace('normal', '').replace(/(.+)/, '-$1'),\n          )\n          .replace('{fontstyle}', fontDescription[2]);\n        if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n          const markup = document.createElement('link');\n          markup.href = fontUrl;\n          markup.rel = 'stylesheet';\n          document.head.appendChild(markup);\n        }\n      }\n    }\n  }\n  processedFontFamilies[fontsKey] = fonts;\n  return fonts;\n}\n","/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\nimport {toPromise} from 'ol/functions.js';\n\nimport Color from '@mapbox/mapbox-gl-style-spec/util/color.js';\nimport convertFunction from '@mapbox/mapbox-gl-style-spec/function/convert.js';\nimport createFilter from '@mapbox/mapbox-gl-style-spec/feature_filter/index.js';\nimport derefLayers from '@mapbox/mapbox-gl-style-spec/deref.js';\nimport mb2css from 'mapbox-to-css-font';\nimport spec from '@mapbox/mapbox-gl-style-spec/reference/v8.json';\nimport {applyLetterSpacing, wrapText} from './text.js';\nimport {\n  clearFunctionCache,\n  createCanvas,\n  defaultResolutions,\n  deg2rad,\n  drawIconHalo,\n  drawSDF,\n  getFilterCache,\n  getFunctionCache,\n  getStyleFunctionKey,\n  getZoomForResolution,\n} from './util.js';\nimport {\n  createPropertyExpression,\n  isExpression,\n} from '@mapbox/mapbox-gl-style-spec/expression/index.js';\nimport {isFunction} from '@mapbox/mapbox-gl-style-spec/function/index.js';\n\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n * @typedef {import('./util.js').ResourceType} ResourceType\n */\n\nconst types = {\n  'Point': 1,\n  'MultiPoint': 1,\n  'LineString': 2,\n  'MultiLineString': 2,\n  'Polygon': 3,\n  'MultiPolygon': 3,\n};\nconst anchor = {\n  'center': [0.5, 0.5],\n  'left': [0, 0.5],\n  'right': [1, 0.5],\n  'top': [0.5, 0],\n  'bottom': [0.5, 1],\n  'top-left': [0, 0],\n  'top-right': [1, 0],\n  'bottom-left': [0, 1],\n  'bottom-right': [1, 1],\n};\n\nconst expressionData = function (rawExpression, propertySpec) {\n  const compiledExpression = createPropertyExpression(\n    rawExpression,\n    propertySpec,\n  );\n  if (compiledExpression.result === 'error') {\n    throw new Error(\n      compiledExpression.value\n        .map((err) => `${err.key}: ${err.message}`)\n        .join(', '),\n    );\n  }\n  return compiledExpression.value;\n};\n\nconst emptyObj = {};\nconst zoomObj = {zoom: 0};\nlet renderFeatureCoordinates, renderFeature;\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nexport function getValue(\n  layer,\n  layoutOrPaint,\n  property,\n  zoom,\n  feature,\n  functionCache,\n  featureState,\n) {\n  const layerId = layer.id;\n  if (!functionCache) {\n    functionCache = {};\n    console.warn('No functionCache provided to getValue()'); //eslint-disable-line no-console\n  }\n  if (!functionCache[layerId]) {\n    functionCache[layerId] = {};\n  }\n  const functions = functionCache[layerId];\n  if (!functions[property]) {\n    let value = (layer[layoutOrPaint] || emptyObj)[property];\n    const propertySpec = spec[`${layoutOrPaint}_${layer.type}`][property];\n    if (value === undefined) {\n      value = propertySpec.default;\n    }\n    let isExpr = isExpression(value);\n    if (!isExpr && isFunction(value)) {\n      value = convertFunction(value, propertySpec);\n      isExpr = true;\n    }\n    if (isExpr) {\n      const compiledExpression = expressionData(value, propertySpec);\n      functions[property] =\n        compiledExpression.evaluate.bind(compiledExpression);\n    } else {\n      if (propertySpec.type == 'color') {\n        value = Color.parse(value);\n      }\n      functions[property] = function () {\n        return value;\n      };\n    }\n  }\n  zoomObj.zoom = zoom;\n  return functions[property](zoomObj, feature, featureState);\n}\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {\"icon\"|\"text\"} prefix Style property prefix.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getDeclutterMode(layer, zoom, feature, prefix, functionCache) {\n  const allowOverlap = getValue(\n    layer,\n    'layout',\n    `${prefix}-allow-overlap`,\n    zoom,\n    feature,\n    functionCache,\n  );\n  if (!allowOverlap) {\n    return 'declutter';\n  }\n  const ignorePlacement = getValue(\n    layer,\n    'layout',\n    `${prefix}-ignore-placement`,\n    zoom,\n    feature,\n    functionCache,\n  );\n  if (!ignorePlacement) {\n    return 'obstacle';\n  }\n  return 'none';\n}\n\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n  if (!filterCache) {\n    console.warn('No filterCache provided to evaluateFilter()'); //eslint-disable-line no-console\n  }\n  if (!(layerId in filterCache)) {\n    filterCache[layerId] = createFilter(filter).filter;\n  }\n  zoomObj.zoom = zoom;\n  return filterCache[layerId](zoomObj, feature);\n}\n\nlet renderTransparentEnabled = false;\n\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nexport function renderTransparent(enabled) {\n  if (enabled !== renderTransparentEnabled) {\n    clearFunctionCache();\n    renderTransparentEnabled = enabled;\n  }\n}\n\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n  if (color) {\n    if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n      return undefined;\n    }\n    const a = color.a;\n    opacity = opacity === undefined ? 1 : opacity;\n    return a === 0\n      ? 'transparent'\n      : 'rgba(' +\n          Math.round((color.r * 255) / a) +\n          ',' +\n          Math.round((color.g * 255) / a) +\n          ',' +\n          Math.round((color.b * 255) / a) +\n          ',' +\n          a * opacity +\n          ')';\n  }\n  return color;\n}\n\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n  return text.replace(templateRegEx, function (match) {\n    return properties[match.slice(1, -1)] || '';\n  });\n}\n\nlet recordLayer = false;\n\n/**\n * Turns recording of the Mapbox Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nexport function recordStyleLayer(record = false) {\n  recordLayer = record;\n}\n\nexport const styleFunctionArgs = {};\n\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox Style object.\n * @param {string|Request|Promise<string|Request>} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox Style object.\n * @param {function(Array<string>, string=):Array<string>} getFonts Function that\n * receives a font stack and the url template from the GL style's `metadata['ol:webfonts']`\n * property (if set) as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nexport function stylefunction(\n  olLayer,\n  glStyle,\n  sourceOrLayers,\n  resolutions = defaultResolutions,\n  spriteData = undefined,\n  spriteImageUrl = undefined,\n  getFonts = undefined,\n  getImage = undefined,\n) {\n  if (typeof glStyle == 'string') {\n    glStyle = JSON.parse(glStyle);\n  }\n  if (glStyle.version != 8) {\n    throw new Error('glStyle version 8 required.');\n  }\n  styleFunctionArgs[getStyleFunctionKey(glStyle, olLayer)] =\n    Array.from(arguments);\n\n  let spriteImage, spriteImageSize;\n  let spriteImageUnSDFed;\n\n  if (spriteImageUrl) {\n    if (typeof Image !== 'undefined') {\n      const img = new Image();\n      let blobUrl;\n      toPromise(() => spriteImageUrl).then((spriteImageUrl) => {\n        if (spriteImageUrl instanceof Request) {\n          fetch(spriteImageUrl)\n            .then((response) => response.blob())\n            .then((blob) => {\n              blobUrl = URL.createObjectURL(blob);\n              img.src = blobUrl;\n            })\n            .catch(() => {});\n        } else {\n          img.crossOrigin = 'anonymous';\n          img.src = spriteImageUrl;\n          if (blobUrl) {\n            URL.revokeObjectURL(blobUrl);\n          }\n        }\n      });\n      img.onload = function () {\n        spriteImage = img;\n        spriteImageSize = [img.width, img.height];\n        olLayer.changed();\n        img.onload = null;\n      };\n    } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) { //eslint-disable-line\n      const worker = /** @type {*} */ (self);\n      // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n      worker.postMessage({\n        action: 'loadImage',\n        src: spriteImageUrl,\n      });\n      worker.addEventListener('message', function handler(event) {\n        if (\n          event.data.action === 'imageLoaded' &&\n          event.data.src === spriteImageUrl\n        ) {\n          spriteImage = event.data.image;\n          spriteImageSize = [spriteImage.width, spriteImage.height];\n        }\n      });\n    }\n  }\n\n  const allLayers = derefLayers(glStyle.layers);\n\n  const layersBySourceLayer = {};\n  const mapboxLayers = [];\n\n  const iconImageCache = {};\n  const patternCache = {};\n  const functionCache = getFunctionCache(glStyle);\n  const filterCache = getFilterCache(glStyle);\n\n  let mapboxSource;\n  for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n    const layer = allLayers[i];\n    const layerId = layer.id;\n    if (\n      (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers) ||\n      (Array.isArray(sourceOrLayers) && sourceOrLayers.indexOf(layerId) !== -1)\n    ) {\n      const sourceLayer = layer['source-layer'];\n      if (!mapboxSource) {\n        mapboxSource = layer.source;\n        const source = glStyle.sources[mapboxSource];\n        if (!source) {\n          throw new Error(`Source \"${mapboxSource}\" is not defined`);\n        }\n        const type = source.type;\n        if (type !== 'vector' && type !== 'geojson') {\n          throw new Error(\n            `Source \"${mapboxSource}\" is not of type \"vector\" or \"geojson\", but \"${type}\"`,\n          );\n        }\n      } else if (layer.source !== mapboxSource) {\n        throw new Error(\n          `Layer \"${layerId}\" does not use source \"${mapboxSource}`,\n        );\n      }\n      let layers = layersBySourceLayer[sourceLayer];\n      if (!layers) {\n        layers = [];\n        layersBySourceLayer[sourceLayer] = layers;\n      }\n      layers.push({\n        layer: layer,\n        index: i,\n      });\n      mapboxLayers.push(layerId);\n    }\n  }\n\n  const textHalo = new Stroke();\n  const textColor = new Fill();\n\n  const styles = [];\n\n  /**\n   * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {string} [onlyLayer] Calculate style for this layer only.\n   * @return {Array<import(\"ol/style/Style\").default>} Style.\n   */\n  const styleFunction = function (feature, resolution, onlyLayer) {\n    const properties = feature.getProperties();\n    const layers = layersBySourceLayer[properties.layer];\n    if (!layers) {\n      return undefined;\n    }\n    let zoom = resolutions.indexOf(resolution);\n    if (zoom == -1) {\n      zoom = getZoomForResolution(resolution, resolutions);\n    }\n    const type = types[feature.getGeometry().getType()];\n    const f = {\n      id: feature.getId(),\n      properties: properties,\n      type: type,\n    };\n    const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n    let stylesLength = -1;\n    let featureBelongsToLayer;\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      const layerData = layers[i];\n      const layer = layerData.layer;\n      const layerId = layer.id;\n      if (onlyLayer !== undefined && onlyLayer !== layerId) {\n        continue;\n      }\n\n      const layout = layer.layout || emptyObj;\n      const paint = layer.paint || emptyObj;\n      if (\n        layout.visibility === 'none' ||\n        ('minzoom' in layer && zoom < layer.minzoom) ||\n        ('maxzoom' in layer && zoom >= layer.maxzoom)\n      ) {\n        continue;\n      }\n      const filter = layer.filter;\n      if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n        featureBelongsToLayer = layer;\n        let color, opacity, fill, stroke, strokeColor, style;\n        const index = layerData.index;\n        if (\n          type == 3 &&\n          (layer.type == 'fill' || layer.type == 'fill-extrusion')\n        ) {\n          opacity = getValue(\n            layer,\n            'paint',\n            layer.type + '-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (layer.type + '-pattern' in paint) {\n            const fillIcon = getValue(\n              layer,\n              'paint',\n              layer.type + '-pattern',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            if (fillIcon) {\n              const icon =\n                typeof fillIcon === 'string'\n                  ? fromTemplate(fillIcon, properties)\n                  : fillIcon.toString();\n              if (spriteImage && spriteData && spriteData[icon]) {\n                ++stylesLength;\n                style = styles[stylesLength];\n                if (\n                  !style ||\n                  !style.getFill() ||\n                  style.getStroke() ||\n                  style.getText()\n                ) {\n                  style = new Style({\n                    fill: new Fill(),\n                  });\n                  styles[stylesLength] = style;\n                }\n                fill = style.getFill();\n                style.setZIndex(index);\n                const icon_cache_key = icon + '.' + opacity;\n                let pattern = patternCache[icon_cache_key];\n                if (!pattern) {\n                  const spriteImageData = spriteData[icon];\n                  const canvas = createCanvas(\n                    spriteImageData.width,\n                    spriteImageData.height,\n                  );\n                  const ctx = /** @type {CanvasRenderingContext2D} */ (\n                    canvas.getContext('2d')\n                  );\n                  ctx.globalAlpha = opacity;\n                  ctx.drawImage(\n                    spriteImage,\n                    spriteImageData.x,\n                    spriteImageData.y,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                    0,\n                    0,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                  );\n                  pattern = ctx.createPattern(canvas, 'repeat');\n                  patternCache[icon_cache_key] = pattern;\n                }\n                fill.setColor(pattern);\n              }\n            }\n          } else {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                layer.type + '-color',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n              opacity,\n            );\n            if (layer.type + '-outline-color' in paint) {\n              strokeColor = colorWithOpacity(\n                getValue(\n                  layer,\n                  'paint',\n                  layer.type + '-outline-color',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                ),\n                opacity,\n              );\n            }\n            if (!strokeColor) {\n              strokeColor = color;\n            }\n            if (color || strokeColor) {\n              ++stylesLength;\n              style = styles[stylesLength];\n              if (\n                !style ||\n                (color && !style.getFill()) ||\n                (!color && style.getFill()) ||\n                (strokeColor && !style.getStroke()) ||\n                (!strokeColor && style.getStroke()) ||\n                style.getText()\n              ) {\n                style = new Style({\n                  fill: color ? new Fill() : undefined,\n                  stroke: strokeColor ? new Stroke() : undefined,\n                });\n                styles[stylesLength] = style;\n              }\n              if (color) {\n                fill = style.getFill();\n                fill.setColor(color);\n              }\n              if (strokeColor) {\n                stroke = style.getStroke();\n                stroke.setColor(strokeColor);\n                stroke.setWidth(0.5);\n              }\n              style.setZIndex(index);\n            }\n          }\n        }\n        if (type != 1 && layer.type == 'line') {\n          if (!('line-pattern' in paint)) {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'line-color',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n              getValue(\n                layer,\n                'paint',\n                'line-opacity',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n          } else {\n            color = undefined;\n          }\n          const width = getValue(\n            layer,\n            'paint',\n            'line-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (color && width > 0) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getStroke() ||\n              style.getFill() ||\n              style.getText()\n            ) {\n              style = new Style({\n                stroke: new Stroke(),\n              });\n              styles[stylesLength] = style;\n            }\n            stroke = style.getStroke();\n            stroke.setLineCap(\n              getValue(\n                layer,\n                'layout',\n                'line-cap',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setLineJoin(\n              getValue(\n                layer,\n                'layout',\n                'line-join',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setMiterLimit(\n              getValue(\n                layer,\n                'layout',\n                'line-miter-limit',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setColor(color);\n            stroke.setWidth(width);\n            stroke.setLineDash(\n              paint['line-dasharray']\n                ? getValue(\n                    layer,\n                    'paint',\n                    'line-dasharray',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState,\n                  ).map(function (x) {\n                    return x * width;\n                  })\n                : null,\n            );\n            style.setZIndex(index);\n          }\n        }\n\n        let hasImage = false;\n        let text = null;\n        let placementAngle = 0;\n        let icon, iconImg, skipLabel;\n        if ((type == 1 || type == 2) && 'icon-image' in layout) {\n          const iconImage = getValue(\n            layer,\n            'layout',\n            'icon-image',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (iconImage) {\n            icon =\n              typeof iconImage === 'string'\n                ? fromTemplate(iconImage, properties)\n                : iconImage.toString();\n            let styleGeom = undefined;\n            const imageElement = getImage ? getImage(olLayer, icon) : undefined;\n            if (\n              (spriteImage && spriteData && spriteData[icon]) ||\n              imageElement\n            ) {\n              const iconRotationAlignment = getValue(\n                layer,\n                'layout',\n                'icon-rotation-alignment',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              );\n              if (type == 2) {\n                const geom = /** @type {*} */ (feature.getGeometry());\n                // ol package and ol-debug.js only\n                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                  const extent = geom.getExtent();\n                  const size = Math.sqrt(\n                    Math.max(\n                      Math.pow((extent[2] - extent[0]) / resolution, 2),\n                      Math.pow((extent[3] - extent[1]) / resolution, 2),\n                    ),\n                  );\n                  if (size > 150) {\n                    //FIXME Do not hard-code a size of 150\n                    const midpoint =\n                      geom.getType() === 'MultiLineString'\n                        ? geom.getFlatMidpoints()\n                        : geom.getFlatMidpoint();\n                    if (!renderFeature) {\n                      renderFeatureCoordinates = [NaN, NaN];\n                      renderFeature = new RenderFeature(\n                        'Point',\n                        renderFeatureCoordinates,\n                        [],\n                        2,\n                        {},\n                        undefined,\n                      );\n                    }\n                    styleGeom = renderFeature;\n                    renderFeatureCoordinates[0] = midpoint[0];\n                    renderFeatureCoordinates[1] = midpoint[1];\n                    const placement = getValue(\n                      layer,\n                      'layout',\n                      'symbol-placement',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState,\n                    );\n                    if (\n                      placement === 'line' &&\n                      iconRotationAlignment === 'map'\n                    ) {\n                      const stride = geom.getStride();\n                      const coordinates = geom.getFlatCoordinates();\n                      for (\n                        let i = 0, ii = coordinates.length - stride;\n                        i < ii;\n                        i += stride\n                      ) {\n                        const x1 = coordinates[i];\n                        const y1 = coordinates[i + 1];\n                        const x2 = coordinates[i + stride];\n                        const y2 = coordinates[i + stride + 1];\n                        const minX = Math.min(x1, x2);\n                        const minY = Math.min(y1, y2);\n                        const maxX = Math.max(x1, x2);\n                        const maxY = Math.max(y1, y2);\n                        if (\n                          midpoint[0] >= minX &&\n                          midpoint[0] <= maxX &&\n                          midpoint[1] >= minY &&\n                          midpoint[1] <= maxY\n                        ) {\n                          placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                          break;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              if (type !== 2 || styleGeom) {\n                const iconSize = getValue(\n                  layer,\n                  'layout',\n                  'icon-size',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                );\n                const iconColor =\n                  paint['icon-color'] !== undefined\n                    ? getValue(\n                        layer,\n                        'paint',\n                        'icon-color',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState,\n                      )\n                    : null;\n                if (!iconColor || iconColor.a !== 0) {\n                  const haloColor = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-color',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState,\n                  );\n                  const haloWidth = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-width',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState,\n                  );\n                  let iconCacheKey = `${icon}.${iconSize}.${haloWidth}.${haloColor}`;\n                  if (iconColor !== null) {\n                    iconCacheKey += `.${iconColor}`;\n                  }\n                  iconImg = iconImageCache[iconCacheKey];\n                  if (!iconImg) {\n                    const declutterMode = getDeclutterMode(\n                      layer,\n                      zoom,\n                      f,\n                      'icon',\n                      functionCache,\n                    );\n                    let displacement;\n                    if ('icon-offset' in layout) {\n                      displacement = getValue(\n                        layer,\n                        'layout',\n                        'icon-offset',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState,\n                      ).slice(0);\n                      displacement[0] *= iconSize;\n                      displacement[1] *= -iconSize;\n                    }\n                    let color = iconColor\n                      ? [\n                          iconColor.r * 255,\n                          iconColor.g * 255,\n                          iconColor.b * 255,\n                          iconColor.a,\n                        ]\n                      : undefined;\n                    if (imageElement) {\n                      const iconOptions = {\n                        color: color,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                        scale: iconSize,\n                      };\n                      if (typeof imageElement === 'string') {\n                        // it is a src URL\n                        iconOptions.src = imageElement;\n                      } else {\n                        iconOptions.img = imageElement;\n                        iconOptions.imgSize = [\n                          imageElement.width,\n                          imageElement.height,\n                        ];\n                      }\n                      iconImg = new Icon(iconOptions);\n                    } else {\n                      const spriteImageData = spriteData[icon];\n                      let img, size, offset;\n                      if (haloWidth) {\n                        if (spriteImageData.sdf) {\n                          img = drawIconHalo(\n                            drawSDF(\n                              spriteImage,\n                              spriteImageData,\n                              iconColor || [0, 0, 0, 1],\n                            ),\n                            {\n                              x: 0,\n                              y: 0,\n                              width: spriteImageData.width,\n                              height: spriteImageData.height,\n                              pixelRatio: spriteImageData.pixelRatio,\n                            },\n                            haloWidth,\n                            haloColor,\n                          );\n                          color = undefined; // do not tint haloed icons\n                        } else {\n                          img = drawIconHalo(\n                            spriteImage,\n                            spriteImageData,\n                            haloWidth,\n                            haloColor,\n                          );\n                        }\n                      } else {\n                        if (spriteImageData.sdf) {\n                          if (!spriteImageUnSDFed) {\n                            spriteImageUnSDFed = drawSDF(\n                              spriteImage,\n                              {\n                                x: 0,\n                                y: 0,\n                                width: spriteImageSize[0],\n                                height: spriteImageSize[1],\n                              },\n                              {r: 1, g: 1, b: 1, a: 1},\n                            );\n                          }\n                          img = spriteImageUnSDFed;\n                        } else {\n                          img = spriteImage;\n                        }\n                        size = [spriteImageData.width, spriteImageData.height];\n                        offset = [spriteImageData.x, spriteImageData.y];\n                      }\n                      iconImg = new Icon({\n                        color: color,\n                        img: img,\n                        // @ts-ignore\n                        imgSize: spriteImageSize,\n                        size: size,\n                        offset: offset,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        scale: iconSize / spriteImageData.pixelRatio,\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      });\n                    }\n                    iconImageCache[iconCacheKey] = iconImg;\n                  }\n                }\n                if (iconImg) {\n                  ++stylesLength;\n                  style = styles[stylesLength];\n                  if (\n                    !style ||\n                    !style.getImage() ||\n                    style.getFill() ||\n                    style.getStroke()\n                  ) {\n                    style = new Style();\n                    styles[stylesLength] = style;\n                  }\n                  style.setGeometry(styleGeom);\n                  iconImg.setRotation(\n                    placementAngle +\n                      deg2rad(\n                        getValue(\n                          layer,\n                          'layout',\n                          'icon-rotate',\n                          zoom,\n                          f,\n                          functionCache,\n                          featureState,\n                        ),\n                      ),\n                  );\n                  iconImg.setOpacity(\n                    getValue(\n                      layer,\n                      'paint',\n                      'icon-opacity',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState,\n                    ),\n                  );\n                  iconImg.setAnchor(\n                    anchor[\n                      getValue(\n                        layer,\n                        'layout',\n                        'icon-anchor',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState,\n                      )\n                    ],\n                  );\n                  style.setImage(iconImg);\n                  text = style.getText();\n                  style.setText(undefined);\n                  style.setZIndex(index);\n                  hasImage = true;\n                  skipLabel = false;\n                }\n              } else {\n                skipLabel = true;\n              }\n            }\n          }\n        }\n\n        if (type == 1 && layer.type === 'circle') {\n          ++stylesLength;\n          style = styles[stylesLength];\n          if (\n            !style ||\n            !style.getImage() ||\n            style.getFill() ||\n            style.getStroke()\n          ) {\n            style = new Style();\n            styles[stylesLength] = style;\n          }\n          const circleRadius =\n            'circle-radius' in paint\n              ? getValue(\n                  layer,\n                  'paint',\n                  'circle-radius',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                )\n              : 5;\n          const circleStrokeColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-color',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n\n          const circleTranslate = getValue(\n            layer,\n            'paint',\n            'circle-translate',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const circleColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-color',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n          const circleStrokeWidth = getValue(\n            layer,\n            'paint',\n            'circle-stroke-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const cache_key =\n            circleRadius +\n            '.' +\n            circleStrokeColor +\n            '.' +\n            circleColor +\n            '.' +\n            circleStrokeWidth +\n            '.' +\n            circleTranslate[0] +\n            '.' +\n            circleTranslate[1];\n\n          iconImg = iconImageCache[cache_key];\n          if (!iconImg) {\n            iconImg = new Circle({\n              radius: circleRadius,\n              displacement: [circleTranslate[0], -circleTranslate[1]],\n              stroke:\n                circleStrokeColor && circleStrokeWidth > 0\n                  ? new Stroke({\n                      width: circleStrokeWidth,\n                      color: circleStrokeColor,\n                    })\n                  : undefined,\n              fill: circleColor\n                ? new Fill({\n                    color: circleColor,\n                  })\n                : undefined,\n              declutterMode: 'none',\n            });\n            iconImageCache[cache_key] = iconImg;\n          }\n          style.setImage(iconImg);\n          text = style.getText();\n          style.setText(undefined);\n          style.setGeometry(undefined);\n          style.setZIndex(index);\n          hasImage = true;\n        }\n\n        let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n        if ('text-field' in layout) {\n          textSize = Math.round(\n            getValue(\n              layer,\n              'layout',\n              'text-size',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n          const fontArray = getValue(\n            layer,\n            'layout',\n            'text-font',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          textLineHeight = getValue(\n            layer,\n            'layout',\n            'text-line-height',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          font = mb2css(\n            getFonts\n              ? getFonts(\n                  fontArray,\n                  glStyle.metadata\n                    ? glStyle.metadata['ol:webfonts']\n                    : undefined,\n                )\n              : fontArray,\n            textSize,\n            textLineHeight,\n          );\n          if (!font.includes('sans-serif')) {\n            font += ',sans-serif';\n          }\n          letterSpacing = getValue(\n            layer,\n            'layout',\n            'text-letter-spacing',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          maxTextWidth = getValue(\n            layer,\n            'layout',\n            'text-max-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const textField = getValue(\n            layer,\n            'layout',\n            'text-field',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (typeof textField === 'object' && textField.sections) {\n            if (textField.sections.length === 1) {\n              label = textField.toString();\n            } else {\n              label = textField.sections.reduce((acc, chunk, i) => {\n                const fonts = chunk.fontStack\n                  ? chunk.fontStack.split(',')\n                  : fontArray;\n                const chunkFont = mb2css(\n                  getFonts ? getFonts(fonts) : fonts,\n                  textSize * (chunk.scale || 1),\n                  textLineHeight,\n                );\n                let text = chunk.text;\n                if (text === '\\n') {\n                  acc.push('\\n', '');\n                  return acc;\n                }\n                if (type == 2) {\n                  acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                  return;\n                }\n                text = wrapText(\n                  text,\n                  chunkFont,\n                  maxTextWidth,\n                  letterSpacing,\n                ).split('\\n');\n                for (let i = 0, ii = text.length; i < ii; ++i) {\n                  if (i > 0) {\n                    acc.push('\\n', '');\n                  }\n                  acc.push(text[i], chunkFont);\n                }\n                return acc;\n              }, []);\n            }\n          } else {\n            label = fromTemplate(textField, properties).trim();\n          }\n          opacity = getValue(\n            layer,\n            'paint',\n            'text-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n        }\n        if (label && opacity && !skipLabel) {\n          if (!hasImage) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getText() ||\n              style.getFill() ||\n              style.getStroke()\n            ) {\n              style = new Style();\n              styles[stylesLength] = style;\n            }\n            style.setImage(undefined);\n            style.setGeometry(undefined);\n          }\n          const declutterMode = getDeclutterMode(\n            layer,\n            zoom,\n            f,\n            'text',\n            functionCache,\n          );\n          if (!style.getText()) {\n            style.setText(text);\n          }\n          text = style.getText();\n          if (\n            !text ||\n            ('getDeclutterMode' in text &&\n              text.getDeclutterMode() !== declutterMode)\n          ) {\n            text = new Text({\n              padding: [2, 2, 2, 2],\n              // @ts-ignore\n              declutterMode: declutterMode,\n            });\n            style.setText(text);\n          }\n          const textTransform = getValue(\n            layer,\n            'layout',\n            'text-transform',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          if (textTransform == 'uppercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toUpperCase()))\n              : label.toUpperCase();\n          } else if (textTransform == 'lowercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toLowerCase()))\n              : label.toLowerCase();\n          }\n          const wrappedLabel = Array.isArray(label)\n            ? label\n            : type == 2\n              ? applyLetterSpacing(label, letterSpacing)\n              : wrapText(label, font, maxTextWidth, letterSpacing);\n          text.setText(wrappedLabel);\n          text.setFont(font);\n          text.setRotation(\n            deg2rad(\n              getValue(\n                layer,\n                'layout',\n                'text-rotate',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n            ),\n          );\n          const textAnchor = getValue(\n            layer,\n            'layout',\n            'text-anchor',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const placement =\n            hasImage || type == 1\n              ? 'point'\n              : getValue(\n                  layer,\n                  'layout',\n                  'symbol-placement',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                );\n          let textAlign;\n          if (placement === 'line-center') {\n            text.setPlacement('line');\n            textAlign = 'center';\n          } else {\n            text.setPlacement(placement);\n          }\n          if (placement === 'line' && typeof text.setRepeat === 'function') {\n            const symbolSpacing = getValue(\n              layer,\n              'layout',\n              'symbol-spacing',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setRepeat(symbolSpacing * 2);\n          }\n          text.setOverflow(placement === 'point');\n          let textHaloWidth = getValue(\n            layer,\n            'paint',\n            'text-halo-width',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const textOffset = getValue(\n            layer,\n            'layout',\n            'text-offset',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const textTranslate = getValue(\n            layer,\n            'paint',\n            'text-translate',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          // Text offset has to take halo width and line height into account\n          let vOffset = 0;\n          let hOffset = 0;\n          if (placement == 'point') {\n            textAlign = 'center';\n            if (textAnchor.indexOf('left') !== -1) {\n              textAlign = 'left';\n              hOffset = textHaloWidth;\n            } else if (textAnchor.indexOf('right') !== -1) {\n              textAlign = 'right';\n              hOffset = -textHaloWidth;\n            }\n            const textRotationAlignment = getValue(\n              layer,\n              'layout',\n              'text-rotation-alignment',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setRotateWithView(textRotationAlignment == 'map');\n          } else {\n            text.setMaxAngle(\n              (deg2rad(\n                getValue(\n                  layer,\n                  'layout',\n                  'text-max-angle',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState,\n                ),\n              ) *\n                label.length) /\n                wrappedLabel.length,\n            );\n            text.setRotateWithView(false);\n          }\n          text.setTextAlign(textAlign);\n          let textBaseline = 'middle';\n          if (textAnchor.indexOf('bottom') == 0) {\n            textBaseline = 'bottom';\n            vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n          } else if (textAnchor.indexOf('top') == 0) {\n            textBaseline = 'top';\n            vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n          }\n          text.setTextBaseline(textBaseline);\n          const textJustify = getValue(\n            layer,\n            'layout',\n            'text-justify',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n          text.setOffsetX(\n            textOffset[0] * textSize + hOffset + textTranslate[0],\n          );\n          text.setOffsetY(\n            textOffset[1] * textSize + vOffset + textTranslate[1],\n          );\n          textColor.setColor(\n            colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'text-color',\n                zoom,\n                f,\n                functionCache,\n                featureState,\n              ),\n              opacity,\n            ),\n          );\n          text.setFill(textColor);\n          const haloColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'text-halo-color',\n              zoom,\n              f,\n              functionCache,\n              featureState,\n            ),\n            opacity,\n          );\n          if (haloColor && textHaloWidth > 0) {\n            textHalo.setColor(haloColor);\n            // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n            // Halo width must be doubled because it is applied around the center of the text outline\n            textHaloWidth *= 2;\n            // 1/4 of text size (spec) x 2\n            const halfTextSize = 0.5 * textSize;\n            textHalo.setWidth(\n              textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize,\n            );\n            text.setStroke(textHalo);\n          } else {\n            text.setStroke(undefined);\n          }\n          const textPadding = getValue(\n            layer,\n            'layout',\n            'text-padding',\n            zoom,\n            f,\n            functionCache,\n            featureState,\n          );\n          const padding = text.getPadding();\n          if (textPadding !== padding[0]) {\n            padding[0] = textPadding;\n            padding[1] = textPadding;\n            padding[2] = textPadding;\n            padding[3] = textPadding;\n          }\n          style.setZIndex(index);\n        }\n      }\n    }\n\n    if (stylesLength > -1) {\n      styles.length = stylesLength + 1;\n      if (recordLayer) {\n        if ('set' in feature) {\n          // ol/Feature\n          feature.set('mapbox-layer', featureBelongsToLayer);\n        } else {\n          // ol/render/Feature\n          feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n        }\n      }\n      return styles;\n    }\n    return undefined;\n  };\n\n  olLayer.setStyle(styleFunction);\n  olLayer.set('mapbox-source', mapboxSource);\n  olLayer.set('mapbox-layers', mapboxLayers);\n  olLayer.set('mapbox-featurestate', olLayer.get('mapbox-featurestate') || {});\n  return styleFunction;\n}\n\n/**\n * Get the the style for a specific Mapbox layer only. This can be useful for creating a legend.\n * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature OpenLayers feature.\n * @param {number} resolution View resolution.\n * @param {import(\"ol/layer\").Vector|import(\"ol/layer\").VectorTile} olLayer OpenLayers layer.\n * @param {string} layerId Id of the Mapbox layer to get the style for\n * @return {Array<import(\"ol/style\").Style>} Styles for the provided Mapbox layer.\n */\nexport function getStyleForLayer(feature, resolution, olLayer, layerId) {\n  const evaluateStyle = olLayer.getStyleFunction();\n  if (evaluateStyle.length === 3) {\n    // @ts-ignore\n    return evaluateStyle(feature, resolution, layerId);\n  }\n  return undefined;\n}\n\nexport {\n  colorWithOpacity as _colorWithOpacity,\n  evaluateFilter as _evaluateFilter,\n  fromTemplate as _fromTemplate,\n  getValue as _getValue,\n};\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.image_.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth)\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight)\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    const extent = frameState.extent;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        2,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n            ? new LineString(flatCoordinates, 'XY')\n            : geometryType === 'MultiPoint'\n            ? new MultiPoint(flatCoordinates, 'XY')\n            : geometryType === 'MultiLineString'\n            ? new MultiLineString(flatCoordinates, 'XY', ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../render/Feature.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../render/Feature.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageState from './ImageState.js';\nimport ImageWrapper from './Image.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageWrapper {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/resolution\n */\n\n/**\n * @typedef {number|Array<number>} ResolutionLike\n */\n\n/**\n * @param {ResolutionLike} resolution Resolution.\n * @return {number} Resolution.\n */\nexport function fromResolutionLike(resolution) {\n  if (Array.isArray(resolution)) {\n    return Math.min(...resolution);\n  }\n  return resolution;\n}\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../Image.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageWrapper {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        fromResolutionLike(this.sourceImage_.getResolution()),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_,\n        true\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {DECIMALS} from './common.js';\nimport {ceil} from '../math.js';\nimport {\n  containsExtent,\n  equals,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../Image.js\").Loader} [loader] Loader. Can either be a custom loader, or one of the\n * loaders created with a `createLoader()` function ({@link module:ol/source/wms.createLoader wms},\n * {@link module:ol/source/arcgisRest.createLoader arcgisRest}, {@link module:ol/source/mapguide.createLoader mapguide},\n * {@link module:ol/source/static.createLoader static}).\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Base class for sources providing a single image.\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").Loader}\n     */\n    this.loader = options.loader || null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.wantedExtent_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.wantedResolution_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.static_ = options.loader ? options.loader.length === 0 : false;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.wantedProjection_ = null;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate()\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.loader) {\n      const requestExtent = getRequestExtent(extent, resolution, pixelRatio, 1);\n      const requestResolution = this.findNearestResolution(resolution);\n      if (\n        this.image &&\n        (this.static_ ||\n          (this.wantedProjection_ === projection &&\n            ((this.wantedExtent_ &&\n              containsExtent(this.wantedExtent_, requestExtent)) ||\n              containsExtent(this.image.getExtent(), requestExtent)) &&\n            ((this.wantedResolution_ &&\n              fromResolutionLike(this.wantedResolution_) ===\n                requestResolution) ||\n              fromResolutionLike(this.image.getResolution()) ===\n                requestResolution)))\n      ) {\n        return this.image;\n      }\n      this.wantedProjection_ = projection;\n      this.wantedExtent_ = requestExtent;\n      this.wantedResolution_ = requestResolution;\n      this.image = new ImageWrapper(\n        requestExtent,\n        requestResolution,\n        pixelRatio,\n        this.loader\n      );\n      this.image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this)\n      );\n    }\n    return this.image;\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n/**\n * Adjusts the extent so it aligns with pixel boundaries.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Reolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} ratio Ratio between request size and view size.\n * @return {import(\"../extent.js\").Extent} Request extent.\n */\nexport function getRequestExtent(extent, resolution, pixelRatio, ratio) {\n  const imageResolution = resolution / pixelRatio;\n  const center = getCenter(extent);\n  const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n  const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n  const marginWidth = ceil(((ratio - 1) * viewWidth) / 2, DECIMALS);\n  const requestWidth = viewWidth + 2 * marginWidth;\n  const marginHeight = ceil(((ratio - 1) * viewHeight) / 2, DECIMALS);\n  const requestHeight = viewHeight + 2 * marginHeight;\n  return getForViewAndSize(center, imageResolution, 0, [\n    requestWidth,\n    requestHeight,\n  ]);\n}\n\nexport default ImageSource;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nexport const DECIMALS = 4;\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already'\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.'\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageLayer from '../layer/Image.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileLayer from '../layer/Tile.js';\nimport TileQueue from '../TileQueue.js';\nimport TileSource from './Tile.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {create as createTransform} from '../transform.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport {getUid} from '../util.js';\n\nlet hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet context;\n\n/**\n * @param {Uint8ClampedArray} data Image data.\n * @param {number} width Number of columns.\n * @param {number} height Number of rows.\n * @return {ImageData} Image data.\n */\nexport function newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  }\n\n  if (!context) {\n    context = document.createElement('canvas').getContext('2d');\n  }\n  const imageData = context.createImageData(width, height);\n  imageData.data.set(data);\n  return imageData;\n}\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  let workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    }\n    return {data: data, width: width, height: height};\n  }\n\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'}))\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    this._imageOps = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this._imageOps) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this._onWorkerMessage.bind(this, 0)\n      );\n    }\n    this._workers = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this._queue = [];\n\n    this._maxQueueLength = config.queue || Infinity;\n    this._running = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this._dataLookup = {};\n\n    /**\n     * @type {Job}\n     * @private\n     */\n    this._job = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this._enqueue({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this._dispatch();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  _enqueue(job) {\n    this._queue.push(job);\n    while (this._queue.length > this._maxQueueLength) {\n      this._queue.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  _dispatch() {\n    if (this._running || this._queue.length === 0) {\n      return;\n    }\n\n    const job = this._queue.shift();\n    this._job = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        buffers\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this._workers[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        slices\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  _onWorkerMessage(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this._dataLookup[index] = event.data;\n    --this._running;\n    if (this._running === 0) {\n      this._resolveJob();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  _resolveJob() {\n    const job = this._job;\n    const threads = this._workers.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n      meta = this._dataLookup[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this._dataLookup[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this._dataLookup[i]['meta'];\n      }\n    }\n    this._job = null;\n    this._dataLookup = {};\n    job.callback(\n      null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta\n    );\n    this._dispatch();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   */\n  disposeInternal() {\n    for (let i = 0; i < this._workers.length; ++i) {\n      this._workers[i].terminate();\n    }\n    this._workers.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /** @type {boolean} */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.processSources_.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutterTree: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      const attributions = [];\n      for (\n        let index = 0, iMax = options.sources.length;\n        index < iMax;\n        ++index\n      ) {\n        const sourceOrLayer = options.sources[index];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const attributionGetter = source.getAttributions();\n        if (typeof attributionGetter === 'function') {\n          const sourceAttribution = attributionGetter(frameState);\n          attributions.push.apply(attributions, sourceAttribution);\n        }\n      }\n      return attributions.length !== 0 ? attributions : null;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    this.tileQueue_.loadMoreTiles(16, 16);\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      frameState.renderTargets = {};\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data)\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState)\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    } else {\n      this.changed();\n    }\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data)\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      throw new Error('Either `url` or `tileJSON` options must be provided');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {fromKey, getCacheKeyForTileKey, getKeyZXY} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache = new TileCache(this.tileCache.highWaterMark);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.tileCache;\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const z = fromKey(tileCache.peekFirstKey())[0];\n    const tileGrid = this.tileGrid;\n    tileCache.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTileCache.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      const tile = tileCache.peek(cacheKey);\n      if (tile) {\n        const sourceTiles = tile.sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection\n        );\n        const sourceTile = this.sourceTileCache.containsKey(tileUrl)\n          ? this.sourceTileCache.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0]\n          );\n          this.sourceTileCache.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR\n          )\n            ? TileState.ERROR\n            : TileState.LOADED\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const coordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    let tile;\n    if (this.tileCache.containsKey(coordKey)) {\n      tile = this.tileCache.get(coordKey);\n      if (tile.key === key) {\n        return tile;\n      }\n    }\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        empty =\n          empty &&\n          !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      });\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection)\n    );\n\n    newTile.key = key;\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      this.tileCache.replace(coordKey, newTile);\n    } else {\n      this.tileCache.set(coordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    super.updateCacheSize(tileCount * 2, projection);\n    this.sourceTileCache.highWaterMark =\n      this.getTileCacheForProjection(projection).highWaterMark;\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile)\n      );\n    }\n  );\n}\n","/**\n * Generates a shaded relief image given elevation data.  Uses a 3x3\n * neighborhood for determining slope and aspect.\n * @param {Array<ImageData>} inputs Array of input images.\n * @param {Object} data Data added in the \"beforeoperations\" event.\n * @return {ImageData} Output image.\n */\nexport function hillshade(inputs, data) {\n  const elevationImage = inputs[0];\n  const width = elevationImage.width;\n  const height = elevationImage.height;\n  const elevationData = elevationImage.data;\n  const shadeData = new Uint8ClampedArray(elevationData.length);\n  const dp = data.resolution * 2;\n  const maxX = width - 1;\n  const maxY = height - 1;\n  const pixel = [0, 0, 0, 0];\n  const twoPi = 2 * Math.PI;\n  const halfPi = Math.PI / 2;\n  const sunEl = (Math.PI * data.sunEl) / 180;\n  const sunAz = (Math.PI * data.sunAz) / 180;\n  const cosSunEl = Math.cos(sunEl);\n  const sinSunEl = Math.sin(sunEl);\n  const highlightColor = data.highlightColor;\n  const shadowColor = data.shadowColor;\n  const accentColor = data.accentColor;\n  const encoding = data.encoding;\n\n  let pixelX,\n    pixelY,\n    x0,\n    x1,\n    y0,\n    y1,\n    offset,\n    z0,\n    z1,\n    dzdx,\n    dzdy,\n    slope,\n    aspect,\n    accent,\n    scaled,\n    shade,\n    scaledAccentColor,\n    compositeShadeColor,\n    clamp,\n    slopeScaleBase,\n    scaledSlope,\n    cosIncidence;\n\n  function calculateElevation(pixel, encoding = 'mapbox') {\n    // The method used to extract elevations from the DEM.\n    //\n    // The supported methods are the Mapbox format\n    // (red * 256 * 256 + green * 256 + blue) * 0.1 - 10000\n    // and the Terrarium format\n    // (red * 256 + green + blue / 256) - 32768\n    //\n    if (encoding === 'mapbox') {\n      return (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1 - 10000;\n    }\n    if (encoding === 'terrarium') {\n      return pixel[0] * 256 + pixel[1] + pixel[2] / 256 - 32768;\n    }\n  }\n  for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n    y0 = pixelY === 0 ? 0 : pixelY - 1;\n    y1 = pixelY === maxY ? maxY : pixelY + 1;\n    for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n      x0 = pixelX === 0 ? 0 : pixelX - 1;\n      x1 = pixelX === maxX ? maxX : pixelX + 1;\n\n      // determine elevation for (x0, pixelY)\n      offset = (pixelY * width + x0) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (x1, pixelY)\n      offset = (pixelY * width + x1) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdx = (z1 - z0) / dp;\n\n      // determine elevation for (pixelX, y0)\n      offset = (y0 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (pixelX, y1)\n      offset = (y1 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdy = (z1 - z0) / dp;\n\n      aspect = Math.atan2(dzdy, -dzdx);\n      if (aspect < 0) {\n        aspect = halfPi - aspect;\n      } else if (aspect > halfPi) {\n        aspect = twoPi - aspect + halfPi;\n      } else {\n        aspect = halfPi - aspect;\n      }\n\n      // Bootstrap slope and corresponding incident values\n      slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n      cosIncidence =\n        sinSunEl * Math.cos(slope) +\n        cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n      accent = Math.cos(slope);\n      // 255 for Hex colors\n      scaled = 255 * cosIncidence;\n\n      /*\n       * The following is heavily inspired\n       * by [Maplibre's equivalent WebGL shader](https://github.com/maplibre/maplibre-gl-js/blob/main/src/shaders/hillshade.fragment.glsl)\n       */\n\n      // Forces given value to stay between two given extremes\n      clamp = Math.min(Math.max(2 * data.sunEl, 0), 1);\n\n      // Intensity basis for hillshade opacity\n      slopeScaleBase = 1.875 - data.opacity * 1.75;\n      // Intensity interpolation so that higher intensity values create more opaque hillshading\n      scaledSlope =\n        data.opacity !== 0.5\n          ? halfPi *\n            ((Math.pow(slopeScaleBase, slope) - 1) /\n              (Math.pow(slopeScaleBase, halfPi) - 1))\n          : slope;\n\n      // Accent hillshade color with given accentColor to emphasize rougher terrain\n      scaledAccentColor = {\n        r: (1 - accent) * accentColor.r * clamp * 255,\n        g: (1 - accent) * accentColor.g * clamp * 255,\n        b: (1 - accent) * accentColor.b * clamp * 255,\n        a: (1 - accent) * accentColor.a * clamp * 255,\n      };\n\n      // Allows highlight vs shadow discrimination\n      shade = Math.abs((((aspect + sunAz) / Math.PI + 0.5) % 2) - 1);\n      // Creates a composite color mix between highlight & shadow colors to emphasize slopes\n      compositeShadeColor = {\n        r: (highlightColor.r * (1 - shade) + shadowColor.r * shade) * scaled,\n        g: (highlightColor.g * (1 - shade) + shadowColor.g * shade) * scaled,\n        b: (highlightColor.b * (1 - shade) + shadowColor.b * shade) * scaled,\n        a: (highlightColor.a * (1 - shade) + shadowColor.a * shade) * scaled,\n      };\n\n      // Fill in result color value\n      offset = (pixelY * width + pixelX) * 4;\n      shadeData[offset] =\n        scaledAccentColor.r * (1 - shade) + compositeShadeColor.r;\n      shadeData[offset + 1] =\n        scaledAccentColor.g * (1 - shade) + compositeShadeColor.g;\n      shadeData[offset + 2] =\n        scaledAccentColor.b * (1 - shade) + compositeShadeColor.b;\n      // Key opacity on the scaledSlope to improve legibility by increasing higher elevation rates' contrast\n      shadeData[offset + 3] =\n        elevationData[offset + 3] *\n        data.opacity *\n        clamp *\n        Math.sin(scaledSlope);\n    }\n  }\n\n  return new ImageData(shadeData, width, height);\n}\n","/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport Layer from 'ol/layer/Layer.js';\nimport LayerGroup from 'ol/layer/Group.js';\nimport MVT from 'ol/format/MVT.js';\nimport Map from 'ol/Map.js';\nimport Raster from 'ol/source/Raster.js';\nimport Source from 'ol/source/Source.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource, {defaultLoadFunction} from 'ol/source/VectorTile.js';\nimport View from 'ol/View.js';\nimport derefLayers from '@mapbox/mapbox-gl-style-spec/deref.js';\nimport {METERS_PER_UNIT} from 'ol/proj/Units.js';\nimport {\n  _colorWithOpacity,\n  stylefunction as applyStyleFunction,\n  stylefunction as applyStylefunction,\n  getValue,\n  styleFunctionArgs,\n} from './stylefunction.js';\nimport {bbox as bboxStrategy} from 'ol/loadingstrategy.js';\nimport {createXYZ} from 'ol/tilegrid.js';\nimport {\n  defaultResolutions,\n  defaultTileGrid,\n  fetchResource,\n  getFilterCache,\n  getFunctionCache,\n  getGlStyle,\n  getStyleFunctionKey,\n  getTileJson,\n  getZoomForResolution,\n} from './util.js';\nimport {\n  equivalent,\n  fromLonLat,\n  get as getProjection,\n  getUserProjection,\n} from 'ol/proj.js';\nimport {getFonts} from './text.js';\nimport {getTopLeft} from 'ol/extent.js';\nimport {hillshade} from './shaders.js';\nimport {\n  normalizeSourceUrl,\n  normalizeSpriteUrl,\n  normalizeStyleUrl,\n} from './mapbox.js';\n\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, import(\"./util.js\").ResourceType): (Request|string|Promise<Request|string>|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request` or a url `string`, or a promise tehereof.\n * Without a return value the original request will not be modified.\n * @property {string} [projection='EPSG:3857'] Only useful when working with non-standard projections.\n * Code of a projection registered with OpenLayers. All sources of the style must be provided in this\n * projection. The projection must also have a valid extent defined, which will be used to determine the\n * origin and resolutions of the tile grid for all tiled sources of the style. When provided, the bbox\n * placeholder in tile and geojson urls changes: the default is `{bbox-epsg-3857}`, when projection is e.g.\n * set to `EPSG:4326`, the bbox placeholder will be `{bbox-epsg-4326}`.\n * @property {Array<number>} [resolutions] Only useful when working with non-standard projections.\n * Resolutions for mapping resolution to the `zoom` used in the Mapbox style.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image for an icon name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function be used for icons not in the sprite or to override sprite icons.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n */\n\n/**\n * @typedef {Object} ApplyStyleOptions\n * @property {string} [source=''] Source. Default is `''`, which causes the first source in the\n * style to be used.\n * @property {Array<string>} [layers] Layers. If no source is provided, the layers with the\n * provided ids will be used from the style's `layers` array. All layers need to use the same source.\n * @property {boolean} [updateSource=true] Update or create vector (tile) layer source with parameters\n * specified for the source in the mapbox style definition.\n */\n\n/**\n * @param {import(\"ol/proj/Projection.js\").default} projection Projection.\n * @param {number} [tileSize=512] Tile size.\n * @return {Array<number>} Resolutions.\n */\nfunction getTileResolutions(projection, tileSize = 512) {\n  return projection.getExtent()\n    ? createXYZ({\n        extent: projection.getExtent(),\n        tileSize: tileSize,\n        maxZoom: 22,\n      }).getResolutions()\n    : defaultResolutions;\n}\n\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n  if (!options.accessToken) {\n    options = Object.assign({}, options);\n    const searchParams = new URL(styleUrl).searchParams;\n    // The last search parameter is the access token\n    searchParams.forEach((value, key) => {\n      options.accessToken = value;\n      options.accessTokenParam = key;\n    });\n  }\n  return options;\n}\n\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle` (unless `updateSource` is\n * set to `false`).\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url` and\n * `tileUrlFunction`. When the source projection is the default (`EPSG:3857`), the `tileGrid` will\n * also be overridden. If you'd rather not have ol-mapbox-style modify the source, configure `applyStyle()`\n * with the `updateSource: false` option.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>|Options&ApplyStyleOptions} [sourceOrLayersOrOptions] Options or\n * `source` key or an array of layer `id`s from the Mapbox Style object. When a `source` key is\n * provided, all layers for the specified source will be included in the style function. When layer\n * `id`s are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the first source specified in the glStyle will be rendered.\n * @param {Options&ApplyStyleOptions|string} [optionsOrPath] **Deprecated**. Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} [resolutions] **Deprecated**. Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections, can also be supplied with\n * options.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nexport function applyStyle(\n  layer,\n  glStyle,\n  sourceOrLayersOrOptions = '',\n  optionsOrPath = {},\n  resolutions = undefined,\n) {\n  let styleUrl, sourceId;\n  /** @type {Options&ApplyStyleOptions} */\n  let options;\n  let sourceOrLayers;\n  let updateSource = true;\n  if (\n    typeof sourceOrLayersOrOptions !== 'string' &&\n    !Array.isArray(sourceOrLayersOrOptions)\n  ) {\n    options = sourceOrLayersOrOptions;\n    sourceOrLayers = options.source || options.layers;\n    optionsOrPath = options;\n  } else {\n    sourceOrLayers = sourceOrLayersOrOptions;\n  }\n  if (typeof optionsOrPath === 'string') {\n    styleUrl = optionsOrPath;\n    options = {};\n  } else {\n    styleUrl = optionsOrPath.styleUrl;\n    options = optionsOrPath;\n  }\n  if (options.updateSource === false) {\n    updateSource = false;\n  }\n  if (!resolutions) {\n    resolutions = options.resolutions;\n  }\n  if (\n    !styleUrl &&\n    typeof glStyle === 'string' &&\n    !glStyle.trim().startsWith('{')\n  ) {\n    styleUrl = glStyle;\n  }\n  if (styleUrl) {\n    styleUrl = styleUrl.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(styleUrl, options.accessToken);\n    options = completeOptions(styleUrl, options);\n  }\n\n  return new Promise(function (resolve, reject) {\n    // TODO: figure out where best place to check source type is\n    // Note that the source arg is an array of gl layer ids and each must be\n    // dereferenced to get source type to validate\n    getGlStyle(glStyle, options)\n      .then(function (glStyle) {\n        if (glStyle.version != 8) {\n          return reject(new Error('glStyle version 8 required.'));\n        }\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          return reject(\n            new Error('Can only apply to VectorLayer or VectorTileLayer'),\n          );\n        }\n\n        const type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n        if (!sourceOrLayers) {\n          sourceId = Object.keys(glStyle.sources).find(function (key) {\n            return glStyle.sources[key].type === type;\n          });\n          sourceOrLayers = sourceId;\n        } else if (Array.isArray(sourceOrLayers)) {\n          sourceId = glStyle.layers.find(function (layer) {\n            return layer.id === sourceOrLayers[0];\n          }).source;\n        } else {\n          sourceId = sourceOrLayers;\n        }\n        if (!sourceId) {\n          return reject(new Error(`No ${type} source found in the glStyle.`));\n        }\n\n        function assignSource() {\n          if (!updateSource) {\n            return Promise.resolve();\n          }\n          if (layer instanceof VectorTileLayer) {\n            return setupVectorSource(\n              glStyle.sources[sourceId],\n              styleUrl,\n              options,\n            ).then(function (source) {\n              const targetSource = layer.getSource();\n              if (!targetSource) {\n                layer.setSource(source);\n              } else if (source !== targetSource) {\n                targetSource.setTileUrlFunction(source.getTileUrlFunction());\n                if (\n                  typeof targetSource.setUrls === 'function' &&\n                  typeof source.getUrls === 'function'\n                ) {\n                  // to get correct keys for tile cache and queue\n                  targetSource.setUrls(source.getUrls());\n                }\n                //@ts-ignore\n                if (!targetSource.format_) {\n                  //@ts-ignore\n                  targetSource.format_ = source.format_;\n                }\n                if (!targetSource.getAttributions()) {\n                  targetSource.setAttributions(source.getAttributions());\n                }\n                if (\n                  targetSource.getTileLoadFunction() === defaultLoadFunction\n                ) {\n                  targetSource.setTileLoadFunction(\n                    source.getTileLoadFunction(),\n                  );\n                }\n                if (\n                  equivalent(\n                    targetSource.getProjection(),\n                    source.getProjection(),\n                  )\n                ) {\n                  targetSource.tileGrid = source.getTileGrid();\n                }\n              }\n              if (\n                !isFinite(layer.getMaxResolution()) &&\n                !isFinite(layer.getMinZoom())\n              ) {\n                const tileGrid = layer.getSource().getTileGrid();\n                layer.setMaxResolution(\n                  tileGrid.getResolution(tileGrid.getMinZoom()),\n                );\n              }\n            });\n          }\n          const glSource = glStyle.sources[sourceId];\n          let source = layer.getSource();\n          if (!source || source.get('mapbox-source') !== glSource) {\n            source = setupGeoJSONSource(glSource, styleUrl, options);\n          }\n          const targetSource = /** @type {VectorSource} */ (layer.getSource());\n          if (!targetSource) {\n            layer.setSource(source);\n          } else if (source !== targetSource) {\n            if (!targetSource.getAttributions()) {\n              targetSource.setAttributions(source.getAttributions());\n            }\n            //@ts-ignore\n            if (!targetSource.format_) {\n              //@ts-ignore\n              targetSource.format_ = source.getFormat();\n            }\n            //@ts-ignore\n            targetSource.url_ = source.getUrl();\n          }\n          return Promise.resolve();\n        }\n\n        let spriteScale, spriteData, spriteImageUrl, style;\n        function onChange() {\n          if (!style && (!glStyle.sprite || spriteData)) {\n            if (options.projection && !resolutions) {\n              const projection = getProjection(options.projection);\n              const units = projection.getUnits();\n              if (units !== 'm') {\n                resolutions = defaultResolutions.map(\n                  (resolution) => resolution / METERS_PER_UNIT[units],\n                );\n              }\n            }\n            style = applyStyleFunction(\n              layer,\n              glStyle,\n              sourceOrLayers,\n              resolutions,\n              spriteData,\n              spriteImageUrl,\n              getFonts,\n              options.getImage,\n            );\n            if (!layer.getStyle()) {\n              reject(new Error(`Nothing to show for source [${sourceId}]`));\n            } else {\n              assignSource().then(resolve).catch(reject);\n            }\n          } else if (style) {\n            layer.setStyle(style);\n            assignSource().then(resolve).catch(reject);\n          } else {\n            reject(new Error('Something went wrong trying to apply style.'));\n          }\n        }\n\n        if (glStyle.sprite) {\n          const sprite = new URL(\n            normalizeSpriteUrl(\n              glStyle.sprite,\n              options.accessToken,\n              styleUrl || location.href,\n            ),\n          );\n          spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n          const sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n          let spriteUrl =\n            sprite.origin +\n            sprite.pathname +\n            sizeFactor +\n            '.json' +\n            sprite.search;\n\n          new Promise(function (resolve, reject) {\n            fetchResource('Sprite', spriteUrl, options)\n              .then(resolve)\n              .catch(function (error) {\n                spriteUrl =\n                  sprite.origin + sprite.pathname + '.json' + sprite.search;\n                fetchResource('Sprite', spriteUrl, options)\n                  .then(resolve)\n                  .catch(reject);\n              });\n          })\n            .then(function (spritesJson) {\n              if (spritesJson === undefined) {\n                reject(new Error('No sprites found.'));\n              }\n              spriteData = spritesJson;\n              spriteImageUrl =\n                sprite.origin +\n                sprite.pathname +\n                sizeFactor +\n                '.png' +\n                sprite.search;\n              if (options.transformRequest) {\n                const transformed =\n                  options.transformRequest(spriteImageUrl, 'SpriteImage') ||\n                  spriteImageUrl;\n                if (\n                  transformed instanceof Request ||\n                  transformed instanceof Promise\n                ) {\n                  spriteImageUrl = transformed;\n                }\n              }\n              onChange();\n            })\n            .catch(function (err) {\n              reject(\n                new Error(\n                  `Sprites cannot be loaded: ${spriteUrl}: ${err.message}`,\n                ),\n              );\n            });\n        } else {\n          onChange();\n        }\n      })\n      .catch(reject);\n  });\n}\n\nconst emptyObj = {};\n\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n  glStyle.layers.some(function (layer) {\n    if (layer.type === 'background') {\n      if (mapOrLayer instanceof Layer) {\n        mapOrLayer.setBackground(function (resolution) {\n          return getBackgroundColor(layer, resolution, options, {});\n        });\n        return true;\n      }\n      if (mapOrLayer instanceof Map || mapOrLayer instanceof LayerGroup) {\n        mapOrLayer\n          .getLayers()\n          .insertAt(0, setupBackgroundLayer(layer, options, {}));\n        return true;\n      }\n    }\n  });\n}\n\n/**\n * Applies properties of the Mapbox Style's first `background` layer to the\n * provided map or layer (group).\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|import(\"ol/layer/Base.js\").default} mapOrLayer OpenLayers Map or layer (group).\n * @param {Object|string} glStyle Mapbox Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nexport function applyBackground(mapOrLayer, glStyle, options = {}) {\n  return getGlStyle(glStyle, options).then(function (glStyle) {\n    setFirstBackground(mapOrLayer, glStyle, options);\n  });\n}\n\nfunction getSourceIdByRef(layers, ref) {\n  let sourceId;\n  layers.some(function (layer) {\n    if (layer.id == ref) {\n      sourceId = layer.source;\n      return true;\n    }\n  });\n  return sourceId;\n}\n\nfunction extentFromTileJSON(tileJSON, projection) {\n  const bounds = tileJSON.bounds;\n  if (bounds) {\n    const ll = fromLonLat([bounds[0], bounds[1]], projection);\n    const tr = fromLonLat([bounds[2], bounds[3]], projection);\n    return [ll[0], ll[1], tr[0], tr[1]];\n  }\n  return getProjection(projection).getExtent();\n}\n\nfunction sourceOptionsFromTileJSON(glSource, tileJSON, options) {\n  const tileJSONSource = new TileJSON({\n    tileJSON: tileJSON,\n    tileSize: glSource.tileSize || tileJSON.tileSize || 512,\n  });\n  const tileJSONDoc = tileJSONSource.getTileJSON();\n  const tileGrid = tileJSONSource.getTileGrid();\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const extent = extentFromTileJSON(tileJSONDoc, projection);\n  const projectionExtent = projection.getExtent();\n  const minZoom = tileJSONDoc.minzoom || 0;\n  const maxZoom = tileJSONDoc.maxzoom || 22;\n  /** @type {import(\"ol/source/VectorTile.js\").Options} */\n  const sourceOptions = {\n    attributions: tileJSONSource.getAttributions(),\n    projection: projection,\n    tileGrid: new TileGrid({\n      origin: projectionExtent\n        ? getTopLeft(projectionExtent)\n        : tileGrid.getOrigin(0),\n      extent: extent || tileGrid.getExtent(),\n      minZoom: minZoom,\n      resolutions: getTileResolutions(projection, tileJSON.tileSize).slice(\n        0,\n        maxZoom + 1,\n      ),\n      tileSize: tileGrid.getTileSize(0),\n    }),\n  };\n  if (Array.isArray(tileJSONDoc.tiles)) {\n    sourceOptions.urls = tileJSONDoc.tiles;\n  } else {\n    sourceOptions.url = tileJSONDoc.tiles;\n  }\n  return sourceOptions;\n}\n\nfunction getBackgroundColor(glLayer, resolution, options, functionCache) {\n  const background = {\n    id: glLayer.id,\n    type: glLayer.type,\n  };\n  const layout = glLayer.layout || {};\n  const paint = glLayer.paint || {};\n  background['paint'] = paint;\n  const zoom = getZoomForResolution(\n    resolution,\n    options.resolutions || defaultResolutions,\n  );\n  let opacity;\n  const bg = getValue(\n    background,\n    'paint',\n    'background-color',\n    zoom,\n    emptyObj,\n    functionCache,\n  );\n  if (paint['background-opacity'] !== undefined) {\n    opacity = getValue(\n      background,\n      'paint',\n      'background-opacity',\n      zoom,\n      emptyObj,\n      functionCache,\n    );\n  }\n  return layout.visibility == 'none'\n    ? undefined\n    : _colorWithOpacity(bg, opacity);\n}\n\n/**\n * @param {Object} glLayer Mapbox Style layer object.\n * @param {Options} options Options.\n * @param {Object} functionCache Cache for functions.\n * @return {Layer} OpenLayers layer.\n */\nfunction setupBackgroundLayer(glLayer, options, functionCache) {\n  const div = document.createElement('div');\n  div.className = 'ol-mapbox-style-background';\n  div.style.position = 'absolute';\n  div.style.width = '100%';\n  div.style.height = '100%';\n  return new Layer({\n    source: new Source({}),\n    render(frameState) {\n      const color = getBackgroundColor(\n        glLayer,\n        frameState.viewState.resolution,\n        options,\n        functionCache,\n      );\n      div.style.backgroundColor = color;\n      return div;\n    },\n  });\n}\n\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nexport function setupVectorSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options)\n      .then(function ({tileJson, tileLoadFunction}) {\n        const sourceOptions = sourceOptionsFromTileJSON(\n          glSource,\n          tileJson,\n          options,\n        );\n        sourceOptions.tileLoadFunction = tileLoadFunction;\n        sourceOptions.format = new MVT();\n        resolve(new VectorTileSource(sourceOptions));\n      })\n      .catch(reject);\n  });\n}\n\nfunction setupVectorLayer(glSource, styleUrl, options) {\n  const layer = new VectorTileLayer({\n    declutter: true,\n    visible: false,\n  });\n  setupVectorSource(glSource, styleUrl, options)\n    .then(function (source) {\n      source.set('mapbox-source', glSource);\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\nfunction getBboxTemplate(projection) {\n  const projCode = projection ? projection.getCode() : 'EPSG:3857';\n  return `{bbox-${projCode.toLowerCase().replace(/[^a-z0-9]/g, '-')}}`;\n}\n\nfunction setupRasterSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options)\n      .then(function ({tileJson, tileLoadFunction}) {\n        const source = new TileJSON({\n          interpolate:\n            options.interpolate === undefined ? true : options.interpolate,\n          transition: 0,\n          crossOrigin: 'anonymous',\n          tileJSON: tileJson,\n        });\n        source.tileGrid = sourceOptionsFromTileJSON(\n          glSource,\n          tileJson,\n          options,\n        ).tileGrid;\n        if (options.projection) {\n          //@ts-ignore\n          source.projection = getProjection(options.projection);\n        }\n        const getTileUrl = source.getTileUrlFunction();\n        if (tileLoadFunction) {\n          source.setTileLoadFunction(tileLoadFunction);\n        }\n        source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n          const bboxTemplate = getBboxTemplate(projection);\n          let src = getTileUrl(tileCoord, pixelRatio, projection);\n          if (src.indexOf(bboxTemplate) != -1) {\n            const bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n            src = src.replace(bboxTemplate, bbox.toString());\n          }\n          return src;\n        });\n        source.set('mapbox-source', glSource);\n        resolve(source);\n      })\n      .catch(function (error) {\n        reject(error);\n      });\n  });\n}\n\nfunction setupRasterLayer(glSource, styleUrl, options) {\n  const layer = new TileLayer();\n  setupRasterSource(glSource, styleUrl, options)\n    .then(function (source) {\n      layer.setSource(source);\n    })\n    .catch(function () {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\n/**\n *\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string} styleUrl Style url\n * @param {Options} options ol-mapbox-style options.\n * @return {ImageLayer<Raster>} The raster layer\n */\nfunction setupHillshadeLayer(glSource, styleUrl, options) {\n  const tileLayer = setupRasterLayer(glSource, styleUrl, options);\n  /** @type {ImageLayer<Raster>} */\n  const layer = new ImageLayer({\n    source: new Raster({\n      operationType: 'image',\n      operation: hillshade,\n      sources: [tileLayer],\n    }),\n  });\n  return layer;\n}\n\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n  const geoJsonFormat = options.projection\n    ? new GeoJSON({dataProjection: options.projection})\n    : new GeoJSON();\n  const data = glSource.data;\n  const sourceOptions = {};\n  if (typeof data == 'string') {\n    const geoJsonUrl = normalizeSourceUrl(\n      data,\n      options.accessToken,\n      options.accessTokenParam || 'access_token',\n      styleUrl || location.href,\n    );\n    if (/\\{bbox-[0-9a-z-]+\\}/.test(geoJsonUrl)) {\n      const extentUrl = (extent, resolution, projection) => {\n        const bboxTemplate = getBboxTemplate(projection);\n        return geoJsonUrl.replace(bboxTemplate, `${extent.join(',')}`);\n      };\n      const source = new VectorSource({\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n        loader: (extent, resolution, projection, success, failure) => {\n          const url =\n            typeof extentUrl === 'function'\n              ? extentUrl(extent, resolution, projection)\n              : extentUrl;\n          fetchResource('GeoJSON', url, options)\n            .then((json) => {\n              const features = /** @type {*} */ (\n                source\n                  .getFormat()\n                  .readFeatures(json, {featureProjection: projection})\n              );\n              source.addFeatures(features);\n              success(features);\n            })\n            .catch((response) => {\n              source.removeLoadedExtent(extent);\n              failure();\n            });\n        },\n        strategy: bboxStrategy,\n      });\n      source.set('mapbox-source', glSource);\n      return source;\n    }\n    const source = new VectorSource({\n      attributions: glSource.attribution,\n      format: geoJsonFormat,\n      url: geoJsonUrl,\n      loader: (extent, resolution, projection, success, failure) => {\n        fetchResource('GeoJSON', geoJsonUrl, options)\n          .then((json) => {\n            const features = /** @type {*} */ (\n              source\n                .getFormat()\n                .readFeatures(json, {featureProjection: projection})\n            );\n            source.addFeatures(features);\n            success(features);\n          })\n          .catch((response) => {\n            source.removeLoadedExtent(extent);\n            failure();\n          });\n      },\n    });\n    return source;\n  }\n  sourceOptions.features = geoJsonFormat.readFeatures(data, {\n    featureProjection: getUserProjection() || 'EPSG:3857',\n  });\n\n  const source = new VectorSource(\n    Object.assign(\n      {\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n      },\n      sourceOptions,\n    ),\n  );\n  source.set('mapbox-source', glSource);\n  return /** @type {VectorSource} */ (source);\n}\n\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n  return new VectorLayer({\n    declutter: true,\n    source: setupGeoJSONSource(glSource, styleUrl, options),\n    visible: false,\n  });\n}\n\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n  let zoom = null;\n  return function (event) {\n    if (\n      glLayer.paint &&\n      'raster-opacity' in glLayer.paint &&\n      event.frameState.viewState.zoom !== zoom\n    ) {\n      zoom = event.frameState.viewState.zoom;\n      delete functionCache[glLayer.id];\n      updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n    }\n  };\n}\n\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n  const opacity = getValue(\n    glLayer,\n    'paint',\n    'raster-opacity',\n    zoom,\n    emptyObj,\n    functionCache,\n  );\n  layer.setOpacity(opacity);\n}\n\nfunction manageVisibility(layer, mapOrGroup) {\n  function onChange() {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    if (!glStyle) {\n      return;\n    }\n    const mapboxLayers = derefLayers(glStyle.layers);\n    const layerMapboxLayerids = layer.get('mapbox-layers');\n    const visible = mapboxLayers\n      .filter(function (mapboxLayer) {\n        return layerMapboxLayerids.includes(mapboxLayer.id);\n      })\n      .some(function (mapboxLayer) {\n        return (\n          !mapboxLayer.layout ||\n          !mapboxLayer.layout.visibility ||\n          mapboxLayer.layout.visibility === 'visible'\n        );\n      });\n    if (layer.get('visible') !== visible) {\n      layer.setVisible(visible);\n    }\n  }\n  layer.on('change', onChange);\n  onChange();\n}\n\nexport function setupLayer(glStyle, styleUrl, glLayer, options) {\n  const functionCache = getFunctionCache(glStyle);\n  const glLayers = glStyle.layers;\n  const type = glLayer.type;\n\n  const id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n  const glSource = glStyle.sources[id];\n  let layer;\n  if (type == 'background') {\n    layer = setupBackgroundLayer(glLayer, options, functionCache);\n  } else if (glSource.type == 'vector') {\n    layer = setupVectorLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster') {\n    layer = setupRasterLayer(glSource, styleUrl, options);\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true,\n    );\n    layer.on('prerender', prerenderRasterLayer(glLayer, layer, functionCache));\n  } else if (glSource.type == 'geojson') {\n    layer = setupGeoJSONLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster-dem' && glLayer.type == 'hillshade') {\n    const hillshadeLayer = setupHillshadeLayer(glSource, styleUrl, options);\n    layer = hillshadeLayer;\n    hillshadeLayer.getSource().on('beforeoperations', function (event) {\n      const data = event.data;\n      data.resolution = event.resolution;\n      const zoom = getZoomForResolution(\n        event.resolution,\n        options.resolutions || defaultResolutions,\n      );\n      data.encoding = glSource.encoding;\n      data.vert =\n        5 *\n        getValue(\n          glLayer,\n          'paint',\n          'hillshade-exaggeration',\n          zoom,\n          emptyObj,\n          functionCache,\n        );\n      data.sunAz = getValue(\n        glLayer,\n        'paint',\n        'hillshade-illumination-direction',\n        zoom,\n        emptyObj,\n        functionCache,\n      );\n      data.sunEl = 35;\n      data.opacity = 0.3;\n      data.highlightColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-highlight-color',\n        zoom,\n        emptyObj,\n        functionCache,\n      );\n      data.shadowColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-shadow-color',\n        zoom,\n        emptyObj,\n        functionCache,\n      );\n      data.accentColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-accent-color',\n        zoom,\n        emptyObj,\n        functionCache,\n      );\n    });\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true,\n    );\n  }\n  const glSourceId = id;\n  if (layer) {\n    layer.set('mapbox-source', glSourceId);\n  }\n  return layer;\n}\n\n/**\n * @param {*} glStyle Mapbox Style.\n * @param {Map|LayerGroup} mapOrGroup Map or layer group.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the style is loaded.\n */\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n  const promises = [];\n\n  let view = null;\n  if (mapOrGroup instanceof Map) {\n    view = mapOrGroup.getView();\n    if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n      const projection = options.projection\n        ? getProjection(options.projection)\n        : view.getProjection();\n      view = new View(\n        Object.assign(view.getProperties(), {\n          maxResolution:\n            defaultResolutions[0] / METERS_PER_UNIT[projection.getUnits()],\n          projection: options.projection || view.getProjection(),\n        }),\n      );\n      mapOrGroup.setView(view);\n    }\n\n    if ('center' in glStyle && !view.getCenter()) {\n      view.setCenter(fromLonLat(glStyle.center, view.getProjection()));\n    }\n    if ('zoom' in glStyle && view.getZoom() === undefined) {\n      view.setResolution(\n        defaultResolutions[0] /\n          METERS_PER_UNIT[view.getProjection().getUnits()] /\n          Math.pow(2, glStyle.zoom),\n      );\n    }\n    if (!view.getCenter() || view.getZoom() === undefined) {\n      view.fit(view.getProjection().getExtent(), {\n        nearest: true,\n        size: mapOrGroup.getSize(),\n      });\n    }\n  }\n  mapOrGroup.set('mapbox-style', glStyle);\n  mapOrGroup.set('mapbox-metadata', {styleUrl, options});\n\n  const glLayers = glStyle.layers;\n  let layerIds = [];\n\n  let layer, glSourceId, id;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    const type = glLayer.type;\n    if (type == 'heatmap') {\n      //FIXME Unsupported layer type\n      // eslint-disable-next-line no-console\n      console.debug(`layers[${i}].type \"${type}\" not supported`);\n      continue;\n    } else {\n      id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n      // this technique assumes gl layers will be in a particular order\n      if (!id || id != glSourceId) {\n        if (layerIds.length) {\n          promises.push(\n            finalizeLayer(\n              layer,\n              layerIds,\n              glStyle,\n              styleUrl,\n              mapOrGroup,\n              options,\n            ),\n          );\n          layerIds = [];\n        }\n\n        layer = setupLayer(glStyle, styleUrl, glLayer, options);\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          layerIds = [];\n        }\n        glSourceId = layer.get('mapbox-source');\n      }\n      layerIds.push(glLayer.id);\n    }\n  }\n  promises.push(\n    finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options),\n  );\n  return Promise.all(promises);\n}\n\n/**\n * Loads and applies a Mapbox Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroupOrElement Either an existing\n * OpenLayers Map instance, or a HTML element, or the id of a HTML element that will be\n * the target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox Style document). When passed\n * as style url, layers will be added to the map when the Mapbox Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nexport function apply(mapOrGroupOrElement, style, options = {}) {\n  let promise;\n  /** @type {Map|LayerGroup} */\n  let mapOrGroup;\n  if (\n    typeof mapOrGroupOrElement === 'string' ||\n    mapOrGroupOrElement instanceof HTMLElement\n  ) {\n    mapOrGroup = new Map({\n      target: mapOrGroupOrElement,\n    });\n  } else {\n    mapOrGroup = mapOrGroupOrElement;\n  }\n\n  if (typeof style === 'string') {\n    const styleUrl = style.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(style, options.accessToken);\n    options = completeOptions(styleUrl, options);\n\n    promise = new Promise(function (resolve, reject) {\n      getGlStyle(style, options)\n        .then(function (glStyle) {\n          processStyle(glStyle, mapOrGroup, styleUrl, options)\n            .then(function () {\n              resolve(mapOrGroup);\n            })\n            .catch(reject);\n        })\n        .catch(function (err) {\n          reject(new Error(`Could not load ${style}: ${err.message}`));\n        });\n    });\n  } else {\n    promise = new Promise(function (resolve, reject) {\n      processStyle(\n        style,\n        mapOrGroup,\n        !options.styleUrl || options.styleUrl.startsWith('data:')\n          ? location.href\n          : normalizeStyleUrl(options.styleUrl, options.accessToken),\n        options,\n      )\n        .then(function () {\n          resolve(mapOrGroup);\n        })\n        .catch(reject);\n    });\n  }\n\n  return promise;\n}\n\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n */\nexport function finalizeLayer(\n  layer,\n  layerIds,\n  glStyle,\n  styleUrl,\n  mapOrGroup,\n  options = {},\n) {\n  let minZoom = 24;\n  let maxZoom = 0;\n  const glLayers = glStyle.layers;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    if (layerIds.indexOf(glLayer.id) !== -1) {\n      minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n      maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n    }\n  }\n  return new Promise(function (resolve, reject) {\n    const setStyle = function () {\n      const source = layer.getSource();\n      if (!source || source.getState() === 'error') {\n        reject(\n          new Error(\n            'Error accessing data for source ' + layer.get('mapbox-source'),\n          ),\n        );\n        return;\n      }\n      if ('getTileGrid' in source) {\n        const tileGrid =\n          /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */ (\n            source\n          ).getTileGrid();\n        if (tileGrid) {\n          const sourceMinZoom = tileGrid.getMinZoom();\n          if (minZoom > 0 || sourceMinZoom > 0) {\n            layer.setMaxResolution(\n              Math.min(\n                defaultTileGrid.getResolution(minZoom),\n                tileGrid.getResolution(sourceMinZoom),\n              ) + 1e-9,\n            );\n          }\n          if (maxZoom < 24) {\n            layer.setMinResolution(\n              defaultTileGrid.getResolution(maxZoom) + 1e-9,\n            );\n          }\n        }\n      } else {\n        if (minZoom > 0) {\n          layer.setMaxResolution(defaultTileGrid.getResolution(minZoom) + 1e-9);\n        }\n      }\n      if (\n        source instanceof VectorSource ||\n        source instanceof VectorTileSource\n      ) {\n        applyStyle(\n          /** @type {import(\"ol/layer/Vector\").default|import(\"ol/layer/VectorTile\").default} */ (\n            layer\n          ),\n          glStyle,\n          layerIds,\n          Object.assign({styleUrl: styleUrl}, options),\n        )\n          .then(function () {\n            manageVisibility(layer, mapOrGroup);\n            resolve();\n          })\n          .catch(reject);\n      } else {\n        resolve();\n      }\n    };\n\n    layer.set('mapbox-layers', layerIds);\n    const layers = mapOrGroup.getLayers();\n    if (layers.getArray().indexOf(layer) === -1) {\n      layers.push(layer);\n    }\n\n    if (layer.getSource()) {\n      setStyle();\n    } else {\n      layer.once('change:source', setStyle);\n    }\n  });\n}\n\n/**\n * Get the Mapbox Layer object for the provided `layerId`.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {string} layerId Mapbox Layer id.\n * @return {Object} Mapbox Layer object.\n */\nexport function getMapboxLayer(mapOrGroup, layerId) {\n  const style = mapOrGroup.get('mapbox-style');\n  const layerStyle = style.layers.find(function (layer) {\n    return layer.id === layerId;\n  });\n  return layerStyle;\n}\n\n/**\n * Add a new Mapbox Layer object to the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Mapbox Layer object.\n * @param {string} [beforeLayerId] Optional id of the Mapbox Layer before the new layer that will be added.\n * @return {Promise<void>} Resolves when the added layer is available.\n */\nexport function addMapboxLayer(mapOrGroup, mapboxLayer, beforeLayerId) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  let spliceIndex;\n  let sourceIndex = -1;\n  if (beforeLayerId !== undefined) {\n    const beforeMapboxLayer = getMapboxLayer(mapOrGroup, beforeLayerId);\n    if (beforeMapboxLayer === undefined) {\n      throw new Error(`Layer with id \"${beforeLayerId}\" not found.`);\n    }\n    spliceIndex = mapboxLayers.indexOf(beforeMapboxLayer);\n  } else {\n    spliceIndex = mapboxLayers.length;\n  }\n  let sourceOffset;\n  if (\n    spliceIndex > 0 &&\n    mapboxLayers[spliceIndex - 1].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex - 1;\n    sourceOffset = -1;\n  } else if (\n    spliceIndex < mapboxLayers.length &&\n    mapboxLayers[spliceIndex].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex;\n    sourceOffset = 0;\n  }\n  if (sourceIndex === -1) {\n    const {options, styleUrl} = mapOrGroup.get('mapbox-metadata');\n    const layer = setupLayer(glStyle, styleUrl, mapboxLayer, options);\n    if (beforeLayerId) {\n      const beforeLayer = getLayer(mapOrGroup, beforeLayerId);\n      const beforeLayerIndex = mapOrGroup\n        .getLayers()\n        .getArray()\n        .indexOf(beforeLayer);\n      mapOrGroup.getLayers().insertAt(beforeLayerIndex, layer);\n    }\n    mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n    return finalizeLayer(\n      layer,\n      [mapboxLayer.id],\n      glStyle,\n      styleUrl,\n      mapOrGroup,\n      options,\n    );\n  }\n\n  if (mapboxLayers.some((layer) => layer.id === mapboxLayer.id)) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" already exists.`);\n  }\n  const sourceLayerId = mapboxLayers[sourceIndex].id;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, sourceLayerId),\n      )\n    ];\n  mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      const layerIndex = sourceOrLayers.indexOf(sourceLayerId) + sourceOffset;\n      sourceOrLayers.splice(layerIndex, 0, mapboxLayer.id);\n    }\n    applyStyleFunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayers[sourceIndex].id).changed();\n  }\n  return Promise.resolve();\n}\n\n/**\n * Update a Mapbox Layer object in the style. The map will be re-rendered with the new style.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Updated Mapbox Layer object.\n */\nexport function updateMapboxLayer(mapOrGroup, mapboxLayer) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  const index = mapboxLayers.findIndex(function (layer) {\n    return layer.id === mapboxLayer.id;\n  });\n  if (index === -1) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" not found.`);\n  }\n  const oldLayer = mapboxLayers[index];\n  if (oldLayer.source !== mapboxLayer.source) {\n    throw new Error(\n      'Updated layer and previous version must use the same source.',\n    );\n  }\n  delete getFunctionCache(glStyle)[mapboxLayer.id];\n  delete getFilterCache(glStyle)[mapboxLayer.id];\n  mapboxLayers[index] = mapboxLayer;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, mapboxLayer.id),\n      )\n    ];\n  if (args) {\n    applyStylefunction.apply(undefined, args);\n  } else {\n    getLayer(mapOrGroup, mapboxLayer.id).changed();\n  }\n}\n\n/**\n * Updates a Mapbox source object in the style. The according OpenLayers source will be replaced\n * and the map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string} id Key of the source in the `sources` object literal.\n * @param {Object} mapboxSource Mapbox source object.\n * @return {Promise<Source>} Promise that resolves when the source has been updated.\n */\nexport function updateMapboxSource(mapOrGroup, id, mapboxSource) {\n  const currentSource = getSource(mapOrGroup, id);\n  const layers = /** @type {Array<VectorLayer|TileLayer|VectorTileLayer>} */ (\n    mapOrGroup\n      .getLayers()\n      .getArray()\n      .filter(function (layer) {\n        return (\n          (layer instanceof VectorLayer ||\n            layer instanceof TileLayer ||\n            layer instanceof VectorTileLayer) &&\n          layer.getSource() === currentSource\n        );\n      })\n  );\n  const metadata = mapOrGroup.get('mapbox-metadata');\n  let newSourcePromise;\n  switch (mapboxSource.type) {\n    case 'vector':\n      newSourcePromise = setupVectorSource(\n        mapboxSource,\n        metadata.styleUrl,\n        metadata.options,\n      );\n      break;\n    case 'geojson':\n      newSourcePromise = Promise.resolve(\n        setupGeoJSONSource(mapboxSource, metadata.styleUrl, metadata.options),\n      );\n      break;\n    case 'raster':\n    case 'raster-dem':\n      newSourcePromise = setupRasterSource(\n        mapboxSource,\n        metadata.styleUrl,\n        metadata.options,\n      );\n      break;\n    default:\n      return Promise.reject(\n        new Error('Unsupported source type ' + mapboxSource.type),\n      );\n  }\n  newSourcePromise.then(function (newSource) {\n    layers.forEach(function (layer) {\n      layer.setSource(newSource);\n    });\n  });\n  return newSourcePromise;\n}\n\n/**\n * Remove a Mapbox Layer object from the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string|Object} mapboxLayerIdOrLayer Mapbox Layer id or Mapbox Layer object.\n */\nexport function removeMapboxLayer(mapOrGroup, mapboxLayerIdOrLayer) {\n  const mapboxLayerId =\n    typeof mapboxLayerIdOrLayer === 'string'\n      ? mapboxLayerIdOrLayer\n      : mapboxLayerIdOrLayer.id;\n  const layer = getLayer(mapOrGroup, mapboxLayerId);\n  /** @type {Array<Object>} */\n  const layerMapboxLayers = layer.get('mapbox-layers');\n  if (layerMapboxLayers.length === 1) {\n    throw new Error(\n      'Cannot remove last Mapbox layer from an OpenLayers layer.',\n    );\n  }\n  layerMapboxLayers.splice(layerMapboxLayers.indexOf(mapboxLayerId), 1);\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const layers = glStyle.layers;\n  layers.splice(\n    layers.findIndex((layer) => layer.id === mapboxLayerId),\n    1,\n  );\n  const args = styleFunctionArgs[getStyleFunctionKey(glStyle, layer)];\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      sourceOrLayers.splice(\n        sourceOrLayers.findIndex((layer) => layer === mapboxLayerId),\n        1,\n      );\n    }\n    applyStylefunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayerId).changed();\n  }\n}\n\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox Style\n * `layer`. Note that multiple Mapbox Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} layerId Mapbox Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nexport function getLayer(map, layerId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const mapboxLayers = layers[i].get('mapbox-layers');\n    if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n      return /** @type {Layer} */ (layers[i]);\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get the OpenLayers layer instances for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nexport function getLayers(map, sourceId) {\n  const result = [];\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    if (layers[i].get('mapbox-source') === sourceId) {\n      result.push(/** @type {Layer} */ (layers[i]));\n    }\n  }\n  return result;\n}\n\n/**\n * Get the OpenLayers source instance for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Source} OpenLayers source instance.\n */\nexport function getSource(map, sourceId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const source = /** @type {Layer} */ (layers[i]).getSource();\n    if (layers[i].get('mapbox-source') === sourceId) {\n      return source;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nexport function setFeatureState(mapOrLayer, feature, state) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState) {\n      if (state) {\n        featureState[feature.id] = state;\n      } else {\n        delete featureState[feature.id];\n      }\n      layers[i].changed();\n    } else {\n      throw new Error(`Map or layer for source \"${feature.source}\" not found.`);\n    }\n  }\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nexport function getFeatureState(mapOrLayer, feature) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState && featureState[feature.id]) {\n      return featureState[feature.id];\n    }\n  }\n  return undefined;\n}\n","import BaseEvent from 'ol/events/Event.js';\nimport EventType from 'ol/events/EventType.js';\nimport MVT from 'ol/format/MVT.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource from 'ol/source/VectorTile.js';\nimport {applyBackground, applyStyle} from './apply.js';\n\n/** @typedef {import(\"ol/Map.js\").default} Map */\n\n/**\n * @classdesc\n * Event emitted on configuration or loading error.\n */\nclass ErrorEvent extends BaseEvent {\n  /**\n   * @param {Error} error error object.\n   */\n  constructor(error) {\n    super(EventType.ERROR);\n\n    /**\n     * @type {Error}\n     */\n    this.error = error;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {string} styleUrl The URL of the Mapbox style object to use for this layer.  For a\n * style created with Mapbox Studio and hosted on Mapbox, this will look like\n * 'mapbox://styles/you/your-style'.\n * @property {string} [accessToken] The access token for your Mapbox style. This has to be provided\n * for `mapbox://` style urls. For `https://` and other urls, any access key must be the last query\n * parameter of the style url.\n * @property {string} [source] If your style uses more than one source, you need to use either the\n * `source` property or the `layers` property to limit rendering to a single vector source.  The\n * `source` property corresponds to the id of a vector source in your Mapbox style.\n * @property {Array<string>} [layers] Limit rendering to the list of included layers.  All layers\n * must share the same vector source.  If your style uses more than one source, you need to use\n * either the `source` property or the `layers` property to limit rendering to a single vector\n * source.\n * @property {boolean} [declutter=true] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"ol/layer/Base.js\").BackgroundColor|false} [background] Background color for the layer.\n * If not specified, the background from the Mapbox style object will be used. Set to `false` to prevent\n * the Mapbox style's background from being used.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"ol/extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `maxResolution` will\n * match the style source's `minzoom`.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `minZoom` will match\n * the style source's `minzoom`.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"ol/render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"ol/layer/VectorTile.js\").VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"ol/Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use `map.addLayer()`.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * ```js\n * import {MapboxVectorLayer} from 'ol-mapbox-style';\n * ```\n * A vector tile layer based on a Mapbox style that uses a single vector source.  Configure\n * the layer with the `styleUrl` and `accessToken` shown in Mapbox Studio's share panel.\n * If the style uses more than one source, use the `source` property to choose a single\n * vector source.  If you want to render a subset of the layers in the style, use the `layers`\n * property (all layers must share the same vector source).  See the constructor options for\n * more detail.\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new MapboxVectorLayer({\n *           styleUrl: 'mapbox://styles/mapbox/bright-v9',\n *           accessToken: 'your-mapbox-access-token-here',\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * On configuration or loading error, the layer will trigger an `'error'` event.  Listeners\n * will receive an object with an `error` property that can be used to diagnose the problem.\n *\n * **Note for users of the full build**: The `MapboxVectorLayer` requires the\n * [ol-mapbox-style](https://github.com/openlayers/ol-mapbox-style) library to be loaded as well.\n *\n * @param {Options} options Options.\n * @extends {VectorTileLayer}\n * @fires module:ol/events/Event~BaseEvent#event:error\n * @api\n */\nexport default class MapboxVectorLayer extends VectorTileLayer {\n  /**\n   * @param {Options} options Layer options.  At a minimum, `styleUrl` and `accessToken`\n   * must be provided.\n   */\n  constructor(options) {\n    const declutter = 'declutter' in options ? options.declutter : true;\n    const source = new VectorTileSource({\n      state: 'loading',\n      format: new MVT(),\n    });\n\n    super({\n      source: source,\n      background: options.background,\n      declutter: declutter,\n      className: options.className,\n      opacity: options.opacity,\n      visible: options.visible,\n      zIndex: options.zIndex,\n      minResolution: options.minResolution,\n      maxResolution: options.maxResolution,\n      minZoom: options.minZoom,\n      maxZoom: options.maxZoom,\n      renderOrder: options.renderOrder,\n      renderBuffer: options.renderBuffer,\n      renderMode: options.renderMode,\n      map: options.map,\n      updateWhileAnimating: options.updateWhileAnimating,\n      updateWhileInteracting: options.updateWhileInteracting,\n      preload: options.preload,\n      useInterimTilesOnError: options.useInterimTilesOnError,\n      properties: options.properties,\n    });\n\n    if (options.accessToken) {\n      this.accessToken = options.accessToken;\n    }\n    const url = options.styleUrl;\n    const promises = [\n      applyStyle(this, url, options.layers || options.source, {\n        accessToken: this.accessToken,\n      }),\n    ];\n    if (this.getBackground() === undefined) {\n      promises.push(\n        applyBackground(this, options.styleUrl, {\n          accessToken: this.accessToken,\n        }),\n      );\n    }\n    Promise.all(promises)\n      .then(() => {\n        source.setState('ready');\n      })\n      .catch((error) => {\n        this.dispatchEvent(new ErrorEvent(error));\n        const source = this.getSource();\n        source.setState('error');\n      });\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t76: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkol_mapbox_style\"] = self[\"webpackChunkol_mapbox_style\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));"],"names":["deferred","UnitBezier","p1x","p1y","p2x","p2y","this","cx","bx","ax","cy","by","ay","module","exports","prototype","sampleCurveX","t","sampleCurveY","sampleCurveDerivativeX","solveCurveX","x","epsilon","t0","t1","t2","x2","i","Math","abs","d2","solve","kCSSColorTable","clamp_css_byte","round","clamp_css_float","f","parse_css_int","str","length","parseFloat","parseInt","parse_css_float","css_hue_to_rgb","m1","m2","h","css_str","iv","replace","toLowerCase","slice","substr","op","indexOf","ep","fname","params","split","alpha","pop","s","l","e","read","buffer","offset","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","NaN","Infinity","pow","write","value","c","rt","isNaN","floor","log","LN2","fontWeights","thin","hairline","light","book","regular","normal","plain","roman","standard","medium","bold","heavy","black","fat","poster","sp","italicRE","fontCache","fonts","size","lineHeight","cssData","Array","isArray","weight","style","fontFamilies","ii","parts","maybeWeight","w","test","previousPart","startsWith","fontFamily","join","push","assert","err","AssertionError","Error","captureStackTrace","name","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","len","extraLen","realloc","writePackedVarint","arr","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","destroy","readFields","readField","result","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","readDouble","b","p","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","decode","subarray","readUtf8TextDecoder","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","min","set","finish","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","writeBytes","writeRawMessage","fn","obj","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","r","a","n","o","exp","u","sqrt","max","_maxEntries","_minEntries","ceil","clear","children","minX","minY","maxX","maxY","leaf","height","all","_all","data","search","toBBox","collides","load","insert","_build","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","Property","CollectionEvent","constructor","element","index","super","Collection","array","options","on","once","un","unique_","unique","array_","assertUnique_","updateLength_","getLength","extend","forEach","getArray","item","get","insertAt","elem","dispatchEvent","ADD","removeAt","prev","REMOVE","setAt","except","disposed","dispose","disposeInternal","Feature","geometryOrProperties","id_","undefined","geometryName_","style_","styleFunction_","geometryChangeKey_","addChangeListener","handleGeometryChanged_","geometry","setGeometry","properties","setProperties","clone","hasProperties","getProperties","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","changed","CHANGE","styles","createStyleFunction","setId","id","removeChangeListener","ImageWrapper","extent","resolution","pixelRatio","stateOrLoader","pixelRatio_","state","IDLE","image_","loader","getExtent","getImage","getPixelRatio","getResolution","getState","LOADING","requestResolution","then","image","HTMLImageElement","ImageBitmap","HTMLCanvasElement","HTMLVideoElement","LOADED","catch","error","ERROR","console","finally","setImage","setResolution","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","LOAD","src","decodeFallback","Promise","resolve","reject","complete","width","handleLoad","unlisten","handleError","removeEventListener","addEventListener","EMPTY","ImageTile","tileCoord","crossOrigin","tileLoadFunction","crossOrigin_","src_","key","Image","unlisten_","tileLoadFunction_","unlistenImage_","handleImageError_","ctx","fillStyle","fillRect","canvas","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","bind","MapRenderer","Disposable","map","map_","dispatchRenderEvent","frameState","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","rotation","center","forEachFeatureAtCoordinate","coordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","managed","feature","layer","call","projection","translatedCoordinate","offsets","canWrapX","projectionExtent","worldWidth","layerStates","layerStatesArray","numLayers","matches","tmpCoord","j","layerState","hasRenderer","layerRenderer","getRenderer","source","getSource","coordinates","getWrapX","order","distanceSq","some","hasFeatureAtCoordinate","getMap","renderFrame","flushDeclutterItems","scheduleExpireIconCache","canExpireCache","postRenderFunctions","expireIconCache","expire","Map","fontChangeListenerKey_","ObjectEventType","PROPERTYCHANGE","redrawText","element_","document","createElement","position","zIndex","className","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","declutterLayers_","hasListener","event","parentNode","removeChild","display","PRECOMPOSE","declutterLayers","previousElement","layerIndex","sourceState","getSourceState","unrender","render","POSTCOMPOSE","layers","renderDeclutter","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","getCoordinateFromPixel","preventDefault","stopPropagation","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","TOUCHMOVE","passive","emulateClick_","pointerEvent","newEvent","clearTimeout","setTimeout","updateActivePointers_","pointerId","target","Object","values","handlePointerUp_","defaultPrevented","isMouseActionButton_","button","PointerEvent","defineProperty","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","Control","pointerEvents","target_","setTarget","setMap","getOverlayContainerStopEvent","appendChild","MapEventType","mapEvent","getElementById","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","getAttributions","getAttributionsCollapsible","setCollapsible","updateElement_","attributions","visible","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","compassClassName","add","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","resetNorth_","view","getView","getRotation","PI","animate","easing","setRotation","transform","contains","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","Interaction","handleEvent","setActive","getActive","mapBrowserEvent","active","zoomByDelta","anchor","newResolution","getResolutionForZoom","delta_","stopEvent","browserEvent","shiftKey","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","var_args","conditions","arguments","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","Pointer","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroid","update","adjustCenterInternal","begin","distance","getDistance","angle","getAngle","getCenterInternal","centerpx","getPixelFromCoordinateInternal","dest","getCoordinateFromPixelInternal","cos","sin","animateInternal","getConstrainedCenter","endInteraction","lastAngle_","getConstraints","getSize","theta","atan2","adjustRotationInternal","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","setPixels","createOrUpdateGeometry","setCoordinates","Polygon","DragBoxEvent","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","out_","out","rotatedExtent","rotatedExtentForGeometry","getResolutionForExtentInternal","factor","scale","fitInternal","defaultCondition_","pixelDelta_","pixelDelta","KEYDOWN","keyEvent","Key","mapUnitsDelta","deltaX","deltaY","currentCenter","pan","platformModifierKey","KEYPRESS","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","y","Date","now","lastIndex","firstIndex","dx","dy","totalDelta_","lastDelta_","maxDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","WHEEL","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","getConstrainResolution","adjustZoom","timeLeft","handleWheelZoom_","setMouseAnchor","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","lastDistance_","lastScaleDelta_","scaleDelta","adjustResolutionInternal","direction","removeLayerMapProperty","Layer","setMapInternal","getLayers","setLayerMapProperty","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","MapProperty","View","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotate","rotateOptions","attribution","attributionOptions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","overlays_","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","TileQueue","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","CollectionEventType","addOverlayInternal_","toString","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","viewportSize","scaleX","scaleY","eventPosition","changedTouches","getTarget","getProjection","getOverlayById","setLayers","group","collection","getLoadingOrNotReady","getLayerStatesArray","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","tile","tileSourceKey","tileCenter","tileResolution","handleMapBrowserEvent","eventType","rootNode","documentElement","interactionsArray","propagationStopped","handlePostRender","tileQueue","isEmpty","maxTotalLoading","maxNewLoads","hints","viewHints","ViewHint","ANIMATING","INTERACTING","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","RENDERCOMPLETE","resolveConstraints","CONTEXTMENU","unobserve","ShadowRoot","host","setSize","Composite","observe","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","Group","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","isDef","getHints","declutterTree","usedTiles","wantedTiles","mapId","renderTargets","nextCenter","nextResolution","nextRotation","nextExtent","getCount","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","offsetHeight","getClientRects","oldSize","setViewportSize","ObjectEvent","oldValue","BaseObject","values_","hasOwnProperty","getKeys","keys","assign","getPropertiesInternal","notify","listener","silent","applyProperties","unset","Observable","revision_","getRevision","onInternal","onceInternal","ol_key","unInternal","unByKey","Tile","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getKey","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","start","inTransition","endTransition","DROP","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","EventType","TileState","tileKey","newLoads","TileRange","containsXY","containsTileRange","tileRange","equals","getHeight","getWidth","intersects","createOrUpdate","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","cappedMaxRes","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","isGlobal","resolutions","capped","z","createSnapToResolutions","defaultMaxResolution","degrees","getMetersPerUnit","defaultMinResolution","defaultMaxZoom","power","tolerance","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createRotationConstraint","constraints_","setCenterInternal","oldPadding","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","args","animationCount","animationCallback","series","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","jj","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","currentResolution","getCenter","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","getViewStateAndExtent","nearest","baseLevel","fit","geometryOrExtent","getType","userProjection","cosAngle","sinAngle","coords","getFlatCoordinates","stride","getStride","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRot","centerX","centerY","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustResolution","adjustRotation","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","endInteractionInternal","targetZoom","targetRes","returnValue","binarySearch","haystack","needle","comparator","mid","cmp","ascending","found","linearFindNearest","candidate","reverseSubArray","tmp","extension","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","res","assertion","errorMessage","channel","alias","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","E","whitepoint","rgb","_xyz","white","g","arg","_u","_v","xn","yn","zn","luv","vn","yr","lchuv","hr","cstr","space","base","exec","dims","trim","shift","baseHues","endsWith","match","red","orange","yellow","green","blue","purple","hsl","t3","asString","color","MAX_CACHE_SIZE","cache","cacheSize","withAlpha","output","rgbaToLcha","lchaToRgba","fromString","raw","Number","parsed","normalize","asArray","isStringColor","_","asColorLike","levels","info","warn","level","coordinate1","coordinate2","wrapX","worldsAway","sourceExtentWidth","getWorldsAway","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","variant","families","family","createCanvasContext2D","canvasPool","settings","OffscreenCanvas","getContext","releaseCanvas","context","clearRect","replaceNode","newNode","oldNode","parent","replaceChild","removeNode","node","removeChildren","lastChild","replaceChildren","oldChildren","childNodes","oldChild","newChild","easeIn","easeOut","inAndOut","linear","listen","originalListener","eventsKey","listenOnce","unlistenByKey","BLUR","CLEAR","DRAGENTER","DRAGOVER","FOCUS","RESIZE","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","includes","isString","evt","dispatching","pendingRemovals","propagate","pr","getListeners","boundingExtent","extendCoordinate","closestSquaredDistanceXY","containsCoordinate","containsExtent","extent1","extent2","coordinateRelationship","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","createEmpty","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","extendFlatCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getCorner","corner","getForViewAndSize","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","_boundingExtentXYs","wrapAndSliceX","isFinite","withCredentials","loadFeaturesXhr","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","JSON","parse","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","GeometryCollection","Geometry","geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","closestPointXY","closestPoint","minSquaredDistance","computeExtent","getGeometries","cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","intersectsExtent","sx","sy","translate","clonedGeometries","defaultFeatureProjection","featureClass","supportedMediaTypes","getReadOptions","getUnits","setWorldExtent","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","transformed","fromProjection","toProjection","decimals","GeometryConstructor","Point","LineString","MultiPoint","MultiLineString","MultiPolygon","createRenderFeature","object","flat","geometryType","layout","ends","orient","orientFlatCoordinates","enableSimplifyTransformed","createGeometry","JSONFeature","readFeatureFromObject","getObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","readGeometryInternal","readPointGeometry","readLineStringGeometry","deflate","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","getCoordinates","writePointGeometry","writeLineStringGeometry","right","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","featureObject","geometryObject","crs","objects","TRUE","FALSE","VOID","memoizeOne","lastResult","lastArgs","lastThis","called","nextArgs","toPromise","getter","promiseGetter","tmpTransform","extent_","extentRevision_","simplifyTransformedInternal","revision","simplifyTransformed","coord","getClosestPoint","point","intersectsCoordinate","simplify","destination","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","flatMidpoint_","flatMidpointRevision_","maxDeltaRevision_","setFlatCoordinates","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","extrapolate","getCoordinateAt","getFlatMidpoint","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","setLayout","ends_","lineStrings","getLayout","appendLineString","multiLineString","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","simplifiedEnds","appendPoint","multiPoint","squaredDistance","getPoint","getPoints","points","endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","polygons","thisEndss","polygon","appendPolygon","newEndss","multiPolygon","getOrientedFlatCoordinates","getEndss","getFlatInteriorPoints","flatCenters","getInteriorPoints","simplifiedEndss","getPolygon","prevEnds","getPolygons","lastEnds","LinearRing","SimpleGeometry","inflate","flatInteriorPointRevision_","flatInteriorPoint_","appendLinearRing","linearRing","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","fromExtent","getFirstCoordinate","getLastCoordinate","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","twiceArea","linearRingss","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","getInteriorPointOfArray","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","interpolatePoint","dimension","cumulativeLengths","lineStringCoordinateAtM","lo","hi","m0","lineStringsCoordinateAtM","intersectsLineString","coordinatesExtent","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","lineStringLength","linearRingIsClockwise","edge","linearRingsAreOriented","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","inflateEnds","startOrientation","prevEndIndex","orientation","ret","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","snap","quantize","dx1","dy1","dx2","dy2","quantizeArray","quantizeMultiArray","transform2D","anchorX","anchorY","k","ua","navigator","userAgent","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","self","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","BaseLayer","background_","background","OPACITY","opacity","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","state_","getBackground","getClassName","getLayerState","getZIndex","getOpacity","getVisible","getLayersArray","states","EXTENT","setBackground","setExtent","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","numTypes","NoneType","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","names","namedType","specific","overlapsType","oneType","otherType","isType","expected","LiteralExpression","CallExpression","operator","newParsingContext","variables","featureId","encoded","typeHint","parser","parsers","parseCallExpression","Ops","Get","Var","Concat","GeometryType","Any","All","Not","Resolution","Zoom","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Case","In","Color","Id","Band","Palette","createParser","getTypeFromHint","withArgsCount","firstArg","parsedArgs","varName","withNoArgs","parseArgsOfType","narrowArgsType","outputType","withEvenArgs","argsCount","inputType","fallback","expectedInputType","interpolationType","interpolation","input","stop","operation","argCount","needleType","colors","parsedColors","minArgs","maxArgs","argType","expression","gotType","expectedType","sameType","returnType","argValidators","actualType","buildExpression","actual","compileExpression","colorValue","compileAssertionExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","atan","compileNumericExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","flatStylesToStyleFunction","flatStyles","parsingContext","evaluators","buildStyle","evaluationContext","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","text","Text","setText","setFill","setBackgroundFill","setStroke","setBackgroundStroke","setFont","setMaxAngle","setOffsetX","setOffsetY","setOverflow","placement","setPlacement","setRepeat","setScale","setRotateWithView","textAlign","setTextAlign","justify","setJustify","textBaseline","setTextBaseline","setPadding","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","anchorXUnits","optionalIconAnchorUnits","anchorYUnits","property","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","declutterMode","optionalDeclutterMode","icon","Icon","setDisplacement","setAnchor","buildIcon","pointsName","requireNumber","radius","radius1","radius2","shape","RegularShape","buildShape","evaluateRadius","circle","Circle","setRadius","buildCircle","buildImage","evaluateZIndex","Style","empty","fill","stroke","evaluateColor","colorLikeEvaluator","Fill","setColor","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","Stroke","setWidth","lineCap","setLineCap","lineJoin","setLineJoin","setLineDash","setLineDashOffset","setMiterLimit","evaluator","requireSizeLike","BaseVectorLayer","baseOptions","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getFeatures","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","rules","compiledRules","rule","styleLength","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","rulesToStyleFunction","toStyleLike","GroupEvent","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","currentLayers","ownLayerState","defaultZIndex","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","SOURCE","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","getData","isVisible","getMapInternal","find","layerExtent","inView","prepareFrame","MAP","arrayLayerState","createRenderer","PRELOAD","USE_INTERIM_TILES_ON_ERROR","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","compositionContext_","opacity_","renderWorlds","executorGroup","vectorSource","getLayer","snapToPixel","endWorld","world","getRenderTransform","execute","setupCompositionContext_","compositionContext","releaseCompositionContext_","globalAlpha","drawImage","pixelTransform","inversePixelTransform","canvasTransform","useContainer","replayGroup","PRERENDER","POSTRENDER","containerReused","preRender","clipped","clipUnrotated","restore","postRender","transforms","featureCallback","lastIndexOf","executorGroups","renderIfReadyAndVisible","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","declutterBuilderGroup","userTransform","userExtent","loadFeatures","styleFunction","dirty","renderFeature","getFeaturesInExtent","replayGroupInstructions","ExecutorGroup","getOverlaps","builderGroup","VectorLayer","BaseVector","IMAGE_REPLAYS","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","renderedLayerRevision_","renderedPixelToCoordinateTransform_","tmpTransform_","prepareTile","updateExecutorGroup_","tileImageNeedsRender_","getTile","hifi","wantedResolution","getRenderMode","renderTileImage_","isDrawableTile","hasContext","getTileImage","layerRevision","renderedTiles","builderState","getReplayState","renderedResolution","renderedRevision","renderedRenderOrder","sourceTileGrid","getTileGrid","tileExtent","getTileGridForProjection","getTileCoordExtent","wrappedTileCoord","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","declutterExecutorGroups","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","tmpExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","tileGrid","hitExtent","declutteredFeatures","renderedProjection","getTileCoordForCoordAndResolution","loadingSourceTiles","tilePixel","reduce","accumulator","tileSize","getTileSize","getZForResolution","zDirection","getTileCoordCenter","tiles","getTileRenderTransform","worldOffset","renderMode","replayTypes","tileSource","clips","clipZs","hasExecutors","currentZ","contextSaved","currentClip","getClipCoords","clip","save","beginPath","moveTo","lineTo","replayState","renderedTileResolution","renderedTileRevision","renderPixelRatio","getTilePixelSize","renderScale","setTransform","pixelScale","VectorTileLayer","preload","useInterimTilesOnError","renderMode_","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","bbox","clamp","squaredSegmentDistance","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","modulo","lerp","toFixed","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","Projection","code","units","global","worldExtent","getPointResolution","cosh","PROJECTIONS","METERS_PER_UNIT","EPSG4326Projection","axisOrientation","metersPerUnit","sourceCode","getCode","destinationCode","DEFAULT_RADIUS","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","projectionLike","pointResolution","getPointResolutionFunc","projUnits","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","fromLonLat","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","transformExtent","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceMetersPerUnit","userMetersPerUnit","projections2","forwardTransform","inverseTransform","code_","units_","worldExtent_","axisOrientation_","global_","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getAxisOrientation","setGlobal","getDefaultTileGrid","setDefaultTileGrid","setGetPointResolution","RenderEvent","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","squaredTolerance_","stride_","simplifiedGeometry_","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","interval","referenceWidth","isAvailable","fontStyle","fontWeight","available","referenceFont","measureTextWidth","check","done","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","body","measureAndCacheTextWidth","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","contextInstructions","executeLabelInstructions","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CUSTOM","endGeometry","BEGIN_GEOMETRY","reverseHitDetectionInstructions","reverse","instruction","END_GEOMETRY","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","lineDash","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","createFill","fillInstruction","SET_FILL_STYLE","applyStroke","createStroke","SET_STROKE_STYLE","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","rotateWithView_","scale_","width_","declutterMode_","declutterImageWithText_","myBegin","DRAW_IMAGE","sharedData","getAnchor","origin","getOrigin","getHitDetectionImage","getRotateWithView","getScaleArray","getDeclutterMode","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","MOVE_TO_LINE_TO","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","CIRCLE","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","maxAngle","segmentM","advance","beginX","beginY","startOffset","startLength","endM","singleSegment","previousAngle","iStart","charLength","chars","substring","p1","p2","p3","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","fillStates","strokeStates","textStates","widths_","labels_","createLabel","textKey","fillKey","strokeKey","strokeState","fillState","textState","textIsArray","strokeWidth","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","strokeInstruction","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","baseline","execute_","pixelCoordinates","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","BEGIN_PATH","arc","CLOSE_PATH","closePath","rotateWithView","labelWithAnchor","textOffsetX","textOffsetY","geometryWidths","backgroundFill","backgroundStroke","widthIndex","imageArgs","imageDeclutterBox","DRAW_CHARS","measurePixelRatio","pixelRatioScale","textScale","cachedWidths","pathLength","textLength","drawChars","cc","part","FILL","STROKE","executeHitDetection","ORDER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","executors","instructionByZindex","candidates","contextSize","newContext","willReadFrequently","indexes","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","imageData","getImageData","idx","zs","executor","builderTypes","Instruction","beginPathInstruction","closePathInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","CanvasTextBuilder","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","textStrokeState_","textState_","textKey_","fillKey_","strokeKey_","beg","keep","saveTextStates_","p0","repeat","flatOffset","oo","chunk","chunkBegin","range","drawChars_","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getRepeat","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","getOffsetX","getOffsetY","textRotateWithView","textRotation","getText","CanvasImmediateRenderer","VectorContext","context_","transform_","transformRotation_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","getGeometryFunction","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","getImageSize","imgContext","getScale","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","createLoadedTileFinder","forEachLoadedTile","ImageState","loadImage","imageState","pixelContext","tempTransform","pixelContext_","col","row","backgroundColor","layerClassName","firstElementChild","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedPixelRatio","newTiles_","tmpTileRange_","tileState","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","getGutterForProjection","viewResolution","viewCenter","sourceRevision","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","getInterpolate","getOpaque","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","alphaChanged","postRenderFunction","expireCache","tileCallback","tileCount","useTile","updateCacheSize","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","getImageState","imageBuilderGroup","imageReplay","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","unlistenImageChange","listenImageChange","renderGeometry","renderFeatureInternal","getHitDetectionRenderer","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","renderEdges","drawSingle","pixelRound","globalCompositeOperation","sourceDataExtent","stitchContext","canvasWidthInUnits","canvasHeightInUnits","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","step","ReprojTile","targetTileGrid","getTileFunction","errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","maxSourceExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","calculateSourceExtent","sourceRange","srcX","srcY","reproject_","leftToLoad","sourceListenKey","unlistenSources_","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","ERROR_THRESHOLD","createSnapToN","createSnapToZero","hasArea","toSize","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","attributionLike","maxEntries","rbush_","items_","extents","items","getAll","getInExtent","forEach_","forEachInExtent","rbush","VectorSourceEvent","Event","VectorSource","loader_","format_","url_","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","setLoader","setUrl","CircleStyle","displacement","getRadius","getDisplacement","radius_","color_","taintedTestContext","IconImage","imageState_","size_","tainted_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","calculateScale","wantedWidth","wantedHeight","normalizedAnchor_","anchorOrigin_","anchorXUnits_","anchorYUnits_","cacheKey","iconImage_","iconImage","offset_","offsetOrigin_","origin_","initialOptions_","iconImageSize","shared","cache_","cacheSize_","maxCacheSize_","maxCacheSize","ImageStyle","scaleArray_","displacement_","canvases_","hitDetectionCanvas_","radius2_","stroke_","renderOptions_","getRadius2","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","r1","r2","miterRatio","bevelAdd","aa","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","startAngle","angle0","radiusC","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","toFunction","defaultStyles","createDefaultStyle","font_","textAlign_","justify_","repeat_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","tmp_","create","reset","multiply","transform1","transform2","a1","d1","e1","f1","a2","e2","f2","setFromArray","makeScale","compose","makeInverse","det","transformStringDiv","transformString","abstract","uidCounter_","getUid","ol_uid","rgba","toArray","toArray01","toArray01PremultipliedAlpha","transparent","convertLiteral","getInterpolateOperator","parameters","colorSpace","getFallback","propertySpec","defaultValue","default","convertPropertyFunction","getFunctionType","appendStopPair","fixupDegenerateStepCurve","curve","isStep","interpolated","convertTokenString","re","literal","ParsingError","message","Scope","bindings","has","NullType","kind","ObjectType","ValueType","CollatorType","FormattedType","ResolvedImageType","itemType","N","valueMemberTypes","checkSubtype","memberType","isValidType","provided","allowedTypes","isValidNativeType","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","lhs","rhs","resolvedLocale","resolvedOptions","FormattedSection","fontStack","textColor","sections","unformatted","section","factory","serialize","serialized","validateRGBA","isValue","mixed","typeOf","Literal","evaluate","eachChild","outputDefined","types","string","number","boolean","Assertion","FormatExpression","nextTokenMayBeObject","lastExpression","content","evaluatedContent","ImageExpression","evaluatedImageName","availableImages","Coercion","parseColor","child","geometryTypes","globals","featureState","formattedSection","_parseColorCache","canonical","featureTileCoord","featureDistanceData","canonicalID","distanceFromCenter","dX","dY","bearing","cached","CompoundExpression","_evaluate","definition","definitions","availableOverloads","overloads","signature","signatureContext","registry","path","scope","argParseFailed","errors","signatures","stringifySignature","actualTypes","register","CollatorExpression","updateBBox","boxWithinBox","bbox1","bbox2","getTileCoordinates","lat","tilesAtZoom","onBoundary","pointWithinPolygon","rings","inside","ring","len2","pointWithinPolygons","twoSided","q1","q2","det1","det2","lineIntersectLine","vectorP","lineIntersectPolygon","lineStringWithinPolygon","lineStringWithinPolygons","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","getTilePoints","pointBBox","shifts","tilePoints","getTileLines","lineBBox","tileLines","tileLine","Within","geojson","tilePolygon","tilePolygons","pointsWithinPolygons","linesWithinPolygons","isStateConstant","isGlobalPropertyConstant","boundExpression","ParsingContext","expr","_parse","annotate","typeAnnotation","Expr","isConstant","ec","isTypeAnnotation","childrenConstant","currentValue","nextValue","lowerIndex","upperIndex","currentIndex","Step","labels","outputs","labelKey","valueKey","stopCount","to","Xn","Zn","deg2rad","rad2deg","xyz2lab","lab2xyz","xyz2rgb","rgb2xyz","rgbToLab","rgbColor","labToRgb","labColor","interpolateHue","lab","forward","hcl","hclColor","interpolationFactor","lower","upper","exponentialInterpolation","controlPoints","rest","outputLower","outputUpper","lowerValue","upperValue","difference","Coalesce","needsAnnotation","firstImage","Let","binding","At","IndexOf","fromIndex","cases","otherwise","labelContext","MAX_SAFE_INTEGER","sortedLabels","groupedByOutput","outputLookup","outputIndex","coerceLabel","branches","Slice","beginIndex","endIndex","isComparableType","eqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","hasUntypedArgument","lt","Equals","NotEquals","LessThanOrEqual","GreaterThanOrEqual","NumberFormat","currency","unit","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","Length","expressions","varargs","pitch","heatmapDensity","lineProgress","skyRadialProgress","accumulated","LN10","asin","isSupportedScript","toUpperCase","StyleExpression","spec","_warningHistory","_evaluator","_defaultValue","_enumValues","evaluateWithoutErrorHandling","createExpression","enum","formatted","resolvedImage","getExpectedType","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","zoomStops","createPropertyExpression","isFeatureConstant","isZoomConstant","zoomCurve","findZoomCurve","childResult","deepUnbundle","unbundledValue","valueOf","unbundle","layerType","needGeometry","needFeature","isExpressionFilter","convertFilter","filterExp","staticFilter","isDynamicFilter","unionDynamicBranches","collapseDynamicBooleanExpressions","extractStaticFilter","filterSpec","latest","compiledStaticFilter","filterFunc","globalProperties","dynamicFilterFunc","compiledDynamicFilter","dynamicFilter","geometryNeeded","dynamicConditionExpressions","collapsedExpression","subExpression","isBranchingDynamically","convertComparisonOp","convertNegation","filters","convertInOp","convertHasOp","deref","derefLayers","ref","getKeyZXY","fromKey","tmpTileCoord","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","getFullTileRange","opt_direction","fullTileRanges","VectorTile","features_","onLoad","setFeatures","onError","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","expandUrl","urls","startCharCode","stopCharCode","charCode","mapboxBaseUrl","getMapboxPath","normalizeStyleUrl","token","mapboxPath","decodeURI","URL","location","href","normalizeSourceUrl","tokenParam","styleUrl","urlObject","searchParams","functionCacheByStyleId","filterCacheByStyleId","styleId","getStyleId","glStyle","functionCache","defaultResolutions","defaultTileGrid","createCanvas","pendingRequests","fetchResource","resourceType","metadata","request","transformedRequest","transformRequest","pendingRequest","Request","headers","fetch","response","ok","json","getGlStyle","glStyleOrUrl","accessToken","tilejsonCache","getTileJson","glSource","promise","arrayBuffer","blob","createObjectURL","revokeObjectURL","normalizedSourceUrl","accessTokenParam","tileJson","tileUrl","scheme","drawIconHalo","spriteImage","spriteImageData","haloWidth","haloColor","imageCanvas","imageContext","smoothstep","drawSDF","gamma","putImageData","hairSpacePool","applyLetterSpacing","letterSpacing","textWithLetterSpacing","lines","joinSpaceString","ll","getMeasureContext","measureCache","wrapText","em","hardLines","wrappedText","words","maxWidth","word","testLine","prevWidth","nextWidth","next","lineWords","lastWord","fontFamilyRegEx","stripQuotesRegEx","loadedFontFamilies","hasFontFamily","styleSheets","styleSheet","cssRules","cssRule","cssText","processedFontFamilies","getFonts","templateUrl","fontsKey","fontDescriptions","cssFont","fontDescription","fontUrl","querySelector","markup","rel","head","expressionData","rawExpression","compiledExpression","emptyObj","zoomObj","renderFeatureCoordinates","getValue","layoutOrPaint","layerId","functions","isExpr","convertIdentityFunction","zoomAndFeatureDependent","featureDependent","zoomDependent","tokens","featureFunctionParameters","featureFunctionStops","convertZoomAndPropertyFunction","convertZoomFunction","convertFunction","evaluateFilter","filterCache","renderTransparentEnabled","colorWithOpacity","templateRegEx","fromTemplate","recordLayer","stylefunction","olLayer","sourceOrLayers","spriteData","spriteImageUrl","version","spriteImageSize","spriteImageUnSDFed","blobUrl","worker","postMessage","action","allLayers","layersBySourceLayer","mapboxLayers","iconImageCache","patternCache","mapboxSource","sourceLayer","textHalo","onlyLayer","featureBelongsToLayer","stylesLength","layerData","paint","visibility","minzoom","maxzoom","strokeColor","fillIcon","icon_cache_key","pattern","createPattern","iconImg","skipLabel","textLineHeight","textSize","maxTextWidth","hasImage","placementAngle","styleGeom","imageElement","iconRotationAlignment","geom","iconSize","iconColor","iconCacheKey","iconOptions","sdf","circleRadius","circleStrokeColor","circleTranslate","circleColor","circleStrokeWidth","cache_key","fontArray","textField","chunkFont","textTransform","wrappedLabel","textAnchor","symbolSpacing","textHaloWidth","textOffset","textTranslate","vOffset","hOffset","textRotationAlignment","textJustify","halfTextSize","textPadding","BaseImageLayer","CanvasImageLayerRenderer","imageLayer","imageSource","imageExtent","imageMapWidth","imageMapHeight","imageResolution","imageResolutionX","imageResolutionY","dw","dh","previousAlpha","BaseImage","MVT","featureClass_","layerName_","layerName","layers_","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","ctor","pbfLayers","layersPBFReader","pbfLayer","readRawFeature","layerPBFReader","featurePBFReader","ImageCanvas","error_","getError","handleLoad_","fromResolutionLike","ReprojImage","getImageFunction","Triangulation","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","wantedExtent_","wantedResolution_","static_","wantedProjection_","setResolutions","findNearestResolution","getImageInternal","requestExtent","requestWidth","requestHeight","getRequestExtent","handleImageChange","BaseTileLayer","BaseTile","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","pruneExceptNewestZ","getForProjection","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","createXYZ","xyzOptions","gridOptions","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileCoordForTileUrlFunction","withinExtentAndZ","TileSourceEvent","hasImageData","ImageData","createMinion","workerHasImageData","newWorkerImageData","buffers","meta","imageOps","numBuffers","numBytes","byteLength","images","Uint8ClampedArray","arrays","pixels","createWorker","config","onMessage","lib","Worker","Blob","Buffer","Processor","threads","_imageOps","workers","_onWorkerMessage","minion","terminated","terminate","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","_enqueue","_dispatch","job","slices","_resolveJob","createImageData","newImageData","RasterSourceEvent","RasterSource","processor_","operationType_","operationType","threads_","createLayer","createLayers","useResolutions_","processSources_","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","attributionGetter","sourceAttribution","setOperation","updateFrameState_","allSourcesReady_","imageDatas","onWorkerComplete_","sharedContext","layerOrSource","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","setTileLoadFunction","setTileUrlFunction","defaultTileLoadFunction","imageTile","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","tileJSON_","jsonp","errback","callbackParam","script","cleanup","async","timer","handleTileJSONResponse","handleTileJSONError","client","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","gridExtent","attributionExtent","VectorRenderTile","replayState_","errorTileKeys","renderedTileZ","defaultLoadFunction","sourceTileCache","tileGrids_","tileFeatures","usedSourceTiles","getCacheKeyForTileKey","sourceZ","sourceTileState","listenChange","sourceTileKey","coordKey","hillshade","elevationImage","elevationData","shadeData","dp","twoPi","halfPi","sunEl","sunAz","cosSunEl","sinSunEl","highlightColor","shadowColor","accentColor","encoding","pixelX","pixelY","z0","z1","dzdx","dzdy","aspect","accent","scaled","shade","scaledAccentColor","compositeShadeColor","slopeScaleBase","scaledSlope","cosIncidence","calculateElevation","vert","getTileResolutions","completeOptions","applyStyle","sourceOrLayersOrOptions","optionsOrPath","sourceId","updateSource","Vector","assignSource","setupVectorSource","targetSource","setupGeoJSONSource","spriteScale","onChange","sprite","normalizeSpriteUrl","sizeFactor","spriteUrl","pathname","spritesJson","applyBackground","mapOrLayer","getBackgroundColor","setupBackgroundLayer","setFirstBackground","getSourceIdByRef","sourceOptionsFromTileJSON","tileJSONSource","tileJSONDoc","bounds","tr","extentFromTileJSON","sourceOptions","glLayer","bg","div","getBboxTemplate","setupRasterLayer","getTileUrl","bboxTemplate","setupRasterSource","geoJsonFormat","GeoJSON","geoJsonUrl","extentUrl","setupLayer","glLayers","setupVectorLayer","updateRasterLayerProperties","prerenderRasterLayer","setupGeoJSONLayer","hillshadeLayer","Raster","setupHillshadeLayer","glSourceId","processStyle","mapOrGroup","promises","layerIds","finalizeLayer","debug","mapOrGroupOrElement","HTMLElement","sourceMinZoom","layerMapboxLayerids","mapboxLayer","manageVisibility","setFeatureState","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","O","chunkIds","notFulfilled","fulfilled","enumerable","prop","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal"],"sourceRoot":""}